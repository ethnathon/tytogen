# Copyright © 2005-2008 Obeo

# Project name. This value will be used to defines package
# hierarchy for generated classes (see baseImports key).
projectName=sample

# Package hierarchy prefix. This key will be used as prefix in
# the package hierarchy for generated classes. The package 
# hierarchy pattern is <baseImports>.<projectName>.<functionalPackage>
baseImports=fr.obeo

# Path to the main java source files root, relative to the folder
# where files will be generated. Must start with a slash "/"
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.main.java=/src/main/java

# Path to the test java source files root, relative to the folder
# where files will be generated. Must start with a slash "/".
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.test.java=/src/test/java

# Path to the main resource files root, relative to the folder
# where files will be generated. Must start with a slash "/".
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.main.resources=/src/main/resources

# Path to the test resource files root, relative to the folder
# where files will be generated. Must start with a slash "/".
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.test.resources=/src/test/resources


# Path to the main webapp files root, relative to the folder
# where files will be generated. Must start with a slash "/".
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.test.resources=/src/main/webapp

# Path to the test webapp files root, relative to the folder
# where files will be generated. Must start with a slash "/".
# Let the value empty if you don't want to specify anything.
# This property allows to generate files in a folder structure
# that integrates well with maven.
path.to.test.resources=/src/test/webapp

# If you want packages to look like this:
# com.mycompany.myproject.currentpackage.business, use "true".
# Use "false" (or anything else than "true") if you want packages
# to be arranged technically rather than functionally, like this:
# com.mycompany.myproject.business.currentpackage
use.functional.disposition=false

# Package where entities will be generated
business.package=business

# Package where Value Objects (or Data Transfer Objects, DTO) will be generated
dto.package=dto

# Suffix to use for the class names of value objects
dto.suffix=Dto

# Suffix to use for the class names of entities (empty by default)
entity.suffix=

# Type that will be used for the default PK, called id, used for entities
# that do not declare an explicit Primary Key.
default.pk.type=String
