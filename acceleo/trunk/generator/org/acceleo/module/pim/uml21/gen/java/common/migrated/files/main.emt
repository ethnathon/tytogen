<?xml version="1.0" encoding="Cp1252"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="http://www.eclipse.org/acceleo/mt/2.6.0/core" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:expressions="http://www.eclipse.org/acceleo/mt/2.6.0/expressions" xmlns:mt="http://www.eclipse.org/acceleo/mt/2.6.0" xmlns:statements="http://www.eclipse.org/acceleo/mt/2.6.0/statements">
  <mt:ResourceSet>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.business.entity" imports="/0/@resources.9 /0/@resources.3 /0/@resources.5 /0/@resources.6 /0/@resources.4 /0/@resources.7 /0/@resources.10 /0/@resources.11 /0/@resources.12" beginTag="&lt;%" endTag="%>">
      <scripts begin="1008" end="1094">
        <descriptor begin="972" end="1004" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1013" end="1089">
          <condition xsi:type="expressions:Parenthesis" begin="1013" end="1023">
            <expression xsi:type="expressions:CallSet" begin="1014" end="1022">
              <calls begin="1014" end="1022" name="isEntity" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="1030" end="1044">
            <expression xsi:type="expressions:CallSet" begin="1030" end="1044">
              <calls begin="1030" end="1044" name="pathToMainJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1046" end="1047" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1049" end="1071">
            <expression xsi:type="expressions:CallSet" begin="1049" end="1071">
              <calls begin="1049" end="1062" name="entityPackage" prefix=""/>
              <calls begin="1063" end="1071" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1073" end="1074" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1076" end="1080">
            <expression xsi:type="expressions:CallSet" begin="1076" end="1080">
              <calls begin="1076" end="1080" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1082" end="1089" value=".java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1216" end="15357">
        <descriptor begin="1160" end="1212" name="generate" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1197" end="1209">
              <expression xsi:type="expressions:CallSet" begin="1197" end="1209">
                <calls begin="1197" end="1209" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1216" end="1224" value="package "/>
        <statements xsi:type="statements:Feature" begin="1226" end="1239">
          <expression xsi:type="expressions:CallSet" begin="1226" end="1239">
            <calls begin="1226" end="1239" name="entityPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1241" end="1249" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1251" end="1264">
          <expression xsi:type="expressions:CallSet" begin="1251" end="1264">
            <calls begin="1251" end="1264" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1266" end="1312" value=" for imports&#xD;&#xA;import java.io.Serializable;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="1317" end="2006">
          <condition xsi:type="expressions:Parenthesis" begin="1317" end="1383">
            <expression xsi:type="expressions:Operator" begin="1318" end="1382" operator=">">
              <operands xsi:type="expressions:CallSet" begin="1318" end="1378">
                <calls begin="1318" end="1333" name="classAttributes" prefix=""/>
                <calls begin="1334" end="1370" name="select" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1341" end="1369" value="(upper == -1 || upper > 1)"/>
                </calls>
                <calls begin="1371" end="1378" name="nSize" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="1381" end="1382"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1388" end="1388" value=""/>
          <thenStatements xsi:type="statements:If" begin="1397" end="1538">
            <condition xsi:type="expressions:Parenthesis" begin="1397" end="1476">
              <expression xsi:type="expressions:Operator" begin="1398" end="1475" operator=">">
                <operands xsi:type="expressions:CallSet" begin="1398" end="1471">
                  <calls begin="1398" end="1413" name="classAttributes" prefix=""/>
                  <calls begin="1414" end="1463" name="select" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1421" end="1462" value="(upper == -1 || upper > 1) &amp;&amp; isOrdered"/>
                  </calls>
                  <calls begin="1464" end="1471" name="nSize" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1474" end="1475"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1481" end="1534" value="import java.util.List;&#xD;&#xA;import java.util.ArrayList;&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1545" end="1545" value=""/>
          <thenStatements xsi:type="statements:If" begin="1554" end="1706">
            <condition xsi:type="expressions:Parenthesis" begin="1554" end="1647">
              <expression xsi:type="expressions:Operator" begin="1556" end="1646" operator=">">
                <operands xsi:type="expressions:CallSet" begin="1556" end="1642">
                  <calls begin="1556" end="1571" name="classAttributes" prefix=""/>
                  <calls begin="1572" end="1634" name="select" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1579" end="1633" value="(upper == -1 || upper > 1) &amp;&amp; isUnique &amp;&amp; !isOrdered"/>
                  </calls>
                  <calls begin="1635" end="1642" name="nSize" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1645" end="1646"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1652" end="1702" value="import java.util.Set;&#xD;&#xA;import java.util.HashSet;&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1713" end="1713" value=""/>
          <thenStatements xsi:type="statements:If" begin="1722" end="1995">
            <condition xsi:type="expressions:Parenthesis" begin="1722" end="1816">
              <expression xsi:type="expressions:Operator" begin="1724" end="1815" operator=">">
                <operands xsi:type="expressions:CallSet" begin="1724" end="1811">
                  <calls begin="1724" end="1739" name="classAttributes" prefix=""/>
                  <calls begin="1740" end="1803" name="select" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1747" end="1802" value="(upper == -1 || upper > 1) &amp;&amp; !isUnique &amp;&amp; !isOrdered"/>
                  </calls>
                  <calls begin="1804" end="1811" name="nSize" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1814" end="1815"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1821" end="1851" value="import java.util.Collection;&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="1864" end="1984">
              <condition xsi:type="expressions:Parenthesis" begin="1864" end="1944">
                <expression xsi:type="expressions:Operator" begin="1865" end="1943" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="1865" end="1938">
                    <calls begin="1865" end="1880" name="classAttributes" prefix=""/>
                    <calls begin="1881" end="1930" name="select" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="1888" end="1929" value="(upper == -1 || upper > 1) &amp;&amp; isOrdered"/>
                    </calls>
                    <calls begin="1931" end="1938" name="nSize" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="1942" end="1943"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="1949" end="1976" value="import java.util.HashSet;&#xD;&#xA;"/>
            </thenStatements>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="2013" end="2015" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="2020" end="2131">
          <condition xsi:type="expressions:Parenthesis" begin="2020" end="2102">
            <expression xsi:type="expressions:Operator" begin="2021" end="2101" operator=">">
              <operands xsi:type="expressions:CallSet" begin="2021" end="2097">
                <calls begin="2021" end="2030" name="attribute" prefix=""/>
                <calls begin="2031" end="2035" name="type" prefix="">
                  <filter xsi:type="expressions:Operator" begin="2036" end="2088" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="2036" end="2078">
                      <calls begin="2036" end="2078" name="getProperty" prefix="">
                        <arguments xsi:type="expressions:Operator" begin="2048" end="2077" operator="+">
                          <operands xsi:type="expressions:StringLiteral" begin="2048" end="2070" value="java.typeconversion."/>
                          <operands xsi:type="expressions:CallSet" begin="2073" end="2077">
                            <calls begin="2073" end="2077" name="name" prefix=""/>
                          </operands>
                        </arguments>
                      </calls>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="2082" end="2088" value="Date"/>
                  </filter>
                </calls>
                <calls begin="2090" end="2097" name="nSize" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="2100" end="2101"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2107" end="2131" value="import java.util.Date;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2138" end="2140" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="2146" end="2363">
          <iterator xsi:type="expressions:Parenthesis" begin="2146" end="2233">
            <expression xsi:type="expressions:CallSet" begin="2147" end="2232">
              <calls begin="2147" end="2164" name="getAssociations" prefix=""/>
              <calls begin="2165" end="2186" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2172" end="2185" value="Association"/>
              </calls>
              <calls begin="2187" end="2217" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="2207" end="2216">
                  <calls begin="2207" end="2216" name="current" prefix=""/>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="2218" end="2231">
                  <calls begin="2218" end="2231" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="2238" end="2238" value=""/>
          <statements xsi:type="statements:If" begin="2247" end="2356">
            <condition xsi:type="expressions:Parenthesis" begin="2247" end="2301">
              <expression xsi:type="expressions:Operator" begin="2248" end="2300" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="2248" end="2278">
                  <calls begin="2248" end="2264" name="current" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="2256" end="2263" value="Class"/>
                  </calls>
                  <calls begin="2265" end="2278" name="entityPackage" prefix=""/>
                </operands>
                <operands xsi:type="expressions:CallSet" begin="2282" end="2300">
                  <calls begin="2282" end="2286" name="type" prefix=""/>
                  <calls begin="2287" end="2300" name="entityPackage" prefix=""/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2306" end="2313" value="import "/>
            <thenStatements xsi:type="statements:Feature" begin="2315" end="2333">
              <expression xsi:type="expressions:CallSet" begin="2315" end="2333">
                <calls begin="2315" end="2319" name="type" prefix=""/>
                <calls begin="2320" end="2333" name="entityPackage" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2335" end="2336" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="2338" end="2347">
              <expression xsi:type="expressions:CallSet" begin="2338" end="2347">
                <calls begin="2338" end="2342" name="type" prefix=""/>
                <calls begin="2343" end="2347" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2349" end="2352" value=";&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:If" begin="2375" end="2449">
          <condition xsi:type="expressions:Parenthesis" begin="2375" end="2396">
            <expression xsi:type="expressions:Not" begin="2376" end="2395">
              <expression xsi:type="expressions:CallSet" begin="2377" end="2395">
                <calls begin="2377" end="2387" name="superClass" prefix=""/>
                <calls begin="2388" end="2395" name="isEmpty" prefix=""/>
              </expression>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2402" end="2409" value="import "/>
          <thenStatements xsi:type="statements:Feature" begin="2411" end="2424">
            <expression xsi:type="expressions:CallSet" begin="2411" end="2424">
              <calls begin="2411" end="2424" name="entityPackage" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2426" end="2427" value="."/>
          <thenStatements xsi:type="statements:Feature" begin="2429" end="2444">
            <expression xsi:type="expressions:CallSet" begin="2429" end="2444">
              <calls begin="2429" end="2439" name="superClass" prefix=""/>
              <calls begin="2440" end="2444" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2446" end="2449" value=";&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2456" end="2461" value="&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="2463" end="2474">
          <expression xsi:type="expressions:CallSet" begin="2463" end="2474">
            <calls begin="2463" end="2474" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2476" end="2497" value=" for imports&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="2502" end="2664">
          <condition xsi:type="expressions:Parenthesis" begin="2502" end="2534">
            <expression xsi:type="expressions:Operator" begin="2503" end="2533" operator=">">
              <operands xsi:type="expressions:CallSet" begin="2503" end="2529">
                <calls begin="2503" end="2515" name="ownedComment" prefix=""/>
                <calls begin="2516" end="2520" name="body" prefix=""/>
                <calls begin="2521" end="2529" name="length" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="2532" end="2533"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2539" end="2542" value=" * "/>
          <thenStatements xsi:type="statements:Feature" begin="2544" end="2587">
            <expression xsi:type="expressions:CallSet" begin="2544" end="2587">
              <calls begin="2544" end="2556" name="ownedComment" prefix=""/>
              <calls begin="2557" end="2561" name="body" prefix=""/>
              <calls begin="2562" end="2587" name="replaceAll" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2573" end="2577" value="&#xA;"/>
                <arguments xsi:type="expressions:StringLiteral" begin="2579" end="2586" value="&#xA; * "/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2589" end="2591" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="2603" end="2653" value=" * Warning: no comment in the model for interface "/>
          <elseStatements xsi:type="statements:Feature" begin="2655" end="2659">
            <expression xsi:type="expressions:CallSet" begin="2655" end="2659">
              <calls begin="2655" end="2659" name="name" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="2661" end="2664" value=".&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2671" end="2689" value=" */&#xD;&#xA;public class "/>
        <statements xsi:type="statements:Feature" begin="2691" end="2695">
          <expression xsi:type="expressions:CallSet" begin="2691" end="2695">
            <calls begin="2691" end="2695" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="2699" end="2709">
          <expression xsi:type="expressions:CallSet" begin="2699" end="2709">
            <calls begin="2699" end="2709" name="extensions" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2711" end="2735" value=" implements Serializable"/>
        <statements xsi:type="statements:If" begin="2740" end="2792">
          <condition xsi:type="expressions:Parenthesis" begin="2740" end="2762">
            <expression xsi:type="expressions:CallSet" begin="2741" end="2761">
              <calls begin="2741" end="2761" name="interfaceRealization" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2765" end="2767" value=", "/>
          <thenStatements xsi:type="statements:Feature" begin="2769" end="2790">
            <expression xsi:type="expressions:CallSet" begin="2769" end="2790">
              <calls begin="2769" end="2790" name="implementedInterfaces" prefix=""/>
            </expression>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="2797" end="2929" value=" {&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * serialVersionUID is used for serialization.&#xD;&#xA;     */&#xD;&#xA;    private static final long serialVersionUID = 1L;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="2934" end="3099">
          <condition xsi:type="expressions:Parenthesis" begin="2934" end="2951">
            <expression xsi:type="expressions:Not" begin="2935" end="2950">
              <expression xsi:type="expressions:CallSet" begin="2937" end="2950">
                <calls begin="2937" end="2950" name="hasPrimaryKey" prefix=""/>
              </expression>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2956" end="3099" value="    /**&#xD;&#xA;     * Constant representing the name of the automatic primary key field.&#xD;&#xA;     */&#xD;&#xA;    public static final String PROP_ID = &quot;id&quot;;&#xD;&#xA;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:For" begin="3112" end="3392">
          <iterator xsi:type="expressions:Parenthesis" begin="3112" end="3231">
            <expression xsi:type="expressions:Operator" begin="3113" end="3230" operator="+">
              <operands xsi:type="expressions:CallSet" begin="3113" end="3147">
                <calls begin="3113" end="3128" name="classAttributes" prefix=""/>
                <calls begin="3129" end="3147" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="3136" end="3146" value="Property"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:CallSet" begin="3150" end="3230">
                <calls begin="3150" end="3170" name="interfaceRealization" prefix=""/>
                <calls begin="3171" end="3177" name="target" prefix=""/>
                <calls begin="3178" end="3197" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="3185" end="3196" value="Interface"/>
                  <filter xsi:type="expressions:CallSet" begin="3198" end="3206">
                    <calls begin="3198" end="3206" name="isEntity" prefix=""/>
                  </filter>
                </calls>
                <calls begin="3208" end="3214" name="nFirst" prefix=""/>
                <calls begin="3215" end="3224" name="attribute" prefix="">
                  <filter xsi:type="expressions:CallSet" begin="3225" end="3229">
                    <calls begin="3225" end="3229" name="isPK" prefix=""/>
                  </filter>
                </calls>
              </operands>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3236" end="3296" value="    /**&#xD;&#xA;     * Constant representing the name of the field "/>
          <statements xsi:type="statements:Feature" begin="3298" end="3302">
            <expression xsi:type="expressions:CallSet" begin="3298" end="3302">
              <calls begin="3298" end="3302" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3304" end="3352" value=".&#xD;&#xA;     */&#xD;&#xA;    public static final String PROP_"/>
          <statements xsi:type="statements:Feature" begin="3354" end="3372">
            <expression xsi:type="expressions:CallSet" begin="3354" end="3372">
              <calls begin="3354" end="3358" name="name" prefix=""/>
              <calls begin="3359" end="3372" name="toUpperCase" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3374" end="3378" value=" = &quot;"/>
          <statements xsi:type="statements:Feature" begin="3380" end="3384">
            <expression xsi:type="expressions:CallSet" begin="3380" end="3384">
              <calls begin="3380" end="3384" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3386" end="3392" value="&quot;;&#xD;&#xA;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:If" begin="3404" end="3677">
          <condition xsi:type="expressions:Parenthesis" begin="3404" end="3419">
            <expression xsi:type="expressions:CallSet" begin="3405" end="3418">
              <calls begin="3405" end="3418" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3424" end="3489" value="    /**&#xD;&#xA;     * Explicit primary key.&#xD;&#xA;     */&#xD;&#xA;    private long "/>
          <thenStatements xsi:type="statements:Feature" begin="3491" end="3529">
            <expression xsi:type="expressions:CallSet" begin="3491" end="3529">
              <calls begin="3491" end="3505" name="getPKAttribute" prefix=""/>
              <calls begin="3506" end="3524" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="3513" end="3523" value="Property"/>
              </calls>
              <calls begin="3525" end="3529" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="3531" end="3536" value=";&#xD;&#xA;&#xD;&#xA;"/>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="3547" end="3585">
              <expression xsi:type="expressions:Not" begin="3548" end="3584">
                <expression xsi:type="expressions:CallSet" begin="3550" end="3584">
                  <calls begin="3550" end="3560" name="superClass" prefix=""/>
                  <calls begin="3561" end="3584" name="hasStereotype" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="3575" end="3583" value="Entity"/>
                  </calls>
                </expression>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="3590" end="3653" value="    /**&#xD;&#xA;     * Automatic primary key.&#xD;&#xA;     */&#xD;&#xA;    protected "/>
            <thenStatements xsi:type="statements:Feature" begin="3655" end="3668">
              <expression xsi:type="expressions:CallSet" begin="3655" end="3668">
                <calls begin="3655" end="3668" name="defaultPKType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3670" end="3677" value=" id;&#xA;&#xD;&#xA;"/>
          </elseIf>
        </statements>
        <statements xsi:type="statements:For" begin="3690" end="3830">
          <iterator xsi:type="expressions:Parenthesis" begin="3690" end="3734">
            <expression xsi:type="expressions:CallSet" begin="3691" end="3733">
              <calls begin="3691" end="3706" name="classAttributes" prefix=""/>
              <calls begin="3707" end="3725" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="3714" end="3724" value="Property"/>
                <filter xsi:type="expressions:Not" begin="3726" end="3732">
                  <expression xsi:type="expressions:CallSet" begin="3728" end="3732">
                    <calls begin="3728" end="3732" name="isPK" prefix=""/>
                  </expression>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3739" end="3761" value="    /**&#xD;&#xA;     * Field "/>
          <statements xsi:type="statements:Feature" begin="3763" end="3767">
            <expression xsi:type="expressions:CallSet" begin="3763" end="3767">
              <calls begin="3763" end="3767" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3769" end="3795" value=".&#xD;&#xA;     */&#xD;&#xA;    protected "/>
          <statements xsi:type="statements:Feature" begin="3797" end="3814">
            <expression xsi:type="expressions:CallSet" begin="3797" end="3814">
              <calls begin="3797" end="3814" name="convertToJavaType" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3816" end="3817" value=" "/>
          <statements xsi:type="statements:Feature" begin="3819" end="3823">
            <expression xsi:type="expressions:CallSet" begin="3819" end="3823">
              <calls begin="3819" end="3823" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3825" end="3830" value=";&#xD;&#xA;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="3837" end="3895" value="    /**&#xD;&#xA;     * Default constructor.&#xD;&#xA;     */&#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="3897" end="3901">
          <expression xsi:type="expressions:CallSet" begin="3897" end="3901">
            <calls begin="3897" end="3901" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3903" end="3927" value="() {&#xD;&#xA;        super();&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="3933" end="4177">
          <iterator xsi:type="expressions:Parenthesis" begin="3933" end="3969">
            <expression xsi:type="expressions:CallSet" begin="3934" end="3968">
              <calls begin="3934" end="3949" name="classAttributes" prefix=""/>
              <calls begin="3950" end="3968" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="3957" end="3967" value="Property"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3974" end="3974" value=""/>
          <statements xsi:type="statements:If" begin="3983" end="4170">
            <condition xsi:type="expressions:Parenthesis" begin="3983" end="3995">
              <expression xsi:type="expressions:Operator" begin="3984" end="3994" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="3984" end="3989">
                  <calls begin="3984" end="3989" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="3993" end="3994" value="1"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4000" end="4000" value=""/>
            <thenStatements xsi:type="statements:If" begin="4009" end="4147">
              <condition xsi:type="expressions:Parenthesis" begin="4009" end="4020">
                <expression xsi:type="expressions:CallSet" begin="4010" end="4019">
                  <calls begin="4010" end="4019" name="isOrdered" prefix=""/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="4025" end="4033" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="4035" end="4039">
                <expression xsi:type="expressions:CallSet" begin="4035" end="4039">
                  <calls begin="4035" end="4039" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="4041" end="4058" value=" = new ArrayList&lt;"/>
              <thenStatements xsi:type="statements:Feature" begin="4060" end="4069">
                <expression xsi:type="expressions:CallSet" begin="4060" end="4069">
                  <calls begin="4060" end="4064" name="type" prefix=""/>
                  <calls begin="4065" end="4069" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="4071" end="4077" value=">();&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="4093" end="4101" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="4103" end="4107">
                <expression xsi:type="expressions:CallSet" begin="4103" end="4107">
                  <calls begin="4103" end="4107" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="4109" end="4124" value=" = new HashSet&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="4126" end="4135">
                <expression xsi:type="expressions:CallSet" begin="4126" end="4135">
                  <calls begin="4126" end="4130" name="type" prefix=""/>
                  <calls begin="4131" end="4135" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="4137" end="4143" value=">();&#xD;&#xA;"/>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="4184" end="4193" value="    }&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="4198" end="5034">
          <condition xsi:type="expressions:Parenthesis" begin="4198" end="4213">
            <expression xsi:type="expressions:CallSet" begin="4199" end="4212">
              <calls begin="4199" end="4212" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="4218" end="4218" value=""/>
          <thenStatements xsi:type="statements:For" begin="4228" end="4637">
            <iterator xsi:type="expressions:Parenthesis" begin="4228" end="4263">
              <expression xsi:type="expressions:CallSet" begin="4229" end="4262">
                <calls begin="4229" end="4243" name="getPKAttribute" prefix=""/>
                <calls begin="4244" end="4262" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="4251" end="4261" value="Property"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="4268" end="4333" value="    /**&#xD;&#xA;     * Returns the primary key.&#xD;&#xA;     * @return Returns "/>
            <statements xsi:type="statements:Feature" begin="4335" end="4339">
              <expression xsi:type="expressions:CallSet" begin="4335" end="4339">
                <calls begin="4335" end="4339" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4341" end="4372" value=".&#xD;&#xA;     */&#xD;&#xA;    public long get"/>
            <statements xsi:type="statements:Feature" begin="4374" end="4389">
              <expression xsi:type="expressions:CallSet" begin="4374" end="4389">
                <calls begin="4374" end="4378" name="name" prefix=""/>
                <calls begin="4379" end="4389" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4391" end="4412" value="() {&#xD;&#xA;        return "/>
            <statements xsi:type="statements:Feature" begin="4414" end="4418">
              <expression xsi:type="expressions:CallSet" begin="4414" end="4418">
                <calls begin="4414" end="4418" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4420" end="4485" value=";&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Sets the primary key.&#xD;&#xA;     * @param "/>
            <statements xsi:type="statements:Feature" begin="4487" end="4496">
              <expression xsi:type="expressions:CallSet" begin="4487" end="4496">
                <calls begin="4487" end="4496" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4498" end="4542" value=" Value to set.&#xD;&#xA;     */&#xD;&#xA;    public void set"/>
            <statements xsi:type="statements:Feature" begin="4544" end="4559">
              <expression xsi:type="expressions:CallSet" begin="4544" end="4559">
                <calls begin="4544" end="4548" name="name" prefix=""/>
                <calls begin="4549" end="4559" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4561" end="4573" value="(final long "/>
            <statements xsi:type="statements:Feature" begin="4575" end="4584">
              <expression xsi:type="expressions:CallSet" begin="4575" end="4584">
                <calls begin="4575" end="4584" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4586" end="4599" value=") {&#xD;&#xA;        "/>
            <statements xsi:type="statements:Feature" begin="4601" end="4605">
              <expression xsi:type="expressions:CallSet" begin="4601" end="4605">
                <calls begin="4601" end="4605" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4607" end="4610" value=" = "/>
            <statements xsi:type="statements:Feature" begin="4612" end="4621">
              <expression xsi:type="expressions:CallSet" begin="4612" end="4621">
                <calls begin="4612" end="4621" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4623" end="4633" value=";&#xD;&#xA;    }&#xD;&#xA;"/>
          </thenStatements>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="4655" end="4693">
              <expression xsi:type="expressions:Not" begin="4656" end="4692">
                <expression xsi:type="expressions:CallSet" begin="4658" end="4692">
                  <calls begin="4658" end="4668" name="superClass" prefix=""/>
                  <calls begin="4669" end="4692" name="hasStereotype" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="4683" end="4691" value="Entity"/>
                  </calls>
                </expression>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4698" end="4787" value="    /**&#xD;&#xA;     * Returns the identifier.&#xD;&#xA;     * @return Returns id.&#xD;&#xA;     */&#xD;&#xA;    public "/>
            <thenStatements xsi:type="statements:Feature" begin="4789" end="4802">
              <expression xsi:type="expressions:CallSet" begin="4789" end="4802">
                <calls begin="4789" end="4802" name="defaultPKType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4804" end="4976" value=" getId() {&#xD;&#xA;        return id;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Sets a value to parameter Id.&#xD;&#xA;     * @param someId Value of the identifier.&#xD;&#xA;     */&#xD;&#xA;    public void setId(final "/>
            <thenStatements xsi:type="statements:Feature" begin="4978" end="4991">
              <expression xsi:type="expressions:CallSet" begin="4978" end="4991">
                <calls begin="4978" end="4991" name="defaultPKType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4993" end="5034" value=" someId) {&#xD;&#xA;        id = someId;&#xD;&#xA;    }&#xD;&#xA;"/>
          </elseIf>
        </statements>
        <statements xsi:type="statements:If" begin="5046" end="5686">
          <condition xsi:type="expressions:Parenthesis" begin="5046" end="5100">
            <expression xsi:type="expressions:Operator" begin="5047" end="5099" operator=">">
              <operands xsi:type="expressions:CallSet" begin="5047" end="5095">
                <calls begin="5047" end="5062" name="classAttributes" prefix=""/>
                <calls begin="5063" end="5081" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="5070" end="5080" value="Property"/>
                  <filter xsi:type="expressions:Not" begin="5082" end="5088">
                    <expression xsi:type="expressions:CallSet" begin="5084" end="5088">
                      <calls begin="5084" end="5088" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
                <calls begin="5090" end="5095" name="nSize" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="5098" end="5099"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="5105" end="5169" value="&#xD;&#xA;    /**&#xD;&#xA;     * Constructor with all parameters initialized.&#xD;&#xA;"/>
          <thenStatements xsi:type="statements:For" begin="5175" end="5473">
            <iterator xsi:type="expressions:Parenthesis" begin="5175" end="5219">
              <expression xsi:type="expressions:CallSet" begin="5176" end="5218">
                <calls begin="5176" end="5191" name="classAttributes" prefix=""/>
                <calls begin="5192" end="5210" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="5199" end="5209" value="Property"/>
                  <filter xsi:type="expressions:Not" begin="5211" end="5217">
                    <expression xsi:type="expressions:CallSet" begin="5213" end="5217">
                      <calls begin="5213" end="5217" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="5224" end="5238" value="     * @param "/>
            <statements xsi:type="statements:Feature" begin="5240" end="5249">
              <expression xsi:type="expressions:CallSet" begin="5240" end="5249">
                <calls begin="5240" end="5249" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="5251" end="5253" value="&#xD;&#xA;"/>
            <statements xsi:type="statements:If" begin="5266" end="5466">
              <condition xsi:type="expressions:Parenthesis" begin="5266" end="5298">
                <expression xsi:type="expressions:Operator" begin="5267" end="5297" operator=">">
                  <operands xsi:type="expressions:CallSet" begin="5267" end="5293">
                    <calls begin="5267" end="5279" name="ownedComment" prefix=""/>
                    <calls begin="5280" end="5284" name="body" prefix=""/>
                    <calls begin="5285" end="5293" name="length" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="5296" end="5297"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="5303" end="5321" value="     *            "/>
              <thenStatements xsi:type="statements:Feature" begin="5323" end="5381">
                <expression xsi:type="expressions:CallSet" begin="5323" end="5381">
                  <calls begin="5323" end="5335" name="ownedComment" prefix=""/>
                  <calls begin="5336" end="5340" name="body" prefix=""/>
                  <calls begin="5341" end="5381" name="replaceAll" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="5352" end="5356" value="&#xA;"/>
                    <arguments xsi:type="expressions:StringLiteral" begin="5358" end="5380" value="&#xA;     *            "/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="5383" end="5385" value="&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="5405" end="5458" value="     *            Warning, no comment in the model.&#xD;&#xA;"/>
            </statements>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="5480" end="5500" value="     */&#xD;&#xA;    public "/>
          <thenStatements xsi:type="statements:Feature" begin="5502" end="5506">
            <expression xsi:type="expressions:CallSet" begin="5502" end="5506">
              <calls begin="5502" end="5506" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="5508" end="5509" value="("/>
          <thenStatements xsi:type="statements:Feature" begin="5511" end="5575">
            <expression xsi:type="expressions:CallSet" begin="5511" end="5575">
              <calls begin="5511" end="5526" name="classAttributes" prefix=""/>
              <calls begin="5527" end="5545" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="5534" end="5544" value="Property"/>
                <filter xsi:type="expressions:Not" begin="5546" end="5552">
                  <expression xsi:type="expressions:CallSet" begin="5548" end="5552">
                    <calls begin="5548" end="5552" name="isPK" prefix=""/>
                  </expression>
                </filter>
              </calls>
              <calls begin="5554" end="5565" name="asParameter" prefix=""/>
              <calls begin="5566" end="5575" name="sep" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="5570" end="5574" value=", "/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="5577" end="5582" value=") {&#xD;&#xA;"/>
          <thenStatements xsi:type="statements:For" begin="5588" end="5672">
            <iterator xsi:type="expressions:Parenthesis" begin="5588" end="5632">
              <expression xsi:type="expressions:CallSet" begin="5589" end="5631">
                <calls begin="5589" end="5604" name="classAttributes" prefix=""/>
                <calls begin="5605" end="5623" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="5612" end="5622" value="Property"/>
                  <filter xsi:type="expressions:Not" begin="5624" end="5630">
                    <expression xsi:type="expressions:CallSet" begin="5626" end="5630">
                      <calls begin="5626" end="5630" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="5637" end="5645" value="        "/>
            <statements xsi:type="statements:Feature" begin="5647" end="5651">
              <expression xsi:type="expressions:CallSet" begin="5647" end="5651">
                <calls begin="5647" end="5651" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="5653" end="5656" value=" = "/>
            <statements xsi:type="statements:Feature" begin="5658" end="5667">
              <expression xsi:type="expressions:CallSet" begin="5658" end="5667">
                <calls begin="5658" end="5667" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="5669" end="5672" value=";&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="5679" end="5686" value="    }&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="5693" end="5695" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="5701" end="8113">
          <iterator xsi:type="expressions:Parenthesis" begin="5701" end="5745">
            <expression xsi:type="expressions:CallSet" begin="5702" end="5744">
              <calls begin="5702" end="5717" name="classAttributes" prefix=""/>
              <calls begin="5718" end="5736" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="5725" end="5735" value="Property"/>
                <filter xsi:type="expressions:Not" begin="5737" end="5743">
                  <expression xsi:type="expressions:CallSet" begin="5739" end="5743">
                    <calls begin="5739" end="5743" name="isPK" prefix=""/>
                  </expression>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="5750" end="5774" value="    /**&#xD;&#xA;     * Returns "/>
          <statements xsi:type="statements:Feature" begin="5776" end="5780">
            <expression xsi:type="expressions:CallSet" begin="5776" end="5780">
              <calls begin="5776" end="5780" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="5782" end="5785" value=".&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="5794" end="5969">
            <condition xsi:type="expressions:Parenthesis" begin="5794" end="5826">
              <expression xsi:type="expressions:Operator" begin="5795" end="5825" operator=">">
                <operands xsi:type="expressions:CallSet" begin="5795" end="5821">
                  <calls begin="5795" end="5807" name="ownedComment" prefix=""/>
                  <calls begin="5808" end="5812" name="body" prefix=""/>
                  <calls begin="5813" end="5821" name="length" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="5824" end="5825"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="5831" end="5846" value="     * @return "/>
            <thenStatements xsi:type="statements:Feature" begin="5848" end="5895">
              <expression xsi:type="expressions:CallSet" begin="5848" end="5895">
                <calls begin="5848" end="5860" name="ownedComment" prefix=""/>
                <calls begin="5861" end="5865" name="body" prefix=""/>
                <calls begin="5866" end="5895" name="replaceAll" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="5877" end="5881" value="&#xA;"/>
                  <arguments xsi:type="expressions:StringLiteral" begin="5883" end="5894" value="&#xA;     * "/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5897" end="5899" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="5915" end="5965" value="     * @return Warning, no comment in the model.&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="5976" end="5989" value="     */&#xD;&#xA;    "/>
          <statements xsi:type="statements:Feature" begin="5991" end="6006">
            <expression xsi:type="expressions:CallSet" begin="5991" end="6006">
              <calls begin="5991" end="6006" name="getterSignature" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="6008" end="6012" value=" {&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="6021" end="6242">
            <condition xsi:type="expressions:Parenthesis" begin="6021" end="6032">
              <expression xsi:type="expressions:CallSet" begin="6022" end="6031">
                <calls begin="6022" end="6031" name="isDerived" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="6037" end="6048" value="        // "/>
            <thenStatements xsi:type="statements:Feature" begin="6050" end="6063">
              <expression xsi:type="expressions:CallSet" begin="6050" end="6063">
                <calls begin="6050" end="6063" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6065" end="6077" value=" of derived "/>
            <thenStatements xsi:type="statements:Feature" begin="6079" end="6083">
              <expression xsi:type="expressions:CallSet" begin="6079" end="6083">
                <calls begin="6079" end="6083" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6085" end="6132" value=" attribute&#xD;&#xA;        // TODO Logic to calculate "/>
            <thenStatements xsi:type="statements:Feature" begin="6134" end="6138">
              <expression xsi:type="expressions:CallSet" begin="6134" end="6138">
                <calls begin="6134" end="6138" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6140" end="6157" value="&#xD;&#xA;        return "/>
            <thenStatements xsi:type="statements:Feature" begin="6159" end="6163">
              <expression xsi:type="expressions:CallSet" begin="6159" end="6163">
                <calls begin="6159" end="6163" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6165" end="6179" value=";&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="6181" end="6192">
              <expression xsi:type="expressions:CallSet" begin="6181" end="6192">
                <calls begin="6181" end="6192" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6194" end="6196" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="6212" end="6227" value="        return "/>
            <elseStatements xsi:type="statements:Feature" begin="6229" end="6233">
              <expression xsi:type="expressions:CallSet" begin="6229" end="6233">
                <calls begin="6229" end="6233" name="name" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="6235" end="6238" value=";&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="6249" end="6258" value="    }&#xD;&#xA;&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="6267" end="6683">
            <condition xsi:type="expressions:Parenthesis" begin="6267" end="6294">
              <expression xsi:type="expressions:Operator" begin="6268" end="6293" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="6268" end="6279">
                  <expression xsi:type="expressions:CallSet" begin="6269" end="6279">
                    <calls begin="6269" end="6279" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="6283" end="6293">
                  <expression xsi:type="expressions:CallSet" begin="6284" end="6293">
                    <calls begin="6284" end="6293" name="isDerived" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="6299" end="6341" value="    /**&#xD;&#xA;     * Sets a value to parameter "/>
            <thenStatements xsi:type="statements:Feature" begin="6343" end="6347">
              <expression xsi:type="expressions:CallSet" begin="6343" end="6347">
                <calls begin="6343" end="6347" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6349" end="6366" value=".&#xD;&#xA;     * @param "/>
            <thenStatements xsi:type="statements:Feature" begin="6368" end="6377">
              <expression xsi:type="expressions:CallSet" begin="6368" end="6377">
                <calls begin="6368" end="6377" name="paramName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6379" end="6381" value="&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="6394" end="6594">
              <condition xsi:type="expressions:Parenthesis" begin="6394" end="6426">
                <expression xsi:type="expressions:Operator" begin="6395" end="6425" operator=">">
                  <operands xsi:type="expressions:CallSet" begin="6395" end="6421">
                    <calls begin="6395" end="6407" name="ownedComment" prefix=""/>
                    <calls begin="6408" end="6412" name="body" prefix=""/>
                    <calls begin="6413" end="6421" name="length" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="6424" end="6425"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="6431" end="6449" value="     *            "/>
              <thenStatements xsi:type="statements:Feature" begin="6451" end="6509">
                <expression xsi:type="expressions:CallSet" begin="6451" end="6509">
                  <calls begin="6451" end="6463" name="ownedComment" prefix=""/>
                  <calls begin="6464" end="6468" name="body" prefix=""/>
                  <calls begin="6469" end="6509" name="replaceAll" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="6480" end="6484" value="&#xA;"/>
                    <arguments xsi:type="expressions:StringLiteral" begin="6486" end="6508" value="&#xA;     *            "/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="6511" end="6513" value="&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="6533" end="6586" value="     *            Warning, no comment in the model.&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6601" end="6614" value="     */&#xD;&#xA;    "/>
            <thenStatements xsi:type="statements:Feature" begin="6616" end="6631">
              <expression xsi:type="expressions:CallSet" begin="6616" end="6631">
                <calls begin="6616" end="6631" name="setterSignature" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6633" end="6645" value=" {&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="6647" end="6651">
              <expression xsi:type="expressions:CallSet" begin="6647" end="6651">
                <calls begin="6647" end="6651" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6653" end="6656" value=" = "/>
            <thenStatements xsi:type="statements:Feature" begin="6658" end="6667">
              <expression xsi:type="expressions:CallSet" begin="6658" end="6667">
                <calls begin="6658" end="6667" name="paramName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6669" end="6679" value=";&#xD;&#xA;    }&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="6690" end="6692" value="&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="6701" end="8106">
            <condition xsi:type="expressions:Parenthesis" begin="6701" end="6727">
              <expression xsi:type="expressions:Operator" begin="6702" end="6726" operator="||">
                <operands xsi:type="expressions:Operator" begin="6702" end="6713" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="6702" end="6707">
                    <calls begin="6702" end="6707" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="6711" end="6713" value="-1"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="6717" end="6726" operator=">">
                  <operands xsi:type="expressions:CallSet" begin="6717" end="6722">
                    <calls begin="6717" end="6722" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="6725" end="6726" value="1"/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="6732" end="6755" value="    /**&#xD;&#xA;     * Adds a "/>
            <thenStatements xsi:type="statements:Feature" begin="6757" end="6761">
              <expression xsi:type="expressions:CallSet" begin="6757" end="6761">
                <calls begin="6757" end="6761" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6763" end="6771" value=" to the "/>
            <thenStatements xsi:type="statements:Feature" begin="6773" end="6777">
              <expression xsi:type="expressions:CallSet" begin="6773" end="6777">
                <calls begin="6773" end="6777" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6779" end="6793" value=" Collection.&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="6806" end="6953">
              <condition xsi:type="expressions:Parenthesis" begin="6806" end="6824">
                <expression xsi:type="expressions:Operator" begin="6807" end="6823" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="6807" end="6815">
                    <calls begin="6807" end="6815" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="6819" end="6823"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="6829" end="6879" value="     * Birectionnal association : add the current "/>
              <thenStatements xsi:type="statements:Feature" begin="6881" end="6891">
                <expression xsi:type="expressions:CallSet" begin="6881" end="6891">
                  <calls begin="6881" end="6886" name="class" prefix=""/>
                  <calls begin="6887" end="6891" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="6893" end="6924" value=" instance to&#xD;&#xA;     * the given "/>
              <thenStatements xsi:type="statements:Feature" begin="6926" end="6930">
                <expression xsi:type="expressions:CallSet" begin="6926" end="6930">
                  <calls begin="6926" end="6930" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="6932" end="6945" value=" parameter.&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6960" end="6974" value="     * @param "/>
            <thenStatements xsi:type="statements:Feature" begin="6976" end="6980">
              <expression xsi:type="expressions:CallSet" begin="6976" end="6980">
                <calls begin="6976" end="6980" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6982" end="7030" value="Elt Element to add&#xD;&#xA;     */&#xD;&#xA;    public void add"/>
            <thenStatements xsi:type="statements:Feature" begin="7032" end="7047">
              <expression xsi:type="expressions:CallSet" begin="7032" end="7047">
                <calls begin="7032" end="7036" name="name" prefix=""/>
                <calls begin="7037" end="7047" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7049" end="7056" value="(final "/>
            <thenStatements xsi:type="statements:Feature" begin="7058" end="7080">
              <expression xsi:type="expressions:CallSet" begin="7058" end="7080">
                <calls begin="7058" end="7062" name="type" prefix=""/>
                <calls begin="7063" end="7080" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7082" end="7083" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="7085" end="7089">
              <expression xsi:type="expressions:CallSet" begin="7085" end="7089">
                <calls begin="7085" end="7089" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7091" end="7107" value="Elt) {&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="7109" end="7113">
              <expression xsi:type="expressions:CallSet" begin="7109" end="7113">
                <calls begin="7109" end="7113" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7115" end="7120" value=".add("/>
            <thenStatements xsi:type="statements:Feature" begin="7122" end="7126">
              <expression xsi:type="expressions:CallSet" begin="7122" end="7126">
                <calls begin="7122" end="7126" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7128" end="7135" value="Elt);&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="7148" end="7391">
              <condition xsi:type="expressions:Parenthesis" begin="7148" end="7166">
                <expression xsi:type="expressions:Operator" begin="7149" end="7165" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="7149" end="7157">
                    <calls begin="7149" end="7157" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="7161" end="7165"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="7171" end="7171" value=""/>
              <thenStatements xsi:type="statements:If" begin="7188" end="7376">
                <condition xsi:type="expressions:Parenthesis" begin="7188" end="7209">
                  <expression xsi:type="expressions:Operator" begin="7189" end="7208" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="7189" end="7203">
                      <calls begin="7189" end="7197" name="opposite" prefix=""/>
                      <calls begin="7198" end="7203" name="upper" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="7207" end="7208" value="1"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="7214" end="7222" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="7224" end="7228">
                  <expression xsi:type="expressions:CallSet" begin="7224" end="7228">
                    <calls begin="7224" end="7228" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7230" end="7237" value="Elt.set"/>
                <thenStatements xsi:type="statements:Feature" begin="7239" end="7263">
                  <expression xsi:type="expressions:CallSet" begin="7239" end="7263">
                    <calls begin="7239" end="7247" name="opposite" prefix=""/>
                    <calls begin="7248" end="7252" name="name" prefix=""/>
                    <calls begin="7253" end="7263" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7265" end="7274" value="(this);&#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="7298" end="7306" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="7308" end="7312">
                  <expression xsi:type="expressions:CallSet" begin="7308" end="7312">
                    <calls begin="7308" end="7312" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="7314" end="7321" value="Elt.get"/>
                <elseStatements xsi:type="statements:Feature" begin="7323" end="7347">
                  <expression xsi:type="expressions:CallSet" begin="7323" end="7347">
                    <calls begin="7323" end="7331" name="opposite" prefix=""/>
                    <calls begin="7332" end="7336" name="name" prefix=""/>
                    <calls begin="7337" end="7347" name="toU1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="7349" end="7364" value="().add(this);&#xD;&#xA;"/>
              </thenStatements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7398" end="7433" value="    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Removes a "/>
            <thenStatements xsi:type="statements:Feature" begin="7435" end="7439">
              <expression xsi:type="expressions:CallSet" begin="7435" end="7439">
                <calls begin="7435" end="7439" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7441" end="7451" value=" from the "/>
            <thenStatements xsi:type="statements:Feature" begin="7453" end="7457">
              <expression xsi:type="expressions:CallSet" begin="7453" end="7457">
                <calls begin="7453" end="7457" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7459" end="7473" value=" Collection.&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="7486" end="7638">
              <condition xsi:type="expressions:Parenthesis" begin="7486" end="7504">
                <expression xsi:type="expressions:Operator" begin="7487" end="7503" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="7487" end="7495">
                    <calls begin="7487" end="7495" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="7499" end="7503"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="7509" end="7562" value="     * Birectionnal association : remove the current "/>
              <thenStatements xsi:type="statements:Feature" begin="7564" end="7574">
                <expression xsi:type="expressions:CallSet" begin="7564" end="7574">
                  <calls begin="7564" end="7569" name="class" prefix=""/>
                  <calls begin="7570" end="7574" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="7576" end="7609" value=" instance&#xD;&#xA;     * from the given "/>
              <thenStatements xsi:type="statements:Feature" begin="7611" end="7615">
                <expression xsi:type="expressions:CallSet" begin="7611" end="7615">
                  <calls begin="7611" end="7615" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="7617" end="7630" value=" parameter.&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7645" end="7659" value="     * @param "/>
            <thenStatements xsi:type="statements:Feature" begin="7661" end="7665">
              <expression xsi:type="expressions:CallSet" begin="7661" end="7665">
                <calls begin="7661" end="7665" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7667" end="7721" value="Elt Element to remove&#xD;&#xA;     */&#xD;&#xA;    public void remove"/>
            <thenStatements xsi:type="statements:Feature" begin="7723" end="7738">
              <expression xsi:type="expressions:CallSet" begin="7723" end="7738">
                <calls begin="7723" end="7727" name="name" prefix=""/>
                <calls begin="7728" end="7738" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7740" end="7747" value="(final "/>
            <thenStatements xsi:type="statements:Feature" begin="7749" end="7771">
              <expression xsi:type="expressions:CallSet" begin="7749" end="7771">
                <calls begin="7749" end="7753" name="type" prefix=""/>
                <calls begin="7754" end="7771" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7773" end="7774" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="7776" end="7780">
              <expression xsi:type="expressions:CallSet" begin="7776" end="7780">
                <calls begin="7776" end="7780" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7782" end="7798" value="Elt) {&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="7800" end="7804">
              <expression xsi:type="expressions:CallSet" begin="7800" end="7804">
                <calls begin="7800" end="7804" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7806" end="7814" value=".remove("/>
            <thenStatements xsi:type="statements:Feature" begin="7816" end="7820">
              <expression xsi:type="expressions:CallSet" begin="7816" end="7820">
                <calls begin="7816" end="7820" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7822" end="7829" value="Elt);&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="7842" end="8088">
              <condition xsi:type="expressions:Parenthesis" begin="7842" end="7860">
                <expression xsi:type="expressions:Operator" begin="7843" end="7859" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="7843" end="7851">
                    <calls begin="7843" end="7851" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="7855" end="7859"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="7865" end="7865" value=""/>
              <thenStatements xsi:type="statements:If" begin="7882" end="8073">
                <condition xsi:type="expressions:Parenthesis" begin="7882" end="7903">
                  <expression xsi:type="expressions:Operator" begin="7883" end="7902" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="7883" end="7897">
                      <calls begin="7883" end="7891" name="opposite" prefix=""/>
                      <calls begin="7892" end="7897" name="upper" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="7901" end="7902" value="1"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="7908" end="7916" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="7918" end="7922">
                  <expression xsi:type="expressions:CallSet" begin="7918" end="7922">
                    <calls begin="7918" end="7922" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7924" end="7931" value="Elt.set"/>
                <thenStatements xsi:type="statements:Feature" begin="7933" end="7957">
                  <expression xsi:type="expressions:CallSet" begin="7933" end="7957">
                    <calls begin="7933" end="7941" name="opposite" prefix=""/>
                    <calls begin="7942" end="7946" name="name" prefix=""/>
                    <calls begin="7947" end="7957" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7959" end="7968" value="(null);&#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="7992" end="8000" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="8002" end="8006">
                  <expression xsi:type="expressions:CallSet" begin="8002" end="8006">
                    <calls begin="8002" end="8006" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="8008" end="8015" value="Elt.get"/>
                <elseStatements xsi:type="statements:Feature" begin="8017" end="8041">
                  <expression xsi:type="expressions:CallSet" begin="8017" end="8041">
                    <calls begin="8017" end="8025" name="opposite" prefix=""/>
                    <calls begin="8026" end="8030" name="name" prefix=""/>
                    <calls begin="8031" end="8041" name="toU1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="8043" end="8061" value="().remove(this);&#xD;&#xA;"/>
              </thenStatements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8095" end="8102" value="    }&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="8120" end="8122" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="8127" end="9830">
          <condition xsi:type="expressions:Parenthesis" begin="8127" end="8149">
            <expression xsi:type="expressions:CallSet" begin="8128" end="8148">
              <calls begin="8128" end="8148" name="interfaceRealization" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="8154" end="8154" value=""/>
          <thenStatements xsi:type="statements:For" begin="8164" end="9823">
            <iterator xsi:type="expressions:Parenthesis" begin="8164" end="8213">
              <expression xsi:type="expressions:CallSet" begin="8165" end="8212">
                <calls begin="8165" end="8185" name="interfaceRealization" prefix=""/>
                <calls begin="8186" end="8192" name="target" prefix=""/>
                <calls begin="8193" end="8212" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="8200" end="8211" value="Interface"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="8218" end="8253" value="    /* Implementation of interface "/>
            <statements xsi:type="statements:Feature" begin="8255" end="8259">
              <expression xsi:type="expressions:CallSet" begin="8255" end="8259">
                <calls begin="8255" end="8259" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="8261" end="8273" value=": start */&#xD;&#xA;"/>
            <statements xsi:type="statements:For" begin="8287" end="9757">
              <iterator xsi:type="expressions:Parenthesis" begin="8287" end="8329">
                <expression xsi:type="expressions:CallSet" begin="8288" end="8328">
                  <calls begin="8288" end="8301" name="itfAttributes" prefix=""/>
                  <calls begin="8302" end="8320" name="filter" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="8309" end="8319" value="Property"/>
                    <filter xsi:type="expressions:Not" begin="8321" end="8327">
                      <expression xsi:type="expressions:CallSet" begin="8323" end="8327">
                        <calls begin="8323" end="8327" name="isPK" prefix=""/>
                      </expression>
                    </filter>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Feature" begin="8336" end="8345">
                <expression xsi:type="expressions:CallSet" begin="8336" end="8345">
                  <calls begin="8336" end="8340" name="name" prefix=""/>
                  <calls begin="8341" end="8345" name="push" prefix=""/>
                </expression>
              </statements>
              <statements xsi:type="statements:If" begin="8352" end="9742">
                <condition xsi:type="expressions:Parenthesis" begin="8352" end="8396">
                  <expression xsi:type="expressions:Not" begin="8353" end="8395">
                    <expression xsi:type="expressions:CallSet" begin="8355" end="8395">
                      <calls begin="8355" end="8371" name="current" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="8363" end="8370" value="Class"/>
                      </calls>
                      <calls begin="8372" end="8381" name="attribute" prefix="">
                        <filter xsi:type="expressions:Operator" begin="8382" end="8394" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="8382" end="8386">
                            <calls begin="8382" end="8386" name="name" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:CallSet" begin="8390" end="8394">
                            <calls begin="8390" end="8394" name="peek" prefix=""/>
                          </operands>
                        </filter>
                      </calls>
                    </expression>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Feature" begin="8401" end="8404">
                  <expression xsi:type="expressions:CallSet" begin="8401" end="8404">
                    <calls begin="8401" end="8404" name="pop" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8406" end="8442" value="&#xD;&#xA;    /**&#xD;&#xA;     * Implementation of "/>
                <thenStatements xsi:type="statements:Feature" begin="8444" end="8469">
                  <expression xsi:type="expressions:CallSet" begin="8444" end="8469">
                    <calls begin="8444" end="8464" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="8452" end="8463" value="Interface"/>
                    </calls>
                    <calls begin="8465" end="8469" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8471" end="8474" value="'s "/>
                <thenStatements xsi:type="statements:Feature" begin="8476" end="8480">
                  <expression xsi:type="expressions:CallSet" begin="8476" end="8480">
                    <calls begin="8476" end="8480" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8482" end="8492" value=" getter.&#xD;&#xA;"/>
                <thenStatements xsi:type="statements:If" begin="8505" end="8688">
                  <condition xsi:type="expressions:Parenthesis" begin="8505" end="8537">
                    <expression xsi:type="expressions:Operator" begin="8506" end="8536" operator=">">
                      <operands xsi:type="expressions:CallSet" begin="8506" end="8532">
                        <calls begin="8506" end="8518" name="ownedComment" prefix=""/>
                        <calls begin="8519" end="8523" name="body" prefix=""/>
                        <calls begin="8524" end="8532" name="length" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="8535" end="8536"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="8542" end="8557" value="     * @return "/>
                  <thenStatements xsi:type="statements:Feature" begin="8559" end="8606">
                    <expression xsi:type="expressions:CallSet" begin="8559" end="8606">
                      <calls begin="8559" end="8571" name="ownedComment" prefix=""/>
                      <calls begin="8572" end="8576" name="body" prefix=""/>
                      <calls begin="8577" end="8606" name="replaceAll" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="8588" end="8592" value="&#xA;"/>
                        <arguments xsi:type="expressions:StringLiteral" begin="8594" end="8605" value="&#xA;     * "/>
                      </calls>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="8608" end="8610" value="&#xD;&#xA;"/>
                  <elseStatements xsi:type="statements:Text" begin="8630" end="8680" value="     * @return Warning, no comment in the model.&#xD;&#xA;"/>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8695" end="8707" value="     * @see "/>
                <thenStatements xsi:type="statements:Feature" begin="8709" end="8734">
                  <expression xsi:type="expressions:CallSet" begin="8709" end="8734">
                    <calls begin="8709" end="8729" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="8717" end="8728" value="Interface"/>
                    </calls>
                    <calls begin="8730" end="8734" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8736" end="8737" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="8739" end="8749">
                  <expression xsi:type="expressions:CallSet" begin="8739" end="8749">
                    <calls begin="8739" end="8749" name="getterName" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8751" end="8766" value="&#xD;&#xA;     */&#xD;&#xA;    "/>
                <thenStatements xsi:type="statements:Feature" begin="8768" end="8783">
                  <expression xsi:type="expressions:CallSet" begin="8768" end="8783">
                    <calls begin="8768" end="8783" name="getterSignature" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8785" end="8800" value=" {&#xD;&#xA;        // "/>
                <thenStatements xsi:type="statements:Feature" begin="8802" end="8815">
                  <expression xsi:type="expressions:CallSet" begin="8802" end="8815">
                    <calls begin="8802" end="8815" name="startUserCode" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8817" end="8832" value=" for getter of "/>
                <thenStatements xsi:type="statements:Feature" begin="8834" end="8838">
                  <expression xsi:type="expressions:CallSet" begin="8834" end="8838">
                    <calls begin="8834" end="8838" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8840" end="8981" value=" [DO NOT REMOVE]&#xD;&#xA;        // TODO Implement me !&#xD;&#xA;        throw new UnsupportedOperationException(&quot;Method not yet implemented&quot;);&#xD;&#xA;        // "/>
                <thenStatements xsi:type="statements:Feature" begin="8983" end="8994">
                  <expression xsi:type="expressions:CallSet" begin="8983" end="8994">
                    <calls begin="8983" end="8994" name="endUserCode" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8996" end="9011" value=" for getter of "/>
                <thenStatements xsi:type="statements:Feature" begin="9013" end="9017">
                  <expression xsi:type="expressions:CallSet" begin="9013" end="9017">
                    <calls begin="9013" end="9017" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9019" end="9080" value=" [DO NOT REMOVE]&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Implementation of "/>
                <thenStatements xsi:type="statements:Feature" begin="9082" end="9107">
                  <expression xsi:type="expressions:CallSet" begin="9082" end="9107">
                    <calls begin="9082" end="9102" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="9090" end="9101" value="Interface"/>
                    </calls>
                    <calls begin="9103" end="9107" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9109" end="9112" value="'s "/>
                <thenStatements xsi:type="statements:Feature" begin="9114" end="9118">
                  <expression xsi:type="expressions:CallSet" begin="9114" end="9118">
                    <calls begin="9114" end="9118" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9120" end="9144" value=" setter.&#xD;&#xA;     * @param "/>
                <thenStatements xsi:type="statements:Feature" begin="9146" end="9155">
                  <expression xsi:type="expressions:CallSet" begin="9146" end="9155">
                    <calls begin="9146" end="9155" name="paramName" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9157" end="9159" value="&#xD;&#xA;"/>
                <thenStatements xsi:type="statements:If" begin="9172" end="9372">
                  <condition xsi:type="expressions:Parenthesis" begin="9172" end="9204">
                    <expression xsi:type="expressions:Operator" begin="9173" end="9203" operator=">">
                      <operands xsi:type="expressions:CallSet" begin="9173" end="9199">
                        <calls begin="9173" end="9185" name="ownedComment" prefix=""/>
                        <calls begin="9186" end="9190" name="body" prefix=""/>
                        <calls begin="9191" end="9199" name="length" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="9202" end="9203"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="9209" end="9227" value="     *            "/>
                  <thenStatements xsi:type="statements:Feature" begin="9229" end="9287">
                    <expression xsi:type="expressions:CallSet" begin="9229" end="9287">
                      <calls begin="9229" end="9241" name="ownedComment" prefix=""/>
                      <calls begin="9242" end="9246" name="body" prefix=""/>
                      <calls begin="9247" end="9287" name="replaceAll" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="9258" end="9262" value="&#xA;"/>
                        <arguments xsi:type="expressions:StringLiteral" begin="9264" end="9286" value="&#xA;     *            "/>
                      </calls>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="9289" end="9291" value="&#xD;&#xA;"/>
                  <elseStatements xsi:type="statements:Text" begin="9311" end="9364" value="     *            Warning, no comment in the model.&#xD;&#xA;"/>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9379" end="9391" value="     * @see "/>
                <thenStatements xsi:type="statements:Feature" begin="9393" end="9418">
                  <expression xsi:type="expressions:CallSet" begin="9393" end="9418">
                    <calls begin="9393" end="9413" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="9401" end="9412" value="Interface"/>
                    </calls>
                    <calls begin="9414" end="9418" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9420" end="9421" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="9423" end="9433">
                  <expression xsi:type="expressions:CallSet" begin="9423" end="9433">
                    <calls begin="9423" end="9433" name="setterName" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9435" end="9450" value="&#xD;&#xA;     */&#xD;&#xA;    "/>
                <thenStatements xsi:type="statements:Feature" begin="9452" end="9467">
                  <expression xsi:type="expressions:CallSet" begin="9452" end="9467">
                    <calls begin="9452" end="9467" name="setterSignature" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9469" end="9484" value=" {&#xD;&#xA;        // "/>
                <thenStatements xsi:type="statements:Feature" begin="9486" end="9499">
                  <expression xsi:type="expressions:CallSet" begin="9486" end="9499">
                    <calls begin="9486" end="9499" name="startUserCode" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9501" end="9516" value=" for setter of "/>
                <thenStatements xsi:type="statements:Feature" begin="9518" end="9522">
                  <expression xsi:type="expressions:CallSet" begin="9518" end="9522">
                    <calls begin="9518" end="9522" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9524" end="9665" value=" [DO NOT REMOVE]&#xD;&#xA;        // TODO Implement me !&#xD;&#xA;        throw new UnsupportedOperationException(&quot;Method not yet implemented&quot;);&#xD;&#xA;        // "/>
                <thenStatements xsi:type="statements:Feature" begin="9667" end="9678">
                  <expression xsi:type="expressions:CallSet" begin="9667" end="9678">
                    <calls begin="9667" end="9678" name="endUserCode" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9680" end="9695" value=" for setter of "/>
                <thenStatements xsi:type="statements:Feature" begin="9697" end="9701">
                  <expression xsi:type="expressions:CallSet" begin="9697" end="9701">
                    <calls begin="9697" end="9701" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="9703" end="9730" value=" [DO NOT REMOVE]&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
              </statements>
              <statements xsi:type="statements:Text" begin="9747" end="9749" value="&#xD;&#xA;"/>
            </statements>
            <statements xsi:type="statements:Text" begin="9764" end="9799" value="    /* Implementation of interface "/>
            <statements xsi:type="statements:Feature" begin="9801" end="9805">
              <expression xsi:type="expressions:CallSet" begin="9801" end="9805">
                <calls begin="9801" end="9805" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="9807" end="9819" value=": end */&#xD;&#xA;&#xD;&#xA;"/>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Comment" begin="9841" end="9883" value=" Recopie vers et depuis les value objects "/>
        <statements xsi:type="statements:If" begin="9894" end="11401">
          <condition xsi:type="expressions:Parenthesis" begin="9894" end="9908">
            <expression xsi:type="expressions:CallSet" begin="9895" end="9907">
              <calls begin="9895" end="9907" name="dtoPerEntity" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="9913" end="10030" value="    /**&#xD;&#xA;     * Provides a Data value object corresponding to this entity.&#xD;&#xA;     * @return Returns a new instance of "/>
          <thenStatements xsi:type="statements:Feature" begin="10032" end="10039">
            <expression xsi:type="expressions:CallSet" begin="10032" end="10039">
              <calls begin="10032" end="10039" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10041" end="10125" value=" which contains&#xD;&#xA;     * the same values as the current entity.&#xD;&#xA;     */&#xD;&#xA;    public "/>
          <thenStatements xsi:type="statements:Feature" begin="10127" end="10134">
            <expression xsi:type="expressions:CallSet" begin="10127" end="10134">
              <calls begin="10127" end="10134" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10136" end="10140" value=" get"/>
          <thenStatements xsi:type="statements:Feature" begin="10142" end="10151">
            <expression xsi:type="expressions:CallSet" begin="10142" end="10151">
              <calls begin="10142" end="10151" name="dtoSuffix" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10153" end="10167" value="() {&#xD;&#xA;        "/>
          <thenStatements xsi:type="statements:Feature" begin="10169" end="10176">
            <expression xsi:type="expressions:CallSet" begin="10169" end="10176">
              <calls begin="10169" end="10176" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10178" end="10192" value=" result = new "/>
          <thenStatements xsi:type="statements:Feature" begin="10194" end="10201">
            <expression xsi:type="expressions:CallSet" begin="10194" end="10201">
              <calls begin="10194" end="10201" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10203" end="10222" value="();&#xD;&#xA;        copyTo"/>
          <thenStatements xsi:type="statements:Feature" begin="10224" end="10233">
            <expression xsi:type="expressions:CallSet" begin="10224" end="10233">
              <calls begin="10224" end="10233" name="dtoSuffix" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10235" end="10486" value="(result);&#xD;&#xA;        return result;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Copies the current entity to the given value object. Associations are&#xD;&#xA;     * NOT copied.&#xD;&#xA;     * @param aValueObject The value object to get the values from.&#xD;&#xA;     */&#xD;&#xA;    public void copyTo"/>
          <thenStatements xsi:type="statements:Feature" begin="10488" end="10497">
            <expression xsi:type="expressions:CallSet" begin="10488" end="10497">
              <calls begin="10488" end="10497" name="dtoSuffix" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10499" end="10506" value="(final "/>
          <thenStatements xsi:type="statements:Feature" begin="10508" end="10515">
            <expression xsi:type="expressions:CallSet" begin="10508" end="10515">
              <calls begin="10508" end="10515" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10517" end="10535" value=" aValueObject) {&#xD;&#xA;"/>
          <thenStatements xsi:type="statements:If" begin="10544" end="10615">
            <condition xsi:type="expressions:Parenthesis" begin="10544" end="10556">
              <expression xsi:type="expressions:CallSet" begin="10545" end="10555">
                <calls begin="10545" end="10555" name="superClass" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="10561" end="10581" value="        super.copyTo"/>
            <thenStatements xsi:type="statements:Feature" begin="10583" end="10592">
              <expression xsi:type="expressions:CallSet" begin="10583" end="10592">
                <calls begin="10583" end="10592" name="dtoSuffix" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10594" end="10611" value="(aValueObject);&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10622" end="10622" value=""/>
          <thenStatements xsi:type="statements:For" begin="10632" end="10775">
            <iterator xsi:type="expressions:Parenthesis" begin="10632" end="10696">
              <expression xsi:type="expressions:CallSet" begin="10633" end="10695">
                <calls begin="10633" end="10647" name="ownedAttribute" prefix="">
                  <filter xsi:type="expressions:Operator" begin="10648" end="10694" operator="&amp;&amp;">
                    <operands xsi:type="expressions:Not" begin="10648" end="10679">
                      <expression xsi:type="expressions:CallSet" begin="10650" end="10679">
                        <calls begin="10650" end="10654" name="type" prefix=""/>
                        <calls begin="10655" end="10670" name="filter" prefix="">
                          <arguments xsi:type="expressions:StringLiteral" begin="10662" end="10669" value="Class"/>
                        </calls>
                        <calls begin="10671" end="10679" name="isEntity" prefix=""/>
                      </expression>
                    </operands>
                    <operands xsi:type="expressions:Not" begin="10683" end="10694">
                      <expression xsi:type="expressions:CallSet" begin="10685" end="10694">
                        <calls begin="10685" end="10694" name="isDerived" prefix=""/>
                      </expression>
                    </operands>
                  </filter>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="10701" end="10725" value="        aValueObject.set"/>
            <statements xsi:type="statements:Feature" begin="10727" end="10742">
              <expression xsi:type="expressions:CallSet" begin="10727" end="10742">
                <calls begin="10727" end="10731" name="name" prefix=""/>
                <calls begin="10732" end="10742" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="10744" end="10748" value="(get"/>
            <statements xsi:type="statements:Feature" begin="10750" end="10763">
              <expression xsi:type="expressions:CallSet" begin="10750" end="10763">
                <calls begin="10750" end="10754" name="name" prefix=""/>
                <calls begin="10755" end="10763" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="10765" end="10771" value="());&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="10782" end="11080" value="    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Updates the values of this entity from those of the given value object.&#xD;&#xA;     * Associations are NOT updated.&#xD;&#xA;     * &lt;strong>N.B.&lt;/strong> The PK value is not updated.&#xD;&#xA;     * @param aValueObject The value object to copy the values to.&#xD;&#xA;     */&#xD;&#xA;    public void updateFrom"/>
          <thenStatements xsi:type="statements:Feature" begin="11082" end="11091">
            <expression xsi:type="expressions:CallSet" begin="11082" end="11091">
              <calls begin="11082" end="11091" name="dtoSuffix" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="11093" end="11100" value="(final "/>
          <thenStatements xsi:type="statements:Feature" begin="11102" end="11109">
            <expression xsi:type="expressions:CallSet" begin="11102" end="11109">
              <calls begin="11102" end="11109" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="11111" end="11129" value=" aValueObject) {&#xD;&#xA;"/>
          <thenStatements xsi:type="statements:If" begin="11138" end="11213">
            <condition xsi:type="expressions:Parenthesis" begin="11138" end="11150">
              <expression xsi:type="expressions:CallSet" begin="11139" end="11149">
                <calls begin="11139" end="11149" name="superClass" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="11155" end="11179" value="        super.updateFrom"/>
            <thenStatements xsi:type="statements:Feature" begin="11181" end="11190">
              <expression xsi:type="expressions:CallSet" begin="11181" end="11190">
                <calls begin="11181" end="11190" name="dtoSuffix" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11192" end="11209" value="(aValueObject);&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="11220" end="11220" value=""/>
          <thenStatements xsi:type="statements:For" begin="11230" end="11385">
            <iterator xsi:type="expressions:Parenthesis" begin="11230" end="11304">
              <expression xsi:type="expressions:CallSet" begin="11231" end="11303">
                <calls begin="11231" end="11245" name="ownedAttribute" prefix="">
                  <filter xsi:type="expressions:Operator" begin="11246" end="11302" operator="&amp;&amp;">
                    <operands xsi:type="expressions:Not" begin="11246" end="11277">
                      <expression xsi:type="expressions:CallSet" begin="11248" end="11277">
                        <calls begin="11248" end="11252" name="type" prefix=""/>
                        <calls begin="11253" end="11268" name="filter" prefix="">
                          <arguments xsi:type="expressions:StringLiteral" begin="11260" end="11267" value="Class"/>
                        </calls>
                        <calls begin="11269" end="11277" name="isEntity" prefix=""/>
                      </expression>
                    </operands>
                    <operands xsi:type="expressions:Not" begin="11281" end="11287">
                      <expression xsi:type="expressions:CallSet" begin="11283" end="11287">
                        <calls begin="11283" end="11287" name="isPK" prefix=""/>
                      </expression>
                    </operands>
                    <operands xsi:type="expressions:Not" begin="11291" end="11302">
                      <expression xsi:type="expressions:CallSet" begin="11293" end="11302">
                        <calls begin="11293" end="11302" name="isDerived" prefix=""/>
                      </expression>
                    </operands>
                  </filter>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="11309" end="11320" value="        set"/>
            <statements xsi:type="statements:Feature" begin="11322" end="11337">
              <expression xsi:type="expressions:CallSet" begin="11322" end="11337">
                <calls begin="11322" end="11326" name="name" prefix=""/>
                <calls begin="11327" end="11337" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="11339" end="11356" value="(aValueObject.get"/>
            <statements xsi:type="statements:Feature" begin="11358" end="11373">
              <expression xsi:type="expressions:CallSet" begin="11358" end="11373">
                <calls begin="11358" end="11362" name="name" prefix=""/>
                <calls begin="11363" end="11373" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="11375" end="11381" value="());&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="11392" end="11401" value="    }&#xD;&#xA;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:For" begin="11414" end="11713">
          <iterator xsi:type="expressions:Parenthesis" begin="11414" end="11467">
            <expression xsi:type="expressions:CallSet" begin="11415" end="11466">
              <calls begin="11415" end="11429" name="ownedOperation" prefix="">
                <filter xsi:type="expressions:Not" begin="11430" end="11465">
                  <expression xsi:type="expressions:CallSet" begin="11431" end="11465">
                    <calls begin="11431" end="11465" name="hasStereotype" prefix="">
                      <arguments xsi:type="expressions:CallSet" begin="11445" end="11464">
                        <calls begin="11445" end="11464" name="getProperty" prefix="">
                          <arguments xsi:type="expressions:StringLiteral" begin="11457" end="11463" value="find"/>
                        </calls>
                      </arguments>
                    </calls>
                  </expression>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Feature" begin="11478" end="11493">
            <expression xsi:type="expressions:CallSet" begin="11478" end="11493">
              <calls begin="11478" end="11493" name="generateJavadoc" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="11495" end="11501" value="&#xD;&#xA;    "/>
          <statements xsi:type="statements:Feature" begin="11503" end="11512">
            <expression xsi:type="expressions:CallSet" begin="11503" end="11512">
              <calls begin="11503" end="11512" name="signature" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="11514" end="11529" value=" {&#xD;&#xA;        // "/>
          <statements xsi:type="statements:Feature" begin="11531" end="11544">
            <expression xsi:type="expressions:CallSet" begin="11531" end="11544">
              <calls begin="11531" end="11544" name="startUserCode" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="11546" end="11550" value=" of "/>
          <statements xsi:type="statements:Feature" begin="11552" end="11556">
            <expression xsi:type="expressions:CallSet" begin="11552" end="11556">
              <calls begin="11552" end="11556" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="11558" end="11586" value="&#xD;&#xA;        // TODO implement "/>
          <statements xsi:type="statements:Feature" begin="11588" end="11592">
            <expression xsi:type="expressions:CallSet" begin="11588" end="11592">
              <calls begin="11588" end="11592" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="11594" end="11687" value="&#xD;&#xA;        throw new UnsupportedOperationException(&quot;Method not yet implemented&quot;);&#xD;&#xA;        // "/>
          <statements xsi:type="statements:Feature" begin="11689" end="11700">
            <expression xsi:type="expressions:CallSet" begin="11689" end="11700">
              <calls begin="11689" end="11700" name="endUserCode" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="11702" end="11713" value="&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="11720" end="11892" value="    /**&#xD;&#xA;     * Equality test based on attributes values.&#xD;&#xA;     * @param other Value to compare&#xD;&#xA;     * @return Returns true if and only if given object is an instance of&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="11902" end="12161">
          <condition xsi:type="expressions:Parenthesis" begin="11902" end="11952">
            <expression xsi:type="expressions:Operator" begin="11903" end="11951" operator="||">
              <operands xsi:type="expressions:CallSet" begin="11903" end="11916">
                <calls begin="11903" end="11916" name="hasPrimaryKey" prefix=""/>
              </operands>
              <operands xsi:type="expressions:CallSet" begin="11920" end="11951">
                <calls begin="11920" end="11933" name="defaultPKType" prefix=""/>
                <calls begin="11934" end="11951" name="isPrimitiveType" prefix=""/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="11957" end="11964" value="     * "/>
          <thenStatements xsi:type="statements:Feature" begin="11966" end="11970">
            <expression xsi:type="expressions:CallSet" begin="11966" end="11970">
              <calls begin="11966" end="11970" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="11972" end="12020" value=" and the given object has the same PK as this.&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="12037" end="12044" value="     * "/>
          <elseStatements xsi:type="statements:Feature" begin="12046" end="12050">
            <expression xsi:type="expressions:CallSet" begin="12046" end="12050">
              <calls begin="12046" end="12050" name="name" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="12052" end="12156" value=" and the given object has the same PK as this&#xD;&#xA;     * if the PK is not null or their fields are equal.&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="12168" end="12252" value="     */&#xD;&#xA;    @Override&#xD;&#xA;    public boolean equals(final Object other) {&#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="12254" end="12267">
          <expression xsi:type="expressions:CallSet" begin="12254" end="12267">
            <calls begin="12254" end="12267" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12269" end="12380" value=" for equals&#xD;&#xA;        if (this == other) {&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;        if (!(other instanceof "/>
        <statements xsi:type="statements:Feature" begin="12382" end="12386">
          <expression xsi:type="expressions:CallSet" begin="12382" end="12386">
            <calls begin="12382" end="12386" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12388" end="12446" value=")) {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;        final "/>
        <statements xsi:type="statements:Feature" begin="12448" end="12452">
          <expression xsi:type="expressions:CallSet" begin="12448" end="12452">
            <calls begin="12448" end="12452" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12454" end="12470" value=" castedOther = ("/>
        <statements xsi:type="statements:Feature" begin="12472" end="12476">
          <expression xsi:type="expressions:CallSet" begin="12472" end="12476">
            <calls begin="12472" end="12476" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12478" end="12488" value=") other;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="12497" end="13388">
          <condition xsi:type="expressions:Parenthesis" begin="12497" end="12512">
            <expression xsi:type="expressions:CallSet" begin="12498" end="12511">
              <calls begin="12498" end="12511" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="12517" end="12517" value=""/>
          <thenStatements xsi:type="statements:For" begin="12531" end="12645">
            <iterator xsi:type="expressions:Parenthesis" begin="12531" end="12566">
              <expression xsi:type="expressions:CallSet" begin="12532" end="12565">
                <calls begin="12532" end="12546" name="getPKAttribute" prefix=""/>
                <calls begin="12547" end="12565" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="12554" end="12564" value="Property"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="12571" end="12586" value="        return "/>
            <statements xsi:type="statements:Feature" begin="12588" end="12592">
              <expression xsi:type="expressions:CallSet" begin="12588" end="12592">
                <calls begin="12588" end="12592" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12594" end="12613" value=" == castedOther.get"/>
            <statements xsi:type="statements:Feature" begin="12615" end="12630">
              <expression xsi:type="expressions:CallSet" begin="12615" end="12630">
                <calls begin="12615" end="12619" name="name" prefix=""/>
                <calls begin="12620" end="12630" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12632" end="12637" value="();&#xD;&#xA;"/>
          </thenStatements>
          <elseStatements xsi:type="statements:Text" begin="12764" end="12885" value="        if (id != null &amp;&amp; castedOther.getId() != null) {&#xD;&#xA;            return id.equals(castedOther.getId());&#xD;&#xA;        }&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:For" begin="12899" end="13377">
            <iterator xsi:type="expressions:Parenthesis" begin="12899" end="12924">
              <expression xsi:type="expressions:CallSet" begin="12900" end="12923">
                <calls begin="12900" end="12915" name="classAttributes" prefix="">
                  <filter xsi:type="expressions:Not" begin="12916" end="12922">
                    <expression xsi:type="expressions:CallSet" begin="12918" end="12922">
                      <calls begin="12918" end="12922" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="12930" end="12930" value=""/>
            <statements xsi:type="statements:If" begin="12947" end="13362">
              <condition xsi:type="expressions:Parenthesis" begin="12947" end="12985">
                <expression xsi:type="expressions:Operator" begin="12948" end="12984" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="12948" end="12974">
                    <calls begin="12948" end="12952" name="type" prefix=""/>
                    <calls begin="12953" end="12974" name="isJavaPrimitiveType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="12978" end="12984" value="true"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="12990" end="13002" value="        if ("/>
              <thenStatements xsi:type="statements:Feature" begin="13004" end="13008">
                <expression xsi:type="expressions:CallSet" begin="13004" end="13008">
                  <calls begin="13004" end="13008" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="13010" end="13029" value=" != castedOther.get"/>
              <thenStatements xsi:type="statements:Feature" begin="13031" end="13046">
                <expression xsi:type="expressions:CallSet" begin="13031" end="13046">
                  <calls begin="13031" end="13035" name="name" prefix=""/>
                  <calls begin="13036" end="13046" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="13048" end="13093" value="()) {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="13117" end="13130" value="        if (("/>
              <elseStatements xsi:type="statements:Feature" begin="13132" end="13136">
                <expression xsi:type="expressions:CallSet" begin="13132" end="13136">
                  <calls begin="13132" end="13136" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="13138" end="13165" value=" == null &amp;&amp; castedOther.get"/>
              <elseStatements xsi:type="statements:Feature" begin="13167" end="13182">
                <expression xsi:type="expressions:CallSet" begin="13167" end="13182">
                  <calls begin="13167" end="13171" name="name" prefix=""/>
                  <calls begin="13172" end="13182" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="13184" end="13215" value="() != null) &#xD;&#xA;             || ("/>
              <elseStatements xsi:type="statements:Feature" begin="13217" end="13221">
                <expression xsi:type="expressions:CallSet" begin="13217" end="13221">
                  <calls begin="13217" end="13221" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="13223" end="13236" value=" != null &amp;&amp; !"/>
              <elseStatements xsi:type="statements:Feature" begin="13238" end="13242">
                <expression xsi:type="expressions:CallSet" begin="13238" end="13242">
                  <calls begin="13238" end="13242" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="13244" end="13285" value=".equals(&#xD;&#xA;                castedOther.get"/>
              <elseStatements xsi:type="statements:Feature" begin="13287" end="13302">
                <expression xsi:type="expressions:CallSet" begin="13287" end="13302">
                  <calls begin="13287" end="13291" name="name" prefix=""/>
                  <calls begin="13292" end="13302" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="13304" end="13350" value="()))) {&#xD;&#xA;           return false;&#xD;&#xA;        }&#xD;&#xA;"/>
            </statements>
          </elseStatements>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="12667" end="12700">
              <expression xsi:type="expressions:CallSet" begin="12668" end="12699">
                <calls begin="12668" end="12681" name="defaultPKType" prefix=""/>
                <calls begin="12682" end="12699" name="isPrimitiveType" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="12705" end="12748" value="        return id == castedOther.getId();&#xD;&#xA;"/>
          </elseIf>
        </statements>
        <statements xsi:type="statements:Text" begin="13394" end="13394" value=""/>
        <statements xsi:type="statements:If" begin="13403" end="13518">
          <condition xsi:type="expressions:Parenthesis" begin="13403" end="13439">
            <expression xsi:type="expressions:CallSet" begin="13404" end="13438">
              <calls begin="13404" end="13414" name="superClass" prefix=""/>
              <calls begin="13415" end="13438" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="13429" end="13437" value="Entity"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="13444" end="13477" value="    &#x9;return super.equals(other);&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="13492" end="13514" value="        return true;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="13525" end="13536" value="        // "/>
        <statements xsi:type="statements:Feature" begin="13538" end="13549">
          <expression xsi:type="expressions:CallSet" begin="13538" end="13549">
            <calls begin="13538" end="13549" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13551" end="13735" value=" for equals&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * HashTable code based on attributes hashcodes.&#xD;&#xA;     * @return Returns hash value&#xD;&#xA;     */&#xD;&#xA;    @Override&#xD;&#xA;    public int hashCode() {&#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="13737" end="13750">
          <expression xsi:type="expressions:CallSet" begin="13737" end="13750">
            <calls begin="13737" end="13750" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13752" end="13792" value=" for hashCode&#xD;&#xA;        int result = 0;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="13801" end="14909">
          <condition xsi:type="expressions:Parenthesis" begin="13801" end="13816">
            <expression xsi:type="expressions:CallSet" begin="13802" end="13815">
              <calls begin="13802" end="13815" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="13821" end="13847" value="        result = new Long("/>
          <thenStatements xsi:type="statements:Feature" begin="13849" end="13887">
            <expression xsi:type="expressions:CallSet" begin="13849" end="13887">
              <calls begin="13849" end="13863" name="getPKAttribute" prefix=""/>
              <calls begin="13864" end="13882" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="13871" end="13881" value="Property"/>
              </calls>
              <calls begin="13883" end="13887" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="13889" end="13904" value=").hashCode();&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="14036" end="14116" value="        if (id != null) {&#xD;&#xA;            result = id.hashCode();&#xD;&#xA;        } else {"/>
          <elseStatements xsi:type="statements:Comment" begin="14120" end="14251" value=" This else is required to be synchro with the equals() method, otherwise we could generate different hashCodes for equal objects ! "/>
          <elseStatements xsi:type="statements:Text" begin="14255" end="14257" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:For" begin="14271" end="14887">
            <iterator xsi:type="expressions:Parenthesis" begin="14271" end="14331">
              <expression xsi:type="expressions:CallSet" begin="14272" end="14330">
                <calls begin="14272" end="14281" name="attribute" prefix="">
                  <filter xsi:type="expressions:Not" begin="14282" end="14288">
                    <expression xsi:type="expressions:CallSet" begin="14284" end="14288">
                      <calls begin="14284" end="14288" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
                <calls begin="14290" end="14330" name="filterExistProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="14310" end="14323" value="association"/>
                  <arguments xsi:type="expressions:BooleanLiteral" begin="14324" end="14329"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="14337" end="14337" value=""/>
            <statements xsi:type="statements:If" begin="14354" end="14872">
              <condition xsi:type="expressions:Parenthesis" begin="14354" end="14378">
                <expression xsi:type="expressions:Operator" begin="14355" end="14377" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="14355" end="14364">
                    <calls begin="14355" end="14359" name="type" prefix=""/>
                    <calls begin="14360" end="14364" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="14368" end="14377" value="Boolean"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="14383" end="14399" value="            if ("/>
              <thenStatements xsi:type="statements:Feature" begin="14401" end="14405">
                <expression xsi:type="expressions:CallSet" begin="14401" end="14405">
                  <calls begin="14401" end="14405" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="14407" end="14454" value=") {&#xD;&#xA;                result++;&#xD;&#xA;            }&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="14747" end="14763" value="            if ("/>
              <elseStatements xsi:type="statements:Feature" begin="14765" end="14769">
                <expression xsi:type="expressions:CallSet" begin="14765" end="14769">
                  <calls begin="14765" end="14769" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="14771" end="14823" value=" != null) {&#xD;&#xA;                result = 29 * result + "/>
              <elseStatements xsi:type="statements:Feature" begin="14825" end="14829">
                <expression xsi:type="expressions:CallSet" begin="14825" end="14829">
                  <calls begin="14825" end="14829" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="14831" end="14860" value=".hashCode();&#xD;&#xA;            }&#xD;&#xA;"/>
              <elseIf>
                <condition xsi:type="expressions:Parenthesis" begin="14477" end="14501">
                  <expression xsi:type="expressions:Operator" begin="14478" end="14500" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="14478" end="14487">
                      <calls begin="14478" end="14482" name="type" prefix=""/>
                      <calls begin="14483" end="14487" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="14491" end="14500" value="Integer"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="14506" end="14541" value="            result = 29 * result + "/>
                <thenStatements xsi:type="statements:Feature" begin="14543" end="14547">
                  <expression xsi:type="expressions:CallSet" begin="14543" end="14547">
                    <calls begin="14543" end="14547" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="14549" end="14552" value=";&#xD;&#xA;"/>
              </elseIf>
              <elseIf>
                <condition xsi:type="expressions:Parenthesis" begin="14575" end="14597">
                  <expression xsi:type="expressions:Operator" begin="14576" end="14596" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="14576" end="14585">
                      <calls begin="14576" end="14580" name="type" prefix=""/>
                      <calls begin="14581" end="14585" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="14589" end="14596" value="Float"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="14602" end="14618" value="            if ("/>
                <thenStatements xsi:type="statements:Feature" begin="14620" end="14624">
                  <expression xsi:type="expressions:CallSet" begin="14620" end="14624">
                    <calls begin="14620" end="14624" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="14626" end="14685" value=" != null) {&#xD;&#xA;                result = (int) (29 * result + "/>
                <thenStatements xsi:type="statements:Feature" begin="14687" end="14691">
                  <expression xsi:type="expressions:CallSet" begin="14687" end="14691">
                    <calls begin="14687" end="14691" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="14693" end="14723" value=".hashCode());&#xD;&#xA;            }&#xD;&#xA;"/>
              </elseIf>
            </statements>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="14894" end="14905" value="        }&#xD;&#xA;"/>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="13919" end="13952">
              <expression xsi:type="expressions:CallSet" begin="13920" end="13951">
                <calls begin="13920" end="13933" name="defaultPKType" prefix=""/>
                <calls begin="13934" end="13951" name="isPrimitiveType" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="13957" end="13978" value="        result = new "/>
            <thenStatements xsi:type="statements:Feature" begin="13980" end="14000">
              <expression xsi:type="expressions:CallSet" begin="13980" end="14000">
                <calls begin="13980" end="14000" name="defaultPKTypeWrapper" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="14002" end="14020" value="(id).hashCode();&#xD;&#xA;"/>
          </elseIf>
        </statements>
        <statements xsi:type="statements:Text" begin="14916" end="14916" value=""/>
        <statements xsi:type="statements:If" begin="14925" end="15054">
          <condition xsi:type="expressions:Parenthesis" begin="14925" end="14961">
            <expression xsi:type="expressions:CallSet" begin="14926" end="14960">
              <calls begin="14926" end="14936" name="superClass" prefix=""/>
              <calls begin="14937" end="14960" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="14951" end="14959" value="Entity"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="14966" end="15010" value="    &#x9;return 29 * result + super.hashCode();&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="15025" end="15049" value="        return result;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="15060" end="15071" value="        // "/>
        <statements xsi:type="statements:Feature" begin="15073" end="15084">
          <expression xsi:type="expressions:CallSet" begin="15073" end="15084">
            <calls begin="15073" end="15084" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="15086" end="15110" value=" for hashCode&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="15114" end="15192" value=" N.B. It is mandatory to have identical lines for start and end user code !!! "/>
        <statements xsi:type="statements:Text" begin="15198" end="15205" value="    // "/>
        <statements xsi:type="statements:Feature" begin="15207" end="15220">
          <expression xsi:type="expressions:CallSet" begin="15207" end="15220">
            <calls begin="15207" end="15220" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="15222" end="15315" value=" for private methods&#xD;&#xA;    // TODO Remove this line and add your private methods here&#xD;&#xA;    // "/>
        <statements xsi:type="statements:Feature" begin="15317" end="15328">
          <expression xsi:type="expressions:CallSet" begin="15317" end="15328">
            <calls begin="15317" end="15328" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="15330" end="15357" value=" for private methods&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;"/>
      </scripts>
      <scripts begin="15488" end="15550">
        <descriptor begin="15454" end="15484" name="extensions" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="15493" end="15545">
          <condition xsi:type="expressions:Parenthesis" begin="15493" end="15514">
            <expression xsi:type="expressions:Not" begin="15494" end="15513">
              <expression xsi:type="expressions:CallSet" begin="15495" end="15513">
                <calls begin="15495" end="15505" name="superClass" prefix=""/>
                <calls begin="15506" end="15513" name="isEmpty" prefix=""/>
              </expression>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="15517" end="15526" value=" extends "/>
          <thenStatements xsi:type="statements:Feature" begin="15528" end="15543">
            <expression xsi:type="expressions:CallSet" begin="15528" end="15543">
              <calls begin="15528" end="15538" name="superClass" prefix=""/>
              <calls begin="15539" end="15543" name="name" prefix=""/>
            </expression>
          </thenStatements>
        </statements>
      </scripts>
      <scripts begin="15707" end="15742">
        <descriptor begin="15669" end="15703" name="asParameter" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="15709" end="15726">
          <expression xsi:type="expressions:CallSet" begin="15709" end="15726">
            <calls begin="15709" end="15726" name="convertToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="15728" end="15729" value=" "/>
        <statements xsi:type="statements:Feature" begin="15731" end="15740">
          <expression xsi:type="expressions:CallSet" begin="15731" end="15740">
            <calls begin="15731" end="15740" name="paramName" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="15885" end="15951">
        <descriptor begin="15840" end="15881" name="implementedInterfaces" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="15887" end="15949">
          <expression xsi:type="expressions:CallSet" begin="15887" end="15949">
            <calls begin="15887" end="15907" name="interfaceRealization" prefix=""/>
            <calls begin="15908" end="15914" name="target" prefix=""/>
            <calls begin="15915" end="15934" name="filter" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="15922" end="15933" value="Interface"/>
            </calls>
            <calls begin="15935" end="15939" name="name" prefix=""/>
            <calls begin="15940" end="15949" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="15944" end="15948" value=", "/>
            </calls>
          </expression>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.business.entitydto" imports="/0/@resources.9 /0/@resources.3 /0/@resources.5 /0/@resources.6 /0/@resources.4 /0/@resources.7 /0/@resources.10 /0/@resources.11 /0/@resources.12" beginTag="&lt;%" endTag="%>">
      <scripts begin="1001" end="12377">
        <descriptor begin="965" end="997" name="genEntityDto" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1001" end="1009" value="package "/>
        <statements xsi:type="statements:Feature" begin="1011" end="1021">
          <expression xsi:type="expressions:CallSet" begin="1011" end="1021">
            <calls begin="1011" end="1021" name="dtoPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1023" end="1031" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1033" end="1046">
          <expression xsi:type="expressions:CallSet" begin="1033" end="1046">
            <calls begin="1033" end="1046" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1048" end="1094" value=" for imports&#xD;&#xA;import java.io.Serializable;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="1099" end="1788">
          <condition xsi:type="expressions:Parenthesis" begin="1099" end="1165">
            <expression xsi:type="expressions:Operator" begin="1100" end="1164" operator=">">
              <operands xsi:type="expressions:CallSet" begin="1100" end="1160">
                <calls begin="1100" end="1115" name="classAttributes" prefix=""/>
                <calls begin="1116" end="1152" name="select" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1123" end="1151" value="(upper == -1 || upper > 1)"/>
                </calls>
                <calls begin="1153" end="1160" name="nSize" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="1163" end="1164"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1170" end="1170" value=""/>
          <thenStatements xsi:type="statements:If" begin="1179" end="1320">
            <condition xsi:type="expressions:Parenthesis" begin="1179" end="1258">
              <expression xsi:type="expressions:Operator" begin="1180" end="1257" operator=">">
                <operands xsi:type="expressions:CallSet" begin="1180" end="1253">
                  <calls begin="1180" end="1195" name="classAttributes" prefix=""/>
                  <calls begin="1196" end="1245" name="select" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1203" end="1244" value="(upper == -1 || upper > 1) &amp;&amp; isOrdered"/>
                  </calls>
                  <calls begin="1246" end="1253" name="nSize" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1256" end="1257"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1263" end="1316" value="import java.util.List;&#xD;&#xA;import java.util.ArrayList;&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1327" end="1327" value=""/>
          <thenStatements xsi:type="statements:If" begin="1336" end="1488">
            <condition xsi:type="expressions:Parenthesis" begin="1336" end="1429">
              <expression xsi:type="expressions:Operator" begin="1338" end="1428" operator=">">
                <operands xsi:type="expressions:CallSet" begin="1338" end="1424">
                  <calls begin="1338" end="1353" name="classAttributes" prefix=""/>
                  <calls begin="1354" end="1416" name="select" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1361" end="1415" value="(upper == -1 || upper > 1) &amp;&amp; isUnique &amp;&amp; !isOrdered"/>
                  </calls>
                  <calls begin="1417" end="1424" name="nSize" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1427" end="1428"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1434" end="1484" value="import java.util.Set;&#xD;&#xA;import java.util.HashSet;&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1495" end="1495" value=""/>
          <thenStatements xsi:type="statements:If" begin="1504" end="1777">
            <condition xsi:type="expressions:Parenthesis" begin="1504" end="1598">
              <expression xsi:type="expressions:Operator" begin="1506" end="1597" operator=">">
                <operands xsi:type="expressions:CallSet" begin="1506" end="1593">
                  <calls begin="1506" end="1521" name="classAttributes" prefix=""/>
                  <calls begin="1522" end="1585" name="select" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1529" end="1584" value="(upper == -1 || upper > 1) &amp;&amp; !isUnique &amp;&amp; !isOrdered"/>
                  </calls>
                  <calls begin="1586" end="1593" name="nSize" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1596" end="1597"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1603" end="1633" value="import java.util.Collection;&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="1646" end="1766">
              <condition xsi:type="expressions:Parenthesis" begin="1646" end="1726">
                <expression xsi:type="expressions:Operator" begin="1647" end="1725" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="1647" end="1720">
                    <calls begin="1647" end="1662" name="classAttributes" prefix=""/>
                    <calls begin="1663" end="1712" name="select" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="1670" end="1711" value="(upper == -1 || upper > 1) &amp;&amp; isOrdered"/>
                    </calls>
                    <calls begin="1713" end="1720" name="nSize" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="1724" end="1725"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="1731" end="1758" value="import java.util.HashSet;&#xD;&#xA;"/>
            </thenStatements>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="1795" end="1797" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="1802" end="1913">
          <condition xsi:type="expressions:Parenthesis" begin="1802" end="1884">
            <expression xsi:type="expressions:Operator" begin="1803" end="1883" operator=">">
              <operands xsi:type="expressions:CallSet" begin="1803" end="1879">
                <calls begin="1803" end="1812" name="attribute" prefix=""/>
                <calls begin="1813" end="1817" name="type" prefix="">
                  <filter xsi:type="expressions:Operator" begin="1818" end="1870" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="1818" end="1860">
                      <calls begin="1818" end="1860" name="getProperty" prefix="">
                        <arguments xsi:type="expressions:Operator" begin="1830" end="1859" operator="+">
                          <operands xsi:type="expressions:StringLiteral" begin="1830" end="1852" value="java.typeconversion."/>
                          <operands xsi:type="expressions:CallSet" begin="1855" end="1859">
                            <calls begin="1855" end="1859" name="name" prefix=""/>
                          </operands>
                        </arguments>
                      </calls>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="1864" end="1870" value="Date"/>
                  </filter>
                </calls>
                <calls begin="1872" end="1879" name="nSize" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="1882" end="1883"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1889" end="1913" value="import java.util.Date;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="1920" end="1922" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1928" end="2145">
          <iterator xsi:type="expressions:Parenthesis" begin="1928" end="2015">
            <expression xsi:type="expressions:CallSet" begin="1929" end="2014">
              <calls begin="1929" end="1946" name="getAssociations" prefix=""/>
              <calls begin="1947" end="1968" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1954" end="1967" value="Association"/>
              </calls>
              <calls begin="1969" end="1999" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="1989" end="1998">
                  <calls begin="1989" end="1998" name="current" prefix=""/>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="2000" end="2013">
                  <calls begin="2000" end="2013" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="2020" end="2020" value=""/>
          <statements xsi:type="statements:If" begin="2029" end="2138">
            <condition xsi:type="expressions:Parenthesis" begin="2029" end="2083">
              <expression xsi:type="expressions:Operator" begin="2030" end="2082" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="2030" end="2060">
                  <calls begin="2030" end="2046" name="current" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="2038" end="2045" value="Class"/>
                  </calls>
                  <calls begin="2047" end="2060" name="entityPackage" prefix=""/>
                </operands>
                <operands xsi:type="expressions:CallSet" begin="2064" end="2082">
                  <calls begin="2064" end="2068" name="type" prefix=""/>
                  <calls begin="2069" end="2082" name="entityPackage" prefix=""/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2088" end="2095" value="import "/>
            <thenStatements xsi:type="statements:Feature" begin="2097" end="2115">
              <expression xsi:type="expressions:CallSet" begin="2097" end="2115">
                <calls begin="2097" end="2101" name="type" prefix=""/>
                <calls begin="2102" end="2115" name="entityPackage" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2117" end="2118" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="2120" end="2129">
              <expression xsi:type="expressions:CallSet" begin="2120" end="2129">
                <calls begin="2120" end="2124" name="type" prefix=""/>
                <calls begin="2125" end="2129" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2131" end="2134" value=";&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:If" begin="2157" end="2231">
          <condition xsi:type="expressions:Parenthesis" begin="2157" end="2178">
            <expression xsi:type="expressions:Not" begin="2158" end="2177">
              <expression xsi:type="expressions:CallSet" begin="2159" end="2177">
                <calls begin="2159" end="2169" name="superClass" prefix=""/>
                <calls begin="2170" end="2177" name="isEmpty" prefix=""/>
              </expression>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2184" end="2191" value="import "/>
          <thenStatements xsi:type="statements:Feature" begin="2193" end="2206">
            <expression xsi:type="expressions:CallSet" begin="2193" end="2206">
              <calls begin="2193" end="2206" name="entityPackage" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2208" end="2209" value="."/>
          <thenStatements xsi:type="statements:Feature" begin="2211" end="2226">
            <expression xsi:type="expressions:CallSet" begin="2211" end="2226">
              <calls begin="2211" end="2221" name="superClass" prefix=""/>
              <calls begin="2222" end="2226" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2228" end="2231" value=";&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2238" end="2243" value="&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="2245" end="2256">
          <expression xsi:type="expressions:CallSet" begin="2245" end="2256">
            <calls begin="2245" end="2256" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2258" end="2279" value=" for imports&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="2284" end="2446">
          <condition xsi:type="expressions:Parenthesis" begin="2284" end="2316">
            <expression xsi:type="expressions:Operator" begin="2285" end="2315" operator=">">
              <operands xsi:type="expressions:CallSet" begin="2285" end="2311">
                <calls begin="2285" end="2297" name="ownedComment" prefix=""/>
                <calls begin="2298" end="2302" name="body" prefix=""/>
                <calls begin="2303" end="2311" name="length" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="2314" end="2315"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2321" end="2324" value=" * "/>
          <thenStatements xsi:type="statements:Feature" begin="2326" end="2369">
            <expression xsi:type="expressions:CallSet" begin="2326" end="2369">
              <calls begin="2326" end="2338" name="ownedComment" prefix=""/>
              <calls begin="2339" end="2343" name="body" prefix=""/>
              <calls begin="2344" end="2369" name="replaceAll" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2355" end="2359" value="&#xA;"/>
                <arguments xsi:type="expressions:StringLiteral" begin="2361" end="2368" value="&#xA; * "/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2371" end="2373" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="2385" end="2435" value=" * Warning: no comment in the model for interface "/>
          <elseStatements xsi:type="statements:Feature" begin="2437" end="2441">
            <expression xsi:type="expressions:CallSet" begin="2437" end="2441">
              <calls begin="2437" end="2441" name="name" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="2443" end="2446" value=".&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2453" end="2471" value=" */&#xD;&#xA;public class "/>
        <statements xsi:type="statements:Feature" begin="2473" end="2480">
          <expression xsi:type="expressions:CallSet" begin="2473" end="2480">
            <calls begin="2473" end="2480" name="dtoName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="2484" end="2494">
          <expression xsi:type="expressions:CallSet" begin="2484" end="2494">
            <calls begin="2484" end="2494" name="extensions" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2496" end="2520" value=" implements Serializable"/>
        <statements xsi:type="statements:If" begin="2525" end="2577">
          <condition xsi:type="expressions:Parenthesis" begin="2525" end="2547">
            <expression xsi:type="expressions:CallSet" begin="2526" end="2546">
              <calls begin="2526" end="2546" name="interfaceRealization" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2550" end="2552" value=", "/>
          <thenStatements xsi:type="statements:Feature" begin="2554" end="2575">
            <expression xsi:type="expressions:CallSet" begin="2554" end="2575">
              <calls begin="2554" end="2575" name="implementedInterfaces" prefix=""/>
            </expression>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="2582" end="2714" value=" {&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * serialVersionUID is used for serialization.&#xD;&#xA;     */&#xD;&#xA;    private static final long serialVersionUID = 1L;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="2719" end="2949">
          <condition xsi:type="expressions:Parenthesis" begin="2719" end="2734">
            <expression xsi:type="expressions:CallSet" begin="2720" end="2733">
              <calls begin="2720" end="2733" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2739" end="2804" value="    /**&#xD;&#xA;     * Explicit primary key.&#xD;&#xA;     */&#xD;&#xA;    private long "/>
          <thenStatements xsi:type="statements:Feature" begin="2806" end="2844">
            <expression xsi:type="expressions:CallSet" begin="2806" end="2844">
              <calls begin="2806" end="2820" name="getPKAttribute" prefix=""/>
              <calls begin="2821" end="2839" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2828" end="2838" value="Property"/>
              </calls>
              <calls begin="2840" end="2844" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2846" end="2851" value=";&#xD;&#xA;&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="2863" end="2924" value="    /**&#xD;&#xA;     * Automatic primary key.&#xD;&#xA;     */&#xD;&#xA;    private "/>
          <elseStatements xsi:type="statements:Feature" begin="2926" end="2939">
            <expression xsi:type="expressions:CallSet" begin="2926" end="2939">
              <calls begin="2926" end="2939" name="defaultPKType" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="2941" end="2949" value=" id;&#xD;&#xA;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:For" begin="2962" end="3105">
          <iterator xsi:type="expressions:Parenthesis" begin="2962" end="3006">
            <expression xsi:type="expressions:CallSet" begin="2963" end="3005">
              <calls begin="2963" end="2978" name="classAttributes" prefix=""/>
              <calls begin="2979" end="2997" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2986" end="2996" value="Property"/>
                <filter xsi:type="expressions:Not" begin="2998" end="3004">
                  <expression xsi:type="expressions:CallSet" begin="3000" end="3004">
                    <calls begin="3000" end="3004" name="isPK" prefix=""/>
                  </expression>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3011" end="3033" value="    /**&#xD;&#xA;     * Field "/>
          <statements xsi:type="statements:Feature" begin="3035" end="3039">
            <expression xsi:type="expressions:CallSet" begin="3035" end="3039">
              <calls begin="3035" end="3039" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3041" end="3067" value=".&#xD;&#xA;     */&#xD;&#xA;    protected "/>
          <statements xsi:type="statements:Feature" begin="3069" end="3089">
            <expression xsi:type="expressions:CallSet" begin="3069" end="3089">
              <calls begin="3069" end="3089" name="convertToJavaDtoType" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3091" end="3092" value=" "/>
          <statements xsi:type="statements:Feature" begin="3094" end="3098">
            <expression xsi:type="expressions:CallSet" begin="3094" end="3098">
              <calls begin="3094" end="3098" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3100" end="3105" value=";&#xD;&#xA;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="3112" end="3170" value="    /**&#xD;&#xA;     * Default constructor.&#xD;&#xA;     */&#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="3172" end="3179">
          <expression xsi:type="expressions:CallSet" begin="3172" end="3179">
            <calls begin="3172" end="3179" name="dtoName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3181" end="3205" value="() {&#xD;&#xA;        super();&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="3211" end="3487">
          <iterator xsi:type="expressions:Parenthesis" begin="3211" end="3247">
            <expression xsi:type="expressions:CallSet" begin="3212" end="3246">
              <calls begin="3212" end="3227" name="classAttributes" prefix=""/>
              <calls begin="3228" end="3246" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="3235" end="3245" value="Property"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3252" end="3252" value=""/>
          <statements xsi:type="statements:If" begin="3261" end="3480">
            <condition xsi:type="expressions:Parenthesis" begin="3261" end="3273">
              <expression xsi:type="expressions:Operator" begin="3262" end="3272" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="3262" end="3267">
                  <calls begin="3262" end="3267" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="3271" end="3272" value="1"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="3278" end="3278" value=""/>
            <thenStatements xsi:type="statements:If" begin="3287" end="3457">
              <condition xsi:type="expressions:Parenthesis" begin="3287" end="3298">
                <expression xsi:type="expressions:CallSet" begin="3288" end="3297">
                  <calls begin="3288" end="3297" name="isOrdered" prefix=""/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="3303" end="3311" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="3313" end="3317">
                <expression xsi:type="expressions:CallSet" begin="3313" end="3317">
                  <calls begin="3313" end="3317" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3319" end="3336" value=" = new ArrayList&lt;"/>
              <thenStatements xsi:type="statements:Feature" begin="3338" end="3363">
                <expression xsi:type="expressions:CallSet" begin="3338" end="3363">
                  <calls begin="3338" end="3342" name="type" prefix=""/>
                  <calls begin="3343" end="3363" name="convertToJavaDtoType" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3365" end="3371" value=">();&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="3387" end="3395" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="3397" end="3401">
                <expression xsi:type="expressions:CallSet" begin="3397" end="3401">
                  <calls begin="3397" end="3401" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3403" end="3418" value=" = new HashSet&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="3420" end="3445">
                <expression xsi:type="expressions:CallSet" begin="3420" end="3445">
                  <calls begin="3420" end="3424" name="type" prefix=""/>
                  <calls begin="3425" end="3445" name="convertToJavaDtoType" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3447" end="3453" value=">();&#xD;&#xA;"/>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="3494" end="3503" value="    }&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="3508" end="4302">
          <condition xsi:type="expressions:Parenthesis" begin="3508" end="3523">
            <expression xsi:type="expressions:CallSet" begin="3509" end="3522">
              <calls begin="3509" end="3522" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3528" end="3528" value=""/>
          <thenStatements xsi:type="statements:For" begin="3538" end="3947">
            <iterator xsi:type="expressions:Parenthesis" begin="3538" end="3573">
              <expression xsi:type="expressions:CallSet" begin="3539" end="3572">
                <calls begin="3539" end="3553" name="getPKAttribute" prefix=""/>
                <calls begin="3554" end="3572" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="3561" end="3571" value="Property"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="3578" end="3643" value="    /**&#xD;&#xA;     * Returns the primary key.&#xD;&#xA;     * @return Returns "/>
            <statements xsi:type="statements:Feature" begin="3645" end="3649">
              <expression xsi:type="expressions:CallSet" begin="3645" end="3649">
                <calls begin="3645" end="3649" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3651" end="3682" value=".&#xD;&#xA;     */&#xD;&#xA;    public long get"/>
            <statements xsi:type="statements:Feature" begin="3684" end="3699">
              <expression xsi:type="expressions:CallSet" begin="3684" end="3699">
                <calls begin="3684" end="3688" name="name" prefix=""/>
                <calls begin="3689" end="3699" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3701" end="3722" value="() {&#xD;&#xA;        return "/>
            <statements xsi:type="statements:Feature" begin="3724" end="3728">
              <expression xsi:type="expressions:CallSet" begin="3724" end="3728">
                <calls begin="3724" end="3728" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3730" end="3795" value=";&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Sets the primary key.&#xD;&#xA;     * @param "/>
            <statements xsi:type="statements:Feature" begin="3797" end="3806">
              <expression xsi:type="expressions:CallSet" begin="3797" end="3806">
                <calls begin="3797" end="3806" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3808" end="3852" value=" Value to set.&#xD;&#xA;     */&#xD;&#xA;    public void set"/>
            <statements xsi:type="statements:Feature" begin="3854" end="3869">
              <expression xsi:type="expressions:CallSet" begin="3854" end="3869">
                <calls begin="3854" end="3858" name="name" prefix=""/>
                <calls begin="3859" end="3869" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3871" end="3883" value="(final long "/>
            <statements xsi:type="statements:Feature" begin="3885" end="3894">
              <expression xsi:type="expressions:CallSet" begin="3885" end="3894">
                <calls begin="3885" end="3894" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3896" end="3909" value=") {&#xD;&#xA;        "/>
            <statements xsi:type="statements:Feature" begin="3911" end="3915">
              <expression xsi:type="expressions:CallSet" begin="3911" end="3915">
                <calls begin="3911" end="3915" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3917" end="3920" value=" = "/>
            <statements xsi:type="statements:Feature" begin="3922" end="3931">
              <expression xsi:type="expressions:CallSet" begin="3922" end="3931">
                <calls begin="3922" end="3931" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3933" end="3943" value=";&#xD;&#xA;    }&#xD;&#xA;"/>
          </thenStatements>
          <elseStatements xsi:type="statements:Text" begin="3966" end="4055" value="    /**&#xD;&#xA;     * Returns the identifier.&#xD;&#xA;     * @return Returns id.&#xD;&#xA;     */&#xD;&#xA;    public "/>
          <elseStatements xsi:type="statements:Feature" begin="4057" end="4070">
            <expression xsi:type="expressions:CallSet" begin="4057" end="4070">
              <calls begin="4057" end="4070" name="defaultPKType" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="4072" end="4244" value=" getId() {&#xD;&#xA;        return id;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Sets a value to parameter Id.&#xD;&#xA;     * @param someId Value of the identifier.&#xD;&#xA;     */&#xD;&#xA;    public void setId(final "/>
          <elseStatements xsi:type="statements:Feature" begin="4246" end="4259">
            <expression xsi:type="expressions:CallSet" begin="4246" end="4259">
              <calls begin="4246" end="4259" name="defaultPKType" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="4261" end="4302" value=" someId) {&#xD;&#xA;        id = someId;&#xD;&#xA;    }&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="4309" end="4315" value="    &#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="4320" end="4968">
          <condition xsi:type="expressions:Parenthesis" begin="4320" end="4375">
            <expression xsi:type="expressions:Operator" begin="4321" end="4374" operator=">">
              <operands xsi:type="expressions:Not" begin="4321" end="4370">
                <expression xsi:type="expressions:CallSet" begin="4322" end="4370">
                  <calls begin="4322" end="4337" name="classAttributes" prefix=""/>
                  <calls begin="4338" end="4356" name="filter" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="4345" end="4355" value="Property"/>
                    <filter xsi:type="expressions:Not" begin="4357" end="4363">
                      <expression xsi:type="expressions:CallSet" begin="4359" end="4363">
                        <calls begin="4359" end="4363" name="isPK" prefix=""/>
                      </expression>
                    </filter>
                  </calls>
                  <calls begin="4365" end="4370" name="nSize" prefix=""/>
                </expression>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="4373" end="4374"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="4380" end="4444" value="&#xD;&#xA;    /**&#xD;&#xA;     * Constructor with all parameters initialized.&#xD;&#xA;"/>
          <thenStatements xsi:type="statements:For" begin="4450" end="4748">
            <iterator xsi:type="expressions:Parenthesis" begin="4450" end="4494">
              <expression xsi:type="expressions:CallSet" begin="4451" end="4493">
                <calls begin="4451" end="4466" name="classAttributes" prefix=""/>
                <calls begin="4467" end="4485" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="4474" end="4484" value="Property"/>
                  <filter xsi:type="expressions:Not" begin="4486" end="4492">
                    <expression xsi:type="expressions:CallSet" begin="4488" end="4492">
                      <calls begin="4488" end="4492" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="4499" end="4513" value="     * @param "/>
            <statements xsi:type="statements:Feature" begin="4515" end="4524">
              <expression xsi:type="expressions:CallSet" begin="4515" end="4524">
                <calls begin="4515" end="4524" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4526" end="4528" value="&#xD;&#xA;"/>
            <statements xsi:type="statements:If" begin="4541" end="4741">
              <condition xsi:type="expressions:Parenthesis" begin="4541" end="4573">
                <expression xsi:type="expressions:Operator" begin="4542" end="4572" operator=">">
                  <operands xsi:type="expressions:CallSet" begin="4542" end="4568">
                    <calls begin="4542" end="4554" name="ownedComment" prefix=""/>
                    <calls begin="4555" end="4559" name="body" prefix=""/>
                    <calls begin="4560" end="4568" name="length" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="4571" end="4572"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="4578" end="4596" value="     *            "/>
              <thenStatements xsi:type="statements:Feature" begin="4598" end="4656">
                <expression xsi:type="expressions:CallSet" begin="4598" end="4656">
                  <calls begin="4598" end="4610" name="ownedComment" prefix=""/>
                  <calls begin="4611" end="4615" name="body" prefix=""/>
                  <calls begin="4616" end="4656" name="replaceAll" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="4627" end="4631" value="&#xA;"/>
                    <arguments xsi:type="expressions:StringLiteral" begin="4633" end="4655" value="&#xA;     *            "/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="4658" end="4660" value="&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="4680" end="4733" value="     *            Warning, no comment in the model.&#xD;&#xA;"/>
            </statements>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="4755" end="4775" value="     */&#xD;&#xA;    public "/>
          <thenStatements xsi:type="statements:Feature" begin="4777" end="4784">
            <expression xsi:type="expressions:CallSet" begin="4777" end="4784">
              <calls begin="4777" end="4784" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="4786" end="4787" value="("/>
          <thenStatements xsi:type="statements:Feature" begin="4789" end="4853">
            <expression xsi:type="expressions:CallSet" begin="4789" end="4853">
              <calls begin="4789" end="4804" name="classAttributes" prefix=""/>
              <calls begin="4805" end="4823" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="4812" end="4822" value="Property"/>
                <filter xsi:type="expressions:Not" begin="4824" end="4830">
                  <expression xsi:type="expressions:CallSet" begin="4826" end="4830">
                    <calls begin="4826" end="4830" name="isPK" prefix=""/>
                  </expression>
                </filter>
              </calls>
              <calls begin="4832" end="4843" name="asParameter" prefix=""/>
              <calls begin="4844" end="4853" name="sep" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="4848" end="4852" value=", "/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="4855" end="4860" value=") {&#xD;&#xA;"/>
          <thenStatements xsi:type="statements:For" begin="4866" end="4950">
            <iterator xsi:type="expressions:Parenthesis" begin="4866" end="4910">
              <expression xsi:type="expressions:CallSet" begin="4867" end="4909">
                <calls begin="4867" end="4882" name="classAttributes" prefix=""/>
                <calls begin="4883" end="4901" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="4890" end="4900" value="Property"/>
                  <filter xsi:type="expressions:Not" begin="4902" end="4908">
                    <expression xsi:type="expressions:CallSet" begin="4904" end="4908">
                      <calls begin="4904" end="4908" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="4915" end="4923" value="        "/>
            <statements xsi:type="statements:Feature" begin="4925" end="4929">
              <expression xsi:type="expressions:CallSet" begin="4925" end="4929">
                <calls begin="4925" end="4929" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4931" end="4934" value=" = "/>
            <statements xsi:type="statements:Feature" begin="4936" end="4945">
              <expression xsi:type="expressions:CallSet" begin="4936" end="4945">
                <calls begin="4936" end="4945" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4947" end="4950" value=";&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="4957" end="4968" value="    }    &#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="4975" end="4977" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="4983" end="7408">
          <iterator xsi:type="expressions:Parenthesis" begin="4983" end="5027">
            <expression xsi:type="expressions:CallSet" begin="4984" end="5026">
              <calls begin="4984" end="4999" name="classAttributes" prefix=""/>
              <calls begin="5000" end="5018" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="5007" end="5017" value="Property"/>
                <filter xsi:type="expressions:Not" begin="5019" end="5025">
                  <expression xsi:type="expressions:CallSet" begin="5021" end="5025">
                    <calls begin="5021" end="5025" name="isPK" prefix=""/>
                  </expression>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="5032" end="5056" value="    /**&#xD;&#xA;     * Returns "/>
          <statements xsi:type="statements:Feature" begin="5058" end="5062">
            <expression xsi:type="expressions:CallSet" begin="5058" end="5062">
              <calls begin="5058" end="5062" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="5064" end="5067" value=".&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="5076" end="5251">
            <condition xsi:type="expressions:Parenthesis" begin="5076" end="5108">
              <expression xsi:type="expressions:Operator" begin="5077" end="5107" operator=">">
                <operands xsi:type="expressions:CallSet" begin="5077" end="5103">
                  <calls begin="5077" end="5089" name="ownedComment" prefix=""/>
                  <calls begin="5090" end="5094" name="body" prefix=""/>
                  <calls begin="5095" end="5103" name="length" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="5106" end="5107"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="5113" end="5128" value="     * @return "/>
            <thenStatements xsi:type="statements:Feature" begin="5130" end="5177">
              <expression xsi:type="expressions:CallSet" begin="5130" end="5177">
                <calls begin="5130" end="5142" name="ownedComment" prefix=""/>
                <calls begin="5143" end="5147" name="body" prefix=""/>
                <calls begin="5148" end="5177" name="replaceAll" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="5159" end="5163" value="&#xA;"/>
                  <arguments xsi:type="expressions:StringLiteral" begin="5165" end="5176" value="&#xA;     * "/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5179" end="5181" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="5197" end="5247" value="     * @return Warning, no comment in the model.&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="5258" end="5271" value="     */&#xD;&#xA;    "/>
          <statements xsi:type="statements:Feature" begin="5273" end="5291">
            <expression xsi:type="expressions:CallSet" begin="5273" end="5291">
              <calls begin="5273" end="5291" name="getterDtoSignature" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="5293" end="5297" value=" {&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="5306" end="5527">
            <condition xsi:type="expressions:Parenthesis" begin="5306" end="5317">
              <expression xsi:type="expressions:CallSet" begin="5307" end="5316">
                <calls begin="5307" end="5316" name="isDerived" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="5322" end="5333" value="        // "/>
            <thenStatements xsi:type="statements:Feature" begin="5335" end="5348">
              <expression xsi:type="expressions:CallSet" begin="5335" end="5348">
                <calls begin="5335" end="5348" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5350" end="5362" value=" of derived "/>
            <thenStatements xsi:type="statements:Feature" begin="5364" end="5368">
              <expression xsi:type="expressions:CallSet" begin="5364" end="5368">
                <calls begin="5364" end="5368" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5370" end="5417" value=" attribute&#xD;&#xA;        // TODO Logic to calculate "/>
            <thenStatements xsi:type="statements:Feature" begin="5419" end="5423">
              <expression xsi:type="expressions:CallSet" begin="5419" end="5423">
                <calls begin="5419" end="5423" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5425" end="5442" value="&#xD;&#xA;        return "/>
            <thenStatements xsi:type="statements:Feature" begin="5444" end="5448">
              <expression xsi:type="expressions:CallSet" begin="5444" end="5448">
                <calls begin="5444" end="5448" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5450" end="5464" value=";&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="5466" end="5477">
              <expression xsi:type="expressions:CallSet" begin="5466" end="5477">
                <calls begin="5466" end="5477" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5479" end="5481" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="5497" end="5512" value="        return "/>
            <elseStatements xsi:type="statements:Feature" begin="5514" end="5518">
              <expression xsi:type="expressions:CallSet" begin="5514" end="5518">
                <calls begin="5514" end="5518" name="name" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="5520" end="5523" value=";&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="5534" end="5543" value="    }&#xD;&#xA;&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="5552" end="5971">
            <condition xsi:type="expressions:Parenthesis" begin="5552" end="5579">
              <expression xsi:type="expressions:Operator" begin="5553" end="5578" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="5553" end="5564">
                  <expression xsi:type="expressions:CallSet" begin="5554" end="5564">
                    <calls begin="5554" end="5564" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="5568" end="5578">
                  <expression xsi:type="expressions:CallSet" begin="5569" end="5578">
                    <calls begin="5569" end="5578" name="isDerived" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="5584" end="5626" value="    /**&#xD;&#xA;     * Sets a value to parameter "/>
            <thenStatements xsi:type="statements:Feature" begin="5628" end="5632">
              <expression xsi:type="expressions:CallSet" begin="5628" end="5632">
                <calls begin="5628" end="5632" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5634" end="5651" value=".&#xD;&#xA;     * @param "/>
            <thenStatements xsi:type="statements:Feature" begin="5653" end="5662">
              <expression xsi:type="expressions:CallSet" begin="5653" end="5662">
                <calls begin="5653" end="5662" name="paramName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5664" end="5666" value="&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="5679" end="5879">
              <condition xsi:type="expressions:Parenthesis" begin="5679" end="5711">
                <expression xsi:type="expressions:Operator" begin="5680" end="5710" operator=">">
                  <operands xsi:type="expressions:CallSet" begin="5680" end="5706">
                    <calls begin="5680" end="5692" name="ownedComment" prefix=""/>
                    <calls begin="5693" end="5697" name="body" prefix=""/>
                    <calls begin="5698" end="5706" name="length" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="5709" end="5710"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="5716" end="5734" value="     *            "/>
              <thenStatements xsi:type="statements:Feature" begin="5736" end="5794">
                <expression xsi:type="expressions:CallSet" begin="5736" end="5794">
                  <calls begin="5736" end="5748" name="ownedComment" prefix=""/>
                  <calls begin="5749" end="5753" name="body" prefix=""/>
                  <calls begin="5754" end="5794" name="replaceAll" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="5765" end="5769" value="&#xA;"/>
                    <arguments xsi:type="expressions:StringLiteral" begin="5771" end="5793" value="&#xA;     *            "/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="5796" end="5798" value="&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="5818" end="5871" value="     *            Warning, no comment in the model.&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5886" end="5899" value="     */&#xD;&#xA;    "/>
            <thenStatements xsi:type="statements:Feature" begin="5901" end="5919">
              <expression xsi:type="expressions:CallSet" begin="5901" end="5919">
                <calls begin="5901" end="5919" name="setterDtoSignature" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5921" end="5933" value=" {&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="5935" end="5939">
              <expression xsi:type="expressions:CallSet" begin="5935" end="5939">
                <calls begin="5935" end="5939" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5941" end="5944" value=" = "/>
            <thenStatements xsi:type="statements:Feature" begin="5946" end="5955">
              <expression xsi:type="expressions:CallSet" begin="5946" end="5955">
                <calls begin="5946" end="5955" name="paramName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5957" end="5967" value=";&#xD;&#xA;    }&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="5978" end="5980" value="&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="5989" end="7401">
            <condition xsi:type="expressions:Parenthesis" begin="5989" end="6015">
              <expression xsi:type="expressions:Operator" begin="5990" end="6014" operator="||">
                <operands xsi:type="expressions:Operator" begin="5990" end="6001" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="5990" end="5995">
                    <calls begin="5990" end="5995" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="5999" end="6001" value="-1"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="6005" end="6014" operator=">">
                  <operands xsi:type="expressions:CallSet" begin="6005" end="6010">
                    <calls begin="6005" end="6010" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="6013" end="6014" value="1"/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="6020" end="6043" value="    /**&#xD;&#xA;     * Adds a "/>
            <thenStatements xsi:type="statements:Feature" begin="6045" end="6049">
              <expression xsi:type="expressions:CallSet" begin="6045" end="6049">
                <calls begin="6045" end="6049" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6051" end="6059" value=" to the "/>
            <thenStatements xsi:type="statements:Feature" begin="6061" end="6065">
              <expression xsi:type="expressions:CallSet" begin="6061" end="6065">
                <calls begin="6061" end="6065" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6067" end="6081" value=" Collection.&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="6094" end="6243">
              <condition xsi:type="expressions:Parenthesis" begin="6094" end="6112">
                <expression xsi:type="expressions:Operator" begin="6095" end="6111" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="6095" end="6103">
                    <calls begin="6095" end="6103" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="6107" end="6111"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="6117" end="6169" value="     * Bidirectionnal association : add the current "/>
              <thenStatements xsi:type="statements:Feature" begin="6171" end="6181">
                <expression xsi:type="expressions:CallSet" begin="6171" end="6181">
                  <calls begin="6171" end="6176" name="class" prefix=""/>
                  <calls begin="6177" end="6181" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="6183" end="6214" value=" instance to&#xD;&#xA;     * the given "/>
              <thenStatements xsi:type="statements:Feature" begin="6216" end="6220">
                <expression xsi:type="expressions:CallSet" begin="6216" end="6220">
                  <calls begin="6216" end="6220" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="6222" end="6235" value=" parameter.&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6250" end="6264" value="     * @param "/>
            <thenStatements xsi:type="statements:Feature" begin="6266" end="6270">
              <expression xsi:type="expressions:CallSet" begin="6266" end="6270">
                <calls begin="6266" end="6270" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6272" end="6320" value="Elt Element to add&#xD;&#xA;     */&#xD;&#xA;    public void add"/>
            <thenStatements xsi:type="statements:Feature" begin="6322" end="6337">
              <expression xsi:type="expressions:CallSet" begin="6322" end="6337">
                <calls begin="6322" end="6326" name="name" prefix=""/>
                <calls begin="6327" end="6337" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6339" end="6346" value="(final "/>
            <thenStatements xsi:type="statements:Feature" begin="6348" end="6373">
              <expression xsi:type="expressions:CallSet" begin="6348" end="6373">
                <calls begin="6348" end="6352" name="type" prefix=""/>
                <calls begin="6353" end="6373" name="convertToJavaDtoType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6375" end="6376" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="6378" end="6382">
              <expression xsi:type="expressions:CallSet" begin="6378" end="6382">
                <calls begin="6378" end="6382" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6384" end="6400" value="Elt) {&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="6402" end="6406">
              <expression xsi:type="expressions:CallSet" begin="6402" end="6406">
                <calls begin="6402" end="6406" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6408" end="6413" value=".add("/>
            <thenStatements xsi:type="statements:Feature" begin="6415" end="6419">
              <expression xsi:type="expressions:CallSet" begin="6415" end="6419">
                <calls begin="6415" end="6419" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6421" end="6428" value="Elt);&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="6441" end="6684">
              <condition xsi:type="expressions:Parenthesis" begin="6441" end="6459">
                <expression xsi:type="expressions:Operator" begin="6442" end="6458" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="6442" end="6450">
                    <calls begin="6442" end="6450" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="6454" end="6458"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="6464" end="6464" value=""/>
              <thenStatements xsi:type="statements:If" begin="6481" end="6669">
                <condition xsi:type="expressions:Parenthesis" begin="6481" end="6502">
                  <expression xsi:type="expressions:Operator" begin="6482" end="6501" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="6482" end="6496">
                      <calls begin="6482" end="6490" name="opposite" prefix=""/>
                      <calls begin="6491" end="6496" name="upper" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="6500" end="6501" value="1"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="6507" end="6515" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="6517" end="6521">
                  <expression xsi:type="expressions:CallSet" begin="6517" end="6521">
                    <calls begin="6517" end="6521" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="6523" end="6530" value="Elt.set"/>
                <thenStatements xsi:type="statements:Feature" begin="6532" end="6556">
                  <expression xsi:type="expressions:CallSet" begin="6532" end="6556">
                    <calls begin="6532" end="6540" name="opposite" prefix=""/>
                    <calls begin="6541" end="6545" name="name" prefix=""/>
                    <calls begin="6546" end="6556" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="6558" end="6567" value="(this);&#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="6591" end="6599" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="6601" end="6605">
                  <expression xsi:type="expressions:CallSet" begin="6601" end="6605">
                    <calls begin="6601" end="6605" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="6607" end="6614" value="Elt.get"/>
                <elseStatements xsi:type="statements:Feature" begin="6616" end="6640">
                  <expression xsi:type="expressions:CallSet" begin="6616" end="6640">
                    <calls begin="6616" end="6624" name="opposite" prefix=""/>
                    <calls begin="6625" end="6629" name="name" prefix=""/>
                    <calls begin="6630" end="6640" name="toU1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="6642" end="6657" value="().add(this);&#xD;&#xA;"/>
              </thenStatements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6691" end="6726" value="    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Removes a "/>
            <thenStatements xsi:type="statements:Feature" begin="6728" end="6732">
              <expression xsi:type="expressions:CallSet" begin="6728" end="6732">
                <calls begin="6728" end="6732" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6734" end="6744" value=" from the "/>
            <thenStatements xsi:type="statements:Feature" begin="6746" end="6750">
              <expression xsi:type="expressions:CallSet" begin="6746" end="6750">
                <calls begin="6746" end="6750" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6752" end="6766" value=" Collection.&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="6779" end="6933">
              <condition xsi:type="expressions:Parenthesis" begin="6779" end="6797">
                <expression xsi:type="expressions:Operator" begin="6780" end="6796" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="6780" end="6788">
                    <calls begin="6780" end="6788" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="6792" end="6796"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="6802" end="6857" value="     * Bidirectionnal association : remove the current "/>
              <thenStatements xsi:type="statements:Feature" begin="6859" end="6869">
                <expression xsi:type="expressions:CallSet" begin="6859" end="6869">
                  <calls begin="6859" end="6864" name="class" prefix=""/>
                  <calls begin="6865" end="6869" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="6871" end="6904" value=" instance&#xD;&#xA;     * from the given "/>
              <thenStatements xsi:type="statements:Feature" begin="6906" end="6910">
                <expression xsi:type="expressions:CallSet" begin="6906" end="6910">
                  <calls begin="6906" end="6910" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="6912" end="6925" value=" parameter.&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6940" end="6954" value="     * @param "/>
            <thenStatements xsi:type="statements:Feature" begin="6956" end="6960">
              <expression xsi:type="expressions:CallSet" begin="6956" end="6960">
                <calls begin="6956" end="6960" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="6962" end="7016" value="Elt Element to remove&#xD;&#xA;     */&#xD;&#xA;    public void remove"/>
            <thenStatements xsi:type="statements:Feature" begin="7018" end="7033">
              <expression xsi:type="expressions:CallSet" begin="7018" end="7033">
                <calls begin="7018" end="7022" name="name" prefix=""/>
                <calls begin="7023" end="7033" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7035" end="7042" value="(final "/>
            <thenStatements xsi:type="statements:Feature" begin="7044" end="7066">
              <expression xsi:type="expressions:CallSet" begin="7044" end="7066">
                <calls begin="7044" end="7048" name="type" prefix=""/>
                <calls begin="7049" end="7066" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7068" end="7069" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="7071" end="7075">
              <expression xsi:type="expressions:CallSet" begin="7071" end="7075">
                <calls begin="7071" end="7075" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7077" end="7093" value="Elt) {&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="7095" end="7099">
              <expression xsi:type="expressions:CallSet" begin="7095" end="7099">
                <calls begin="7095" end="7099" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7101" end="7109" value=".remove("/>
            <thenStatements xsi:type="statements:Feature" begin="7111" end="7115">
              <expression xsi:type="expressions:CallSet" begin="7111" end="7115">
                <calls begin="7111" end="7115" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7117" end="7124" value="Elt);&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="7137" end="7383">
              <condition xsi:type="expressions:Parenthesis" begin="7137" end="7155">
                <expression xsi:type="expressions:Operator" begin="7138" end="7154" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="7138" end="7146">
                    <calls begin="7138" end="7146" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="7150" end="7154"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="7160" end="7160" value=""/>
              <thenStatements xsi:type="statements:If" begin="7177" end="7368">
                <condition xsi:type="expressions:Parenthesis" begin="7177" end="7198">
                  <expression xsi:type="expressions:Operator" begin="7178" end="7197" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="7178" end="7192">
                      <calls begin="7178" end="7186" name="opposite" prefix=""/>
                      <calls begin="7187" end="7192" name="upper" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="7196" end="7197" value="1"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="7203" end="7211" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="7213" end="7217">
                  <expression xsi:type="expressions:CallSet" begin="7213" end="7217">
                    <calls begin="7213" end="7217" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7219" end="7226" value="Elt.set"/>
                <thenStatements xsi:type="statements:Feature" begin="7228" end="7252">
                  <expression xsi:type="expressions:CallSet" begin="7228" end="7252">
                    <calls begin="7228" end="7236" name="opposite" prefix=""/>
                    <calls begin="7237" end="7241" name="name" prefix=""/>
                    <calls begin="7242" end="7252" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7254" end="7263" value="(null);&#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="7287" end="7295" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="7297" end="7301">
                  <expression xsi:type="expressions:CallSet" begin="7297" end="7301">
                    <calls begin="7297" end="7301" name="name" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="7303" end="7310" value="Elt.get"/>
                <elseStatements xsi:type="statements:Feature" begin="7312" end="7336">
                  <expression xsi:type="expressions:CallSet" begin="7312" end="7336">
                    <calls begin="7312" end="7320" name="opposite" prefix=""/>
                    <calls begin="7321" end="7325" name="name" prefix=""/>
                    <calls begin="7326" end="7336" name="toU1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="7338" end="7356" value="().remove(this);&#xD;&#xA;"/>
              </thenStatements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7390" end="7397" value="    }&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="7415" end="7417" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="7422" end="9125">
          <condition xsi:type="expressions:Parenthesis" begin="7422" end="7444">
            <expression xsi:type="expressions:CallSet" begin="7423" end="7443">
              <calls begin="7423" end="7443" name="interfaceRealization" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="7449" end="7449" value=""/>
          <thenStatements xsi:type="statements:For" begin="7459" end="9118">
            <iterator xsi:type="expressions:Parenthesis" begin="7459" end="7508">
              <expression xsi:type="expressions:CallSet" begin="7460" end="7507">
                <calls begin="7460" end="7480" name="interfaceRealization" prefix=""/>
                <calls begin="7481" end="7487" name="target" prefix=""/>
                <calls begin="7488" end="7507" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="7495" end="7506" value="Interface"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="7513" end="7548" value="    /* Implementation of interface "/>
            <statements xsi:type="statements:Feature" begin="7550" end="7554">
              <expression xsi:type="expressions:CallSet" begin="7550" end="7554">
                <calls begin="7550" end="7554" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="7556" end="7568" value=": start */&#xD;&#xA;"/>
            <statements xsi:type="statements:For" begin="7582" end="9052">
              <iterator xsi:type="expressions:Parenthesis" begin="7582" end="7624">
                <expression xsi:type="expressions:CallSet" begin="7583" end="7623">
                  <calls begin="7583" end="7596" name="itfAttributes" prefix=""/>
                  <calls begin="7597" end="7615" name="filter" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="7604" end="7614" value="Property"/>
                    <filter xsi:type="expressions:Not" begin="7616" end="7622">
                      <expression xsi:type="expressions:CallSet" begin="7618" end="7622">
                        <calls begin="7618" end="7622" name="isPK" prefix=""/>
                      </expression>
                    </filter>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Feature" begin="7631" end="7640">
                <expression xsi:type="expressions:CallSet" begin="7631" end="7640">
                  <calls begin="7631" end="7635" name="name" prefix=""/>
                  <calls begin="7636" end="7640" name="push" prefix=""/>
                </expression>
              </statements>
              <statements xsi:type="statements:If" begin="7647" end="9037">
                <condition xsi:type="expressions:Parenthesis" begin="7647" end="7691">
                  <expression xsi:type="expressions:Not" begin="7648" end="7690">
                    <expression xsi:type="expressions:CallSet" begin="7650" end="7690">
                      <calls begin="7650" end="7666" name="current" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="7658" end="7665" value="Class"/>
                      </calls>
                      <calls begin="7667" end="7676" name="attribute" prefix="">
                        <filter xsi:type="expressions:Operator" begin="7677" end="7689" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="7677" end="7681">
                            <calls begin="7677" end="7681" name="name" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:CallSet" begin="7685" end="7689">
                            <calls begin="7685" end="7689" name="peek" prefix=""/>
                          </operands>
                        </filter>
                      </calls>
                    </expression>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Feature" begin="7696" end="7699">
                  <expression xsi:type="expressions:CallSet" begin="7696" end="7699">
                    <calls begin="7696" end="7699" name="pop" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7701" end="7737" value="&#xD;&#xA;    /**&#xD;&#xA;     * Implementation of "/>
                <thenStatements xsi:type="statements:Feature" begin="7739" end="7764">
                  <expression xsi:type="expressions:CallSet" begin="7739" end="7764">
                    <calls begin="7739" end="7759" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="7747" end="7758" value="Interface"/>
                    </calls>
                    <calls begin="7760" end="7764" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7766" end="7769" value="'s "/>
                <thenStatements xsi:type="statements:Feature" begin="7771" end="7775">
                  <expression xsi:type="expressions:CallSet" begin="7771" end="7775">
                    <calls begin="7771" end="7775" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7777" end="7787" value=" getter.&#xD;&#xA;"/>
                <thenStatements xsi:type="statements:If" begin="7800" end="7983">
                  <condition xsi:type="expressions:Parenthesis" begin="7800" end="7832">
                    <expression xsi:type="expressions:Operator" begin="7801" end="7831" operator=">">
                      <operands xsi:type="expressions:CallSet" begin="7801" end="7827">
                        <calls begin="7801" end="7813" name="ownedComment" prefix=""/>
                        <calls begin="7814" end="7818" name="body" prefix=""/>
                        <calls begin="7819" end="7827" name="length" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="7830" end="7831"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="7837" end="7852" value="     * @return "/>
                  <thenStatements xsi:type="statements:Feature" begin="7854" end="7901">
                    <expression xsi:type="expressions:CallSet" begin="7854" end="7901">
                      <calls begin="7854" end="7866" name="ownedComment" prefix=""/>
                      <calls begin="7867" end="7871" name="body" prefix=""/>
                      <calls begin="7872" end="7901" name="replaceAll" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="7883" end="7887" value="&#xA;"/>
                        <arguments xsi:type="expressions:StringLiteral" begin="7889" end="7900" value="&#xA;     * "/>
                      </calls>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="7903" end="7905" value="&#xD;&#xA;"/>
                  <elseStatements xsi:type="statements:Text" begin="7925" end="7975" value="     * @return Warning, no comment in the model.&#xD;&#xA;"/>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7990" end="8002" value="     * @see "/>
                <thenStatements xsi:type="statements:Feature" begin="8004" end="8029">
                  <expression xsi:type="expressions:CallSet" begin="8004" end="8029">
                    <calls begin="8004" end="8024" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="8012" end="8023" value="Interface"/>
                    </calls>
                    <calls begin="8025" end="8029" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8031" end="8032" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="8034" end="8044">
                  <expression xsi:type="expressions:CallSet" begin="8034" end="8044">
                    <calls begin="8034" end="8044" name="getterName" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8046" end="8061" value="&#xD;&#xA;     */&#xD;&#xA;    "/>
                <thenStatements xsi:type="statements:Feature" begin="8063" end="8078">
                  <expression xsi:type="expressions:CallSet" begin="8063" end="8078">
                    <calls begin="8063" end="8078" name="getterSignature" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8080" end="8095" value=" {&#xD;&#xA;        // "/>
                <thenStatements xsi:type="statements:Feature" begin="8097" end="8110">
                  <expression xsi:type="expressions:CallSet" begin="8097" end="8110">
                    <calls begin="8097" end="8110" name="startUserCode" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8112" end="8127" value=" for getter of "/>
                <thenStatements xsi:type="statements:Feature" begin="8129" end="8133">
                  <expression xsi:type="expressions:CallSet" begin="8129" end="8133">
                    <calls begin="8129" end="8133" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8135" end="8276" value=" [DO NOT REMOVE]&#xD;&#xA;        // TODO Implement me !&#xD;&#xA;        throw new UnsupportedOperationException(&quot;Method not yet implemented&quot;);&#xD;&#xA;        // "/>
                <thenStatements xsi:type="statements:Feature" begin="8278" end="8289">
                  <expression xsi:type="expressions:CallSet" begin="8278" end="8289">
                    <calls begin="8278" end="8289" name="endUserCode" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8291" end="8306" value=" for getter of "/>
                <thenStatements xsi:type="statements:Feature" begin="8308" end="8312">
                  <expression xsi:type="expressions:CallSet" begin="8308" end="8312">
                    <calls begin="8308" end="8312" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8314" end="8375" value=" [DO NOT REMOVE]&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Implementation of "/>
                <thenStatements xsi:type="statements:Feature" begin="8377" end="8402">
                  <expression xsi:type="expressions:CallSet" begin="8377" end="8402">
                    <calls begin="8377" end="8397" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="8385" end="8396" value="Interface"/>
                    </calls>
                    <calls begin="8398" end="8402" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8404" end="8407" value="'s "/>
                <thenStatements xsi:type="statements:Feature" begin="8409" end="8413">
                  <expression xsi:type="expressions:CallSet" begin="8409" end="8413">
                    <calls begin="8409" end="8413" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8415" end="8439" value=" setter.&#xD;&#xA;     * @param "/>
                <thenStatements xsi:type="statements:Feature" begin="8441" end="8450">
                  <expression xsi:type="expressions:CallSet" begin="8441" end="8450">
                    <calls begin="8441" end="8450" name="paramName" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8452" end="8454" value="&#xD;&#xA;"/>
                <thenStatements xsi:type="statements:If" begin="8467" end="8667">
                  <condition xsi:type="expressions:Parenthesis" begin="8467" end="8499">
                    <expression xsi:type="expressions:Operator" begin="8468" end="8498" operator=">">
                      <operands xsi:type="expressions:CallSet" begin="8468" end="8494">
                        <calls begin="8468" end="8480" name="ownedComment" prefix=""/>
                        <calls begin="8481" end="8485" name="body" prefix=""/>
                        <calls begin="8486" end="8494" name="length" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="8497" end="8498"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="8504" end="8522" value="     *            "/>
                  <thenStatements xsi:type="statements:Feature" begin="8524" end="8582">
                    <expression xsi:type="expressions:CallSet" begin="8524" end="8582">
                      <calls begin="8524" end="8536" name="ownedComment" prefix=""/>
                      <calls begin="8537" end="8541" name="body" prefix=""/>
                      <calls begin="8542" end="8582" name="replaceAll" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="8553" end="8557" value="&#xA;"/>
                        <arguments xsi:type="expressions:StringLiteral" begin="8559" end="8581" value="&#xA;     *            "/>
                      </calls>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="8584" end="8586" value="&#xD;&#xA;"/>
                  <elseStatements xsi:type="statements:Text" begin="8606" end="8659" value="     *            Warning, no comment in the model.&#xD;&#xA;"/>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8674" end="8686" value="     * @see "/>
                <thenStatements xsi:type="statements:Feature" begin="8688" end="8713">
                  <expression xsi:type="expressions:CallSet" begin="8688" end="8713">
                    <calls begin="8688" end="8708" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="8696" end="8707" value="Interface"/>
                    </calls>
                    <calls begin="8709" end="8713" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8715" end="8716" value="."/>
                <thenStatements xsi:type="statements:Feature" begin="8718" end="8728">
                  <expression xsi:type="expressions:CallSet" begin="8718" end="8728">
                    <calls begin="8718" end="8728" name="setterName" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8730" end="8745" value="&#xD;&#xA;     */&#xD;&#xA;    "/>
                <thenStatements xsi:type="statements:Feature" begin="8747" end="8762">
                  <expression xsi:type="expressions:CallSet" begin="8747" end="8762">
                    <calls begin="8747" end="8762" name="setterSignature" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8764" end="8779" value=" {&#xD;&#xA;        // "/>
                <thenStatements xsi:type="statements:Feature" begin="8781" end="8794">
                  <expression xsi:type="expressions:CallSet" begin="8781" end="8794">
                    <calls begin="8781" end="8794" name="startUserCode" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8796" end="8811" value=" for setter of "/>
                <thenStatements xsi:type="statements:Feature" begin="8813" end="8817">
                  <expression xsi:type="expressions:CallSet" begin="8813" end="8817">
                    <calls begin="8813" end="8817" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8819" end="8960" value=" [DO NOT REMOVE]&#xD;&#xA;        // TODO Implement me !&#xD;&#xA;        throw new UnsupportedOperationException(&quot;Method not yet implemented&quot;);&#xD;&#xA;        // "/>
                <thenStatements xsi:type="statements:Feature" begin="8962" end="8973">
                  <expression xsi:type="expressions:CallSet" begin="8962" end="8973">
                    <calls begin="8962" end="8973" name="endUserCode" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8975" end="8990" value=" for setter of "/>
                <thenStatements xsi:type="statements:Feature" begin="8992" end="8996">
                  <expression xsi:type="expressions:CallSet" begin="8992" end="8996">
                    <calls begin="8992" end="8996" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8998" end="9025" value=" [DO NOT REMOVE]&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
              </statements>
              <statements xsi:type="statements:Text" begin="9042" end="9044" value="&#xD;&#xA;"/>
            </statements>
            <statements xsi:type="statements:Text" begin="9059" end="9094" value="    /* Implementation of interface "/>
            <statements xsi:type="statements:Feature" begin="9096" end="9100">
              <expression xsi:type="expressions:CallSet" begin="9096" end="9100">
                <calls begin="9096" end="9100" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="9102" end="9114" value=": end */&#xD;&#xA;&#xD;&#xA;"/>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="9132" end="9304" value="    /**&#xD;&#xA;     * Equality test based on attributes values.&#xD;&#xA;     * @param other Value to compare&#xD;&#xA;     * @return Returns true if and only if given object is an instance of&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="9314" end="9573">
          <condition xsi:type="expressions:Parenthesis" begin="9314" end="9364">
            <expression xsi:type="expressions:Operator" begin="9315" end="9363" operator="||">
              <operands xsi:type="expressions:CallSet" begin="9315" end="9328">
                <calls begin="9315" end="9328" name="hasPrimaryKey" prefix=""/>
              </operands>
              <operands xsi:type="expressions:CallSet" begin="9332" end="9363">
                <calls begin="9332" end="9345" name="defaultPKType" prefix=""/>
                <calls begin="9346" end="9363" name="isPrimitiveType" prefix=""/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="9369" end="9376" value="     * "/>
          <thenStatements xsi:type="statements:Feature" begin="9378" end="9382">
            <expression xsi:type="expressions:CallSet" begin="9378" end="9382">
              <calls begin="9378" end="9382" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="9384" end="9432" value=" and the given object has the same PK as this.&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="9449" end="9456" value="     * "/>
          <elseStatements xsi:type="statements:Feature" begin="9458" end="9462">
            <expression xsi:type="expressions:CallSet" begin="9458" end="9462">
              <calls begin="9458" end="9462" name="name" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="9464" end="9568" value=" and the given object has the same PK as this&#xD;&#xA;     * if the PK is not null or their fields are equal.&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="9580" end="9751" value="     */&#xD;&#xA;    @Override&#xD;&#xA;    public boolean equals(final Object other) {&#xD;&#xA;        if (this == other) {&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;        if (!(other instanceof "/>
        <statements xsi:type="statements:Feature" begin="9753" end="9757">
          <expression xsi:type="expressions:CallSet" begin="9753" end="9757">
            <calls begin="9753" end="9757" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9759" end="9817" value=")) {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;        final "/>
        <statements xsi:type="statements:Feature" begin="9819" end="9823">
          <expression xsi:type="expressions:CallSet" begin="9819" end="9823">
            <calls begin="9819" end="9823" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9825" end="9841" value=" castedOther = ("/>
        <statements xsi:type="statements:Feature" begin="9843" end="9847">
          <expression xsi:type="expressions:CallSet" begin="9843" end="9847">
            <calls begin="9843" end="9847" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9849" end="9859" value=") other;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="9868" end="10781">
          <condition xsi:type="expressions:Parenthesis" begin="9868" end="9883">
            <expression xsi:type="expressions:CallSet" begin="9869" end="9882">
              <calls begin="9869" end="9882" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="9888" end="9888" value=""/>
          <thenStatements xsi:type="statements:For" begin="9902" end="10016">
            <iterator xsi:type="expressions:Parenthesis" begin="9902" end="9937">
              <expression xsi:type="expressions:CallSet" begin="9903" end="9936">
                <calls begin="9903" end="9917" name="getPKAttribute" prefix=""/>
                <calls begin="9918" end="9936" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="9925" end="9935" value="Property"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="9942" end="9957" value="        return "/>
            <statements xsi:type="statements:Feature" begin="9959" end="9963">
              <expression xsi:type="expressions:CallSet" begin="9959" end="9963">
                <calls begin="9959" end="9963" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="9965" end="9984" value=" == castedOther.get"/>
            <statements xsi:type="statements:Feature" begin="9986" end="10001">
              <expression xsi:type="expressions:CallSet" begin="9986" end="10001">
                <calls begin="9986" end="9990" name="name" prefix=""/>
                <calls begin="9991" end="10001" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="10003" end="10008" value="();&#xD;&#xA;"/>
          </thenStatements>
          <elseStatements xsi:type="statements:Text" begin="10135" end="10256" value="        if (id != null &amp;&amp; castedOther.getId() != null) {&#xD;&#xA;            return id.equals(castedOther.getId());&#xD;&#xA;        }&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:For" begin="10270" end="10748">
            <iterator xsi:type="expressions:Parenthesis" begin="10270" end="10295">
              <expression xsi:type="expressions:CallSet" begin="10271" end="10294">
                <calls begin="10271" end="10286" name="classAttributes" prefix="">
                  <filter xsi:type="expressions:Not" begin="10287" end="10293">
                    <expression xsi:type="expressions:CallSet" begin="10289" end="10293">
                      <calls begin="10289" end="10293" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="10301" end="10301" value=""/>
            <statements xsi:type="statements:If" begin="10318" end="10733">
              <condition xsi:type="expressions:Parenthesis" begin="10318" end="10356">
                <expression xsi:type="expressions:Operator" begin="10319" end="10355" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="10319" end="10345">
                    <calls begin="10319" end="10323" name="type" prefix=""/>
                    <calls begin="10324" end="10345" name="isJavaPrimitiveType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="10349" end="10355" value="true"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="10361" end="10373" value="        if ("/>
              <thenStatements xsi:type="statements:Feature" begin="10375" end="10379">
                <expression xsi:type="expressions:CallSet" begin="10375" end="10379">
                  <calls begin="10375" end="10379" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="10381" end="10400" value=" != castedOther.get"/>
              <thenStatements xsi:type="statements:Feature" begin="10402" end="10417">
                <expression xsi:type="expressions:CallSet" begin="10402" end="10417">
                  <calls begin="10402" end="10406" name="name" prefix=""/>
                  <calls begin="10407" end="10417" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="10419" end="10464" value="()) {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="10488" end="10501" value="        if (("/>
              <elseStatements xsi:type="statements:Feature" begin="10503" end="10507">
                <expression xsi:type="expressions:CallSet" begin="10503" end="10507">
                  <calls begin="10503" end="10507" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10509" end="10536" value=" == null &amp;&amp; castedOther.get"/>
              <elseStatements xsi:type="statements:Feature" begin="10538" end="10553">
                <expression xsi:type="expressions:CallSet" begin="10538" end="10553">
                  <calls begin="10538" end="10542" name="name" prefix=""/>
                  <calls begin="10543" end="10553" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10555" end="10586" value="() != null) &#xD;&#xA;             || ("/>
              <elseStatements xsi:type="statements:Feature" begin="10588" end="10592">
                <expression xsi:type="expressions:CallSet" begin="10588" end="10592">
                  <calls begin="10588" end="10592" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10594" end="10607" value=" != null &amp;&amp; !"/>
              <elseStatements xsi:type="statements:Feature" begin="10609" end="10613">
                <expression xsi:type="expressions:CallSet" begin="10609" end="10613">
                  <calls begin="10609" end="10613" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10615" end="10656" value=".equals(&#xD;&#xA;                castedOther.get"/>
              <elseStatements xsi:type="statements:Feature" begin="10658" end="10673">
                <expression xsi:type="expressions:CallSet" begin="10658" end="10673">
                  <calls begin="10658" end="10662" name="name" prefix=""/>
                  <calls begin="10663" end="10673" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10675" end="10721" value="()))) {&#xD;&#xA;           return false;&#xD;&#xA;        }&#xD;&#xA;"/>
            </statements>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="10755" end="10777" value="        return true;&#xD;&#xA;"/>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="10038" end="10071">
              <expression xsi:type="expressions:CallSet" begin="10039" end="10070">
                <calls begin="10039" end="10052" name="defaultPKType" prefix=""/>
                <calls begin="10053" end="10070" name="isPrimitiveType" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="10076" end="10119" value="        return id == castedOther.getId();&#xD;&#xA;"/>
          </elseIf>
        </statements>
        <statements xsi:type="statements:Text" begin="10788" end="10973" value="    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * HashTable code based on attributes hashcodes.&#xD;&#xA;     * @return Returns hash value&#xD;&#xA;     */&#xD;&#xA;    @Override&#xD;&#xA;    public int hashCode() {&#xD;&#xA;        int result = 0;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="10982" end="12090">
          <condition xsi:type="expressions:Parenthesis" begin="10982" end="10997">
            <expression xsi:type="expressions:CallSet" begin="10983" end="10996">
              <calls begin="10983" end="10996" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="11002" end="11028" value="        result = new Long("/>
          <thenStatements xsi:type="statements:Feature" begin="11030" end="11068">
            <expression xsi:type="expressions:CallSet" begin="11030" end="11068">
              <calls begin="11030" end="11044" name="getPKAttribute" prefix=""/>
              <calls begin="11045" end="11063" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="11052" end="11062" value="Property"/>
              </calls>
              <calls begin="11064" end="11068" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="11070" end="11085" value=").hashCode();&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="11217" end="11297" value="        if (id != null) {&#xD;&#xA;            result = id.hashCode();&#xD;&#xA;        } else {"/>
          <elseStatements xsi:type="statements:Comment" begin="11301" end="11432" value=" This else is required to be synchro with the equals() method, otherwise we could generate different hashCodes for equal objects ! "/>
          <elseStatements xsi:type="statements:Text" begin="11436" end="11438" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:For" begin="11452" end="12068">
            <iterator xsi:type="expressions:Parenthesis" begin="11452" end="11512">
              <expression xsi:type="expressions:CallSet" begin="11453" end="11511">
                <calls begin="11453" end="11462" name="attribute" prefix="">
                  <filter xsi:type="expressions:Not" begin="11463" end="11469">
                    <expression xsi:type="expressions:CallSet" begin="11465" end="11469">
                      <calls begin="11465" end="11469" name="isPK" prefix=""/>
                    </expression>
                  </filter>
                </calls>
                <calls begin="11471" end="11511" name="filterExistProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="11491" end="11504" value="association"/>
                  <arguments xsi:type="expressions:BooleanLiteral" begin="11505" end="11510"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="11518" end="11518" value=""/>
            <statements xsi:type="statements:If" begin="11535" end="12053">
              <condition xsi:type="expressions:Parenthesis" begin="11535" end="11559">
                <expression xsi:type="expressions:Operator" begin="11536" end="11558" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="11536" end="11545">
                    <calls begin="11536" end="11540" name="type" prefix=""/>
                    <calls begin="11541" end="11545" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="11549" end="11558" value="Boolean"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="11564" end="11580" value="            if ("/>
              <thenStatements xsi:type="statements:Feature" begin="11582" end="11586">
                <expression xsi:type="expressions:CallSet" begin="11582" end="11586">
                  <calls begin="11582" end="11586" name="name" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="11588" end="11635" value=") {&#xD;&#xA;                result++;&#xD;&#xA;            }&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="11928" end="11944" value="            if ("/>
              <elseStatements xsi:type="statements:Feature" begin="11946" end="11950">
                <expression xsi:type="expressions:CallSet" begin="11946" end="11950">
                  <calls begin="11946" end="11950" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="11952" end="12004" value=" != null) {&#xD;&#xA;                result = 29 * result + "/>
              <elseStatements xsi:type="statements:Feature" begin="12006" end="12010">
                <expression xsi:type="expressions:CallSet" begin="12006" end="12010">
                  <calls begin="12006" end="12010" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="12012" end="12041" value=".hashCode();&#xD;&#xA;            }&#xD;&#xA;"/>
              <elseIf>
                <condition xsi:type="expressions:Parenthesis" begin="11658" end="11682">
                  <expression xsi:type="expressions:Operator" begin="11659" end="11681" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="11659" end="11668">
                      <calls begin="11659" end="11663" name="type" prefix=""/>
                      <calls begin="11664" end="11668" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="11672" end="11681" value="Integer"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="11687" end="11722" value="            result = 29 * result + "/>
                <thenStatements xsi:type="statements:Feature" begin="11724" end="11728">
                  <expression xsi:type="expressions:CallSet" begin="11724" end="11728">
                    <calls begin="11724" end="11728" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="11730" end="11733" value=";&#xD;&#xA;"/>
              </elseIf>
              <elseIf>
                <condition xsi:type="expressions:Parenthesis" begin="11756" end="11778">
                  <expression xsi:type="expressions:Operator" begin="11757" end="11777" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="11757" end="11766">
                      <calls begin="11757" end="11761" name="type" prefix=""/>
                      <calls begin="11762" end="11766" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="11770" end="11777" value="Float"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="11783" end="11799" value="            if ("/>
                <thenStatements xsi:type="statements:Feature" begin="11801" end="11805">
                  <expression xsi:type="expressions:CallSet" begin="11801" end="11805">
                    <calls begin="11801" end="11805" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="11807" end="11866" value=" != null) {&#xD;&#xA;                result = (int) (29 * result + "/>
                <thenStatements xsi:type="statements:Feature" begin="11868" end="11872">
                  <expression xsi:type="expressions:CallSet" begin="11868" end="11872">
                    <calls begin="11868" end="11872" name="name" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="11874" end="11904" value=".hashCode());&#xD;&#xA;            }&#xD;&#xA;"/>
              </elseIf>
            </statements>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="12075" end="12086" value="        }&#xD;&#xA;"/>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="11100" end="11133">
              <expression xsi:type="expressions:CallSet" begin="11101" end="11132">
                <calls begin="11101" end="11114" name="defaultPKType" prefix=""/>
                <calls begin="11115" end="11132" name="isPrimitiveType" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="11138" end="11159" value="        result = new "/>
            <thenStatements xsi:type="statements:Feature" begin="11161" end="11181">
              <expression xsi:type="expressions:CallSet" begin="11161" end="11181">
                <calls begin="11161" end="11181" name="defaultPKTypeWrapper" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="11183" end="11201" value="(id).hashCode();&#xD;&#xA;"/>
          </elseIf>
        </statements>
        <statements xsi:type="statements:Text" begin="12097" end="12130" value="        return result;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="12134" end="12212" value=" N.B. It is mandatory to have identical lines for start and end user code !!! "/>
        <statements xsi:type="statements:Text" begin="12218" end="12225" value="    // "/>
        <statements xsi:type="statements:Feature" begin="12227" end="12240">
          <expression xsi:type="expressions:CallSet" begin="12227" end="12240">
            <calls begin="12227" end="12240" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12242" end="12335" value=" for private methods&#xD;&#xA;    // TODO Remove this line and add your private methods here&#xD;&#xA;    // "/>
        <statements xsi:type="statements:Feature" begin="12337" end="12348">
          <expression xsi:type="expressions:CallSet" begin="12337" end="12348">
            <calls begin="12337" end="12348" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12350" end="12377" value=" for private methods&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;"/>
      </scripts>
      <scripts begin="12515" end="12577">
        <descriptor begin="12481" end="12511" name="extensions" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="12520" end="12572">
          <condition xsi:type="expressions:Parenthesis" begin="12520" end="12541">
            <expression xsi:type="expressions:Not" begin="12521" end="12540">
              <expression xsi:type="expressions:CallSet" begin="12522" end="12540">
                <calls begin="12522" end="12532" name="superClass" prefix=""/>
                <calls begin="12533" end="12540" name="isEmpty" prefix=""/>
              </expression>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="12544" end="12553" value=" extends "/>
          <thenStatements xsi:type="statements:Feature" begin="12555" end="12570">
            <expression xsi:type="expressions:CallSet" begin="12555" end="12570">
              <calls begin="12555" end="12565" name="superClass" prefix=""/>
              <calls begin="12566" end="12570" name="name" prefix=""/>
            </expression>
          </thenStatements>
        </statements>
      </scripts>
      <scripts begin="12743" end="12776">
        <descriptor begin="12696" end="12739" name="asParameter" type="StructuralFeature">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="12745" end="12765">
          <expression xsi:type="expressions:CallSet" begin="12745" end="12765">
            <calls begin="12745" end="12765" name="convertToJavaDtoType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="12767" end="12768" value=" "/>
        <statements xsi:type="statements:Feature" begin="12770" end="12774">
          <expression xsi:type="expressions:CallSet" begin="12770" end="12774">
            <calls begin="12770" end="12774" name="name" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="12919" end="12985">
        <descriptor begin="12874" end="12915" name="implementedInterfaces" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="12921" end="12983">
          <expression xsi:type="expressions:CallSet" begin="12921" end="12983">
            <calls begin="12921" end="12941" name="interfaceRealization" prefix=""/>
            <calls begin="12942" end="12948" name="target" prefix=""/>
            <calls begin="12949" end="12968" name="filter" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="12956" end="12967" value="Interface"/>
            </calls>
            <calls begin="12969" end="12973" name="name" prefix=""/>
            <calls begin="12974" end="12983" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="12978" end="12982" value=", "/>
            </calls>
          </expression>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.business.interfaces" imports="/0/@resources.9 /0/@resources.3 /0/@resources.7 /0/@resources.12 /0/@resources.10" beginTag="&lt;%" endTag="%>">
      <scripts begin="472" end="2170">
        <descriptor begin="412" end="468" name="generate" type="Interface">
          <file>
            <statements xsi:type="statements:Feature" begin="453" end="465">
              <expression xsi:type="expressions:CallSet" begin="453" end="465">
                <calls begin="453" end="465" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="472" end="480" value="package "/>
        <statements xsi:type="statements:Feature" begin="482" end="495">
          <expression xsi:type="expressions:CallSet" begin="482" end="495">
            <calls begin="482" end="495" name="entityPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="497" end="507" value=";&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="512" end="674">
          <condition xsi:type="expressions:Parenthesis" begin="512" end="544">
            <expression xsi:type="expressions:Operator" begin="513" end="543" operator=">">
              <operands xsi:type="expressions:CallSet" begin="513" end="539">
                <calls begin="513" end="525" name="ownedComment" prefix=""/>
                <calls begin="526" end="530" name="body" prefix=""/>
                <calls begin="531" end="539" name="length" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="542" end="543"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="549" end="552" value=" * "/>
          <thenStatements xsi:type="statements:Feature" begin="554" end="597">
            <expression xsi:type="expressions:CallSet" begin="554" end="597">
              <calls begin="554" end="566" name="ownedComment" prefix=""/>
              <calls begin="567" end="571" name="body" prefix=""/>
              <calls begin="572" end="597" name="replaceAll" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="583" end="587" value="&#xA;"/>
                <arguments xsi:type="expressions:StringLiteral" begin="589" end="596" value="&#xA; * "/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="599" end="601" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="613" end="663" value=" * Warning: no comment in the model for interface "/>
          <elseStatements xsi:type="statements:Feature" begin="665" end="669">
            <expression xsi:type="expressions:CallSet" begin="665" end="669">
              <calls begin="665" end="669" name="name" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="671" end="674" value=".&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="681" end="703" value=" */&#xD;&#xA;public interface "/>
        <statements xsi:type="statements:Feature" begin="705" end="709">
          <expression xsi:type="expressions:CallSet" begin="705" end="709">
            <calls begin="705" end="709" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="711" end="717" value=" {&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="721" end="794" value=" For each field declared in the model,&#xD;&#xA;    let's generate getter+setter "/>
        <statements xsi:type="statements:For" begin="806" end="1488">
          <iterator xsi:type="expressions:Parenthesis" begin="806" end="840">
            <expression xsi:type="expressions:CallSet" begin="807" end="839">
              <calls begin="807" end="820" name="itfAttributes" prefix=""/>
              <calls begin="821" end="839" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="828" end="838" value="Property"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="845" end="869" value="    /**&#xD;&#xA;     * Returns "/>
          <statements xsi:type="statements:Feature" begin="871" end="875">
            <expression xsi:type="expressions:CallSet" begin="871" end="875">
              <calls begin="871" end="875" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="877" end="880" value=".&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="889" end="1064">
            <condition xsi:type="expressions:Parenthesis" begin="889" end="921">
              <expression xsi:type="expressions:Operator" begin="890" end="920" operator=">">
                <operands xsi:type="expressions:CallSet" begin="890" end="916">
                  <calls begin="890" end="902" name="ownedComment" prefix=""/>
                  <calls begin="903" end="907" name="body" prefix=""/>
                  <calls begin="908" end="916" name="length" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="919" end="920"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="926" end="941" value="     * @return "/>
            <thenStatements xsi:type="statements:Feature" begin="943" end="990">
              <expression xsi:type="expressions:CallSet" begin="943" end="990">
                <calls begin="943" end="955" name="ownedComment" prefix=""/>
                <calls begin="956" end="960" name="body" prefix=""/>
                <calls begin="961" end="990" name="replaceAll" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="972" end="976" value="&#xA;"/>
                  <arguments xsi:type="expressions:StringLiteral" begin="978" end="989" value="&#xA;     * "/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="992" end="994" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="1010" end="1060" value="     * @return Warning, no comment in the model.&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="1071" end="1084" value="     */&#xD;&#xA;    "/>
          <statements xsi:type="statements:Feature" begin="1086" end="1104">
            <expression xsi:type="expressions:CallSet" begin="1086" end="1104">
              <calls begin="1086" end="1104" name="getterItfSignature" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1106" end="1111" value=";&#xD;&#xA;&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="1120" end="1481">
            <condition xsi:type="expressions:Parenthesis" begin="1120" end="1147">
              <expression xsi:type="expressions:Operator" begin="1121" end="1146" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="1121" end="1132">
                  <expression xsi:type="expressions:CallSet" begin="1122" end="1132">
                    <calls begin="1122" end="1132" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="1136" end="1146">
                  <expression xsi:type="expressions:CallSet" begin="1137" end="1146">
                    <calls begin="1137" end="1146" name="isDerived" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1152" end="1177" value="    /**&#xD;&#xA;     * Sets the "/>
            <thenStatements xsi:type="statements:Feature" begin="1179" end="1183">
              <expression xsi:type="expressions:CallSet" begin="1179" end="1183">
                <calls begin="1179" end="1183" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1185" end="1202" value=".&#xD;&#xA;     * @param "/>
            <thenStatements xsi:type="statements:Feature" begin="1204" end="1213">
              <expression xsi:type="expressions:CallSet" begin="1204" end="1213">
                <calls begin="1204" end="1213" name="paramName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1215" end="1217" value="&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="1230" end="1430">
              <condition xsi:type="expressions:Parenthesis" begin="1230" end="1262">
                <expression xsi:type="expressions:Operator" begin="1231" end="1261" operator=">">
                  <operands xsi:type="expressions:CallSet" begin="1231" end="1257">
                    <calls begin="1231" end="1243" name="ownedComment" prefix=""/>
                    <calls begin="1244" end="1248" name="body" prefix=""/>
                    <calls begin="1249" end="1257" name="length" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="1260" end="1261"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="1267" end="1285" value="     *            "/>
              <thenStatements xsi:type="statements:Feature" begin="1287" end="1345">
                <expression xsi:type="expressions:CallSet" begin="1287" end="1345">
                  <calls begin="1287" end="1299" name="ownedComment" prefix=""/>
                  <calls begin="1300" end="1304" name="body" prefix=""/>
                  <calls begin="1305" end="1345" name="replaceAll" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1316" end="1320" value="&#xA;"/>
                    <arguments xsi:type="expressions:StringLiteral" begin="1322" end="1344" value="&#xA;     *            "/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="1347" end="1349" value="&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="1369" end="1422" value="     *            Warning, no comment in the model.&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1437" end="1450" value="     */&#xD;&#xA;    "/>
            <thenStatements xsi:type="statements:Feature" begin="1452" end="1470">
              <expression xsi:type="expressions:CallSet" begin="1452" end="1470">
                <calls begin="1452" end="1470" name="setterItfSignature" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1472" end="1477" value=";&#xD;&#xA;&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Comment" begin="1499" end="1571" value=" For each operation declared in the model,&#xD;&#xA;    let's generate a method "/>
        <statements xsi:type="statements:For" begin="1583" end="2158">
          <iterator xsi:type="expressions:Parenthesis" begin="1583" end="1619">
            <expression xsi:type="expressions:CallSet" begin="1584" end="1618">
              <calls begin="1584" end="1598" name="ownedOperation" prefix=""/>
              <calls begin="1599" end="1618" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1606" end="1617" value="Operation"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1624" end="1635" value="&#xD;&#xA;    /**&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="1644" end="1803">
            <condition xsi:type="expressions:Parenthesis" begin="1644" end="1676">
              <expression xsi:type="expressions:Operator" begin="1645" end="1675" operator=">">
                <operands xsi:type="expressions:CallSet" begin="1645" end="1671">
                  <calls begin="1645" end="1657" name="ownedComment" prefix=""/>
                  <calls begin="1658" end="1662" name="body" prefix=""/>
                  <calls begin="1663" end="1671" name="length" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1674" end="1675"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1681" end="1688" value="     * "/>
            <thenStatements xsi:type="statements:Feature" begin="1690" end="1737">
              <expression xsi:type="expressions:CallSet" begin="1690" end="1737">
                <calls begin="1690" end="1702" name="ownedComment" prefix=""/>
                <calls begin="1703" end="1707" name="body" prefix=""/>
                <calls begin="1708" end="1737" name="replaceAll" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1719" end="1723" value="&#xA;"/>
                  <arguments xsi:type="expressions:StringLiteral" begin="1725" end="1736" value="&#xA;     * "/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1739" end="1741" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="1757" end="1799" value="     * Warning, no comment in the model.&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="1810" end="1810" value=""/>
          <statements xsi:type="statements:For" begin="1820" end="2119">
            <iterator xsi:type="expressions:Parenthesis" begin="1820" end="1861">
              <expression xsi:type="expressions:CallSet" begin="1821" end="1860">
                <calls begin="1821" end="1840" name="getRealParameters" prefix=""/>
                <calls begin="1841" end="1860" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1848" end="1859" value="Parameter"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="1866" end="1880" value="     * @param "/>
            <statements xsi:type="statements:Feature" begin="1882" end="1891">
              <expression xsi:type="expressions:CallSet" begin="1882" end="1891">
                <calls begin="1882" end="1891" name="paramName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1893" end="1895" value="&#xD;&#xA;"/>
            <statements xsi:type="statements:If" begin="1908" end="2108">
              <condition xsi:type="expressions:Parenthesis" begin="1908" end="1940">
                <expression xsi:type="expressions:Operator" begin="1909" end="1939" operator=">">
                  <operands xsi:type="expressions:CallSet" begin="1909" end="1935">
                    <calls begin="1909" end="1921" name="ownedComment" prefix=""/>
                    <calls begin="1922" end="1926" name="body" prefix=""/>
                    <calls begin="1927" end="1935" name="length" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="1938" end="1939"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="1945" end="1963" value="     *            "/>
              <thenStatements xsi:type="statements:Feature" begin="1965" end="2023">
                <expression xsi:type="expressions:CallSet" begin="1965" end="2023">
                  <calls begin="1965" end="1977" name="ownedComment" prefix=""/>
                  <calls begin="1978" end="1982" name="body" prefix=""/>
                  <calls begin="1983" end="2023" name="replaceAll" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1994" end="1998" value="&#xA;"/>
                    <arguments xsi:type="expressions:StringLiteral" begin="2000" end="2022" value="&#xA;     *            "/>
                  </calls>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2025" end="2027" value="&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="2047" end="2100" value="     *            Warning, no comment in the model.&#xD;&#xA;"/>
            </statements>
          </statements>
          <statements xsi:type="statements:Text" begin="2126" end="2139" value="     */&#xD;&#xA;    "/>
          <statements xsi:type="statements:Feature" begin="2141" end="2153">
            <expression xsi:type="expressions:CallSet" begin="2141" end="2153">
              <calls begin="2141" end="2153" name="itfSignature" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2155" end="2158" value=";&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2165" end="2170" value="&#xD;&#xA;}&#xD;&#xA;"/>
      </scripts>
      <scripts begin="2322" end="2381">
        <descriptor begin="2282" end="2318" name="fullFilePath" type="Interface">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2324" end="2338">
          <expression xsi:type="expressions:CallSet" begin="2324" end="2338">
            <calls begin="2324" end="2338" name="pathToMainJava" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2340" end="2341" value="/"/>
        <statements xsi:type="statements:Feature" begin="2343" end="2365">
          <expression xsi:type="expressions:CallSet" begin="2343" end="2365">
            <calls begin="2343" end="2356" name="entityPackage" prefix=""/>
            <calls begin="2357" end="2365" name="toPath" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2367" end="2368" value="/"/>
        <statements xsi:type="statements:Feature" begin="2370" end="2374">
          <expression xsi:type="expressions:CallSet" begin="2370" end="2374">
            <calls begin="2370" end="2374" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2376" end="2381" value=".java"/>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.common.common" imports="/0/@resources.9 /0/@resources.12 /0/@resources.5 /0/@resources.6 /0/@resources.7 /0/@resources.4" beginTag="&lt;%" endTag="%>">
      <scripts begin="845" end="947">
        <descriptor begin="792" end="841" name="insertInPackage" type="Element">
          <file/>
          <post xsi:type="expressions:CallSet" begin="836" end="840">
            <calls begin="836" end="840" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="850" end="942">
          <condition xsi:type="expressions:Parenthesis" begin="850" end="910">
            <expression xsi:type="expressions:Operator" begin="851" end="909" operator="&amp;&amp;">
              <operands xsi:type="expressions:Operator" begin="851" end="879" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="851" end="871">
                  <calls begin="851" end="871" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="863" end="870">
                      <calls begin="863" end="870" name="args" prefix="">
                        <arguments xsi:type="expressions:IntegerLiteral" begin="868" end="869"/>
                      </calls>
                    </arguments>
                  </calls>
                </operands>
                <operands xsi:type="expressions:NullLiteral" begin="875" end="879"/>
              </operands>
              <operands xsi:type="expressions:Operator" begin="883" end="909" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="883" end="903">
                  <calls begin="883" end="903" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="895" end="902">
                      <calls begin="895" end="902" name="args" prefix="">
                        <arguments xsi:type="expressions:IntegerLiteral" begin="900" end="901"/>
                      </calls>
                    </arguments>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="907" end="909" value=""/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="915" end="916" value="."/>
          <thenStatements xsi:type="statements:Feature" begin="918" end="938">
            <expression xsi:type="expressions:CallSet" begin="918" end="938">
              <calls begin="918" end="938" name="getProperty" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="930" end="937">
                  <calls begin="930" end="937" name="args" prefix="">
                    <arguments xsi:type="expressions:IntegerLiteral" begin="935" end="936"/>
                  </calls>
                </arguments>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="940" end="942" value="&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1008" end="1415">
        <descriptor begin="960" end="1004" name="entityPackage" type="Type">
          <file/>
          <post xsi:type="expressions:CallSet" begin="999" end="1003">
            <calls begin="999" end="1003" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="1013" end="1410">
          <condition xsi:type="expressions:Parenthesis" begin="1013" end="1052">
            <expression xsi:type="expressions:Operator" begin="1014" end="1051" operator="==">
              <operands xsi:type="expressions:CallSet" begin="1014" end="1045">
                <calls begin="1014" end="1045" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1026" end="1044" value="useEntityPackage"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="1047" end="1051" value="no"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1057" end="1061" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="1063" end="1086">
            <expression xsi:type="expressions:CallSet" begin="1063" end="1086">
              <calls begin="1063" end="1070" name="package" prefix=""/>
              <calls begin="1071" end="1086" name="getCompleteName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1088" end="1090" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="1102" end="1102" value=""/>
          <elseStatements xsi:type="statements:If" begin="1111" end="1403">
            <condition xsi:type="expressions:Parenthesis" begin="1111" end="1164">
              <expression xsi:type="expressions:Operator" begin="1112" end="1163" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1112" end="1153">
                  <calls begin="1112" end="1153" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1124" end="1152" value="use.functional.disposition"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="1157" end="1163" value="true"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1169" end="1177" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="1179" end="1190">
              <expression xsi:type="expressions:CallSet" begin="1179" end="1190">
                <calls begin="1179" end="1190" name="baseImports" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1192" end="1193" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1195" end="1206">
              <expression xsi:type="expressions:CallSet" begin="1195" end="1206">
                <calls begin="1195" end="1206" name="projectName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1208" end="1209" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1211" end="1233">
              <expression xsi:type="expressions:CallSet" begin="1211" end="1233">
                <calls begin="1211" end="1218" name="package" prefix=""/>
                <calls begin="1219" end="1233" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1237" end="1272">
              <expression xsi:type="expressions:CallSet" begin="1237" end="1272">
                <calls begin="1237" end="1272" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1253" end="1271" value="business.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1274" end="1276" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="1292" end="1300" value="        "/>
            <elseStatements xsi:type="statements:Feature" begin="1302" end="1313">
              <expression xsi:type="expressions:CallSet" begin="1302" end="1313">
                <calls begin="1302" end="1313" name="baseImports" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1315" end="1316" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1318" end="1329">
              <expression xsi:type="expressions:CallSet" begin="1318" end="1329">
                <calls begin="1318" end="1329" name="projectName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="1333" end="1368">
              <expression xsi:type="expressions:CallSet" begin="1333" end="1368">
                <calls begin="1333" end="1368" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1349" end="1367" value="business.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1370" end="1371" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1373" end="1395">
              <expression xsi:type="expressions:CallSet" begin="1373" end="1395">
                <calls begin="1373" end="1380" name="package" prefix=""/>
                <calls begin="1381" end="1395" name="normalizedName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1397" end="1399" value="&#xD;&#xA;"/>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="1470" end="1502">
        <descriptor begin="1428" end="1466" name="entityQualifiedName" type="Type">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1472" end="1485">
          <expression xsi:type="expressions:CallSet" begin="1472" end="1485">
            <calls begin="1472" end="1485" name="entityPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1487" end="1488" value="."/>
        <statements xsi:type="statements:Feature" begin="1490" end="1500">
          <expression xsi:type="expressions:CallSet" begin="1490" end="1500">
            <calls begin="1490" end="1500" name="entityName" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1560" end="2032">
        <descriptor begin="1515" end="1556" name="dtoPackage" type="Type">
          <file/>
          <post xsi:type="expressions:CallSet" begin="1551" end="1555">
            <calls begin="1551" end="1555" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="1565" end="2027">
          <condition xsi:type="expressions:Parenthesis" begin="1565" end="1687">
            <expression xsi:type="expressions:Operator" begin="1566" end="1686" operator="||">
              <operands xsi:type="expressions:Operator" begin="1566" end="1600" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1566" end="1594">
                  <calls begin="1566" end="1594" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1578" end="1593" value="useDtoPackage"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="1596" end="1600" value="no"/>
              </operands>
              <operands xsi:type="expressions:Parenthesis" begin="1604" end="1686">
                <expression xsi:type="expressions:Operator" begin="1605" end="1685" operator="&amp;&amp;">
                  <operands xsi:type="expressions:CallSet" begin="1605" end="1634">
                    <calls begin="1605" end="1625" name="filter" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="1612" end="1624" value="Classifier"/>
                    </calls>
                    <calls begin="1626" end="1634" name="isEntity" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:Operator" begin="1638" end="1685" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="1638" end="1676">
                      <calls begin="1638" end="1676" name="getProperty" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="1650" end="1675" value="generate.dto.per.entity"/>
                      </calls>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="1680" end="1685" value="yes"/>
                  </operands>
                </expression>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1692" end="1696" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="1698" end="1721">
            <expression xsi:type="expressions:CallSet" begin="1698" end="1721">
              <calls begin="1698" end="1705" name="package" prefix=""/>
              <calls begin="1706" end="1721" name="getCompleteName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1723" end="1725" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="1737" end="1737" value=""/>
          <elseStatements xsi:type="statements:If" begin="1746" end="2020">
            <condition xsi:type="expressions:Parenthesis" begin="1746" end="1799">
              <expression xsi:type="expressions:Operator" begin="1747" end="1798" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1747" end="1788">
                  <calls begin="1747" end="1788" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1759" end="1787" value="use.functional.disposition"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="1792" end="1798" value="true"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1804" end="1808" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="1810" end="1821">
              <expression xsi:type="expressions:CallSet" begin="1810" end="1821">
                <calls begin="1810" end="1821" name="baseImports" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1823" end="1824" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1826" end="1837">
              <expression xsi:type="expressions:CallSet" begin="1826" end="1837">
                <calls begin="1826" end="1837" name="projectName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1839" end="1840" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1842" end="1864">
              <expression xsi:type="expressions:CallSet" begin="1842" end="1864">
                <calls begin="1842" end="1849" name="package" prefix=""/>
                <calls begin="1850" end="1864" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1868" end="1898">
              <expression xsi:type="expressions:CallSet" begin="1868" end="1898">
                <calls begin="1868" end="1898" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1884" end="1897" value="dto.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1900" end="1902" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="1918" end="1922" value="    "/>
            <elseStatements xsi:type="statements:Feature" begin="1924" end="1935">
              <expression xsi:type="expressions:CallSet" begin="1924" end="1935">
                <calls begin="1924" end="1935" name="baseImports" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1937" end="1938" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1940" end="1951">
              <expression xsi:type="expressions:CallSet" begin="1940" end="1951">
                <calls begin="1940" end="1951" name="projectName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="1955" end="1985">
              <expression xsi:type="expressions:CallSet" begin="1955" end="1985">
                <calls begin="1955" end="1985" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1971" end="1984" value="dto.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1987" end="1988" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1990" end="2012">
              <expression xsi:type="expressions:CallSet" begin="1990" end="2012">
                <calls begin="1990" end="1997" name="package" prefix=""/>
                <calls begin="1998" end="2012" name="normalizedName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="2014" end="2016" value="&#xD;&#xA;"/>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="2084" end="2110">
        <descriptor begin="2045" end="2080" name="dtoQualifiedName" type="Type">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2086" end="2096">
          <expression xsi:type="expressions:CallSet" begin="2086" end="2096">
            <calls begin="2086" end="2096" name="dtoPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2098" end="2099" value="."/>
        <statements xsi:type="statements:Feature" begin="2101" end="2108">
          <expression xsi:type="expressions:CallSet" begin="2101" end="2108">
            <calls begin="2101" end="2108" name="dtoName" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2270" end="2308">
        <descriptor begin="2224" end="2266" name="getCompleteName" type="NamedElement">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2272" end="2306">
          <expression xsi:type="expressions:CallSet" begin="2272" end="2306">
            <calls begin="2272" end="2285" name="qualifiedName" prefix=""/>
            <calls begin="2286" end="2306" name="replaceAll" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2297" end="2301" value="::"/>
              <arguments xsi:type="expressions:StringLiteral" begin="2302" end="2305" value="."/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2362" end="2390">
        <descriptor begin="2321" end="2358" name="getCompleteName" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2364" end="2388">
          <expression xsi:type="expressions:CallSet" begin="2364" end="2388">
            <calls begin="2364" end="2370" name="self" prefix=""/>
            <calls begin="2371" end="2388" name="getCompleteName" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2455" end="2491">
        <descriptor begin="2403" end="2451" name="pathToMainJava" type="EObject">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2446" end="2450">
            <calls begin="2446" end="2450" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2457" end="2489">
          <expression xsi:type="expressions:CallSet" begin="2457" end="2489">
            <calls begin="2457" end="2489" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2469" end="2488" value="path.to.main.java"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2556" end="2592">
        <descriptor begin="2504" end="2552" name="pathToTestJava" type="EObject">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2547" end="2551">
            <calls begin="2547" end="2551" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2558" end="2590">
          <expression xsi:type="expressions:CallSet" begin="2558" end="2590">
            <calls begin="2558" end="2590" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2570" end="2589" value="path.to.test.java"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2662" end="2703">
        <descriptor begin="2605" end="2658" name="pathToMainResources" type="EObject">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2653" end="2657">
            <calls begin="2653" end="2657" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2664" end="2701">
          <expression xsi:type="expressions:CallSet" begin="2664" end="2701">
            <calls begin="2664" end="2701" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2676" end="2700" value="path.to.main.resources"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2773" end="2814">
        <descriptor begin="2716" end="2769" name="pathToTestResources" type="EObject">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2764" end="2768">
            <calls begin="2764" end="2768" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2775" end="2812">
          <expression xsi:type="expressions:CallSet" begin="2775" end="2812">
            <calls begin="2775" end="2812" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2787" end="2811" value="path.to.test.resources"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2881" end="2919">
        <descriptor begin="2827" end="2877" name="pathToMainWebapp" type="EObject">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2872" end="2876">
            <calls begin="2872" end="2876" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2883" end="2917">
          <expression xsi:type="expressions:CallSet" begin="2883" end="2917">
            <calls begin="2883" end="2917" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2895" end="2916" value="path.to.main.webapp"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2986" end="3024">
        <descriptor begin="2932" end="2982" name="pathToTestWebapp" type="EObject">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2977" end="2981">
            <calls begin="2977" end="2981" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2988" end="3022">
          <expression xsi:type="expressions:CallSet" begin="2988" end="3022">
            <calls begin="2988" end="3022" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3000" end="3021" value="path.to.test.webapp"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3082" end="3180">
        <descriptor begin="3037" end="3078" name="getPKName" type="Class">
          <file/>
          <post xsi:type="expressions:CallSet" begin="3073" end="3077">
            <calls begin="3073" end="3077" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="3087" end="3175">
          <condition xsi:type="expressions:Parenthesis" begin="3087" end="3102">
            <expression xsi:type="expressions:CallSet" begin="3088" end="3101">
              <calls begin="3088" end="3101" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3107" end="3111" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="3113" end="3151">
            <expression xsi:type="expressions:CallSet" begin="3113" end="3151">
              <calls begin="3113" end="3127" name="getPKAttribute" prefix=""/>
              <calls begin="3128" end="3146" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="3135" end="3145" value="Property"/>
              </calls>
              <calls begin="3147" end="3151" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="3153" end="3155" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="3167" end="3175" value="    id&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="3246" end="3377">
        <descriptor begin="3193" end="3242" name="getPKJavaTypeName" type="Class">
          <file/>
          <post xsi:type="expressions:CallSet" begin="3237" end="3241">
            <calls begin="3237" end="3241" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="3251" end="3372">
          <condition xsi:type="expressions:Parenthesis" begin="3251" end="3266">
            <expression xsi:type="expressions:CallSet" begin="3252" end="3265">
              <calls begin="3252" end="3265" name="hasPrimaryKey" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3271" end="3275" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="3277" end="3333">
            <expression xsi:type="expressions:CallSet" begin="3277" end="3333">
              <calls begin="3277" end="3291" name="getPKAttribute" prefix=""/>
              <calls begin="3292" end="3310" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="3299" end="3309" value="Property"/>
              </calls>
              <calls begin="3311" end="3315" name="type" prefix=""/>
              <calls begin="3316" end="3333" name="convertToJavaType" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="3335" end="3337" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="3349" end="3353" value="    "/>
          <elseStatements xsi:type="statements:Feature" begin="3355" end="3368">
            <expression xsi:type="expressions:CallSet" begin="3355" end="3368">
              <calls begin="3355" end="3368" name="defaultPKType" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="3370" end="3372" value="&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="3435" end="3473">
        <descriptor begin="3390" end="3431" name="getterItfSignature" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3437" end="3454">
          <expression xsi:type="expressions:CallSet" begin="3437" end="3454">
            <calls begin="3437" end="3454" name="convertToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3456" end="3457" value=" "/>
        <statements xsi:type="statements:Feature" begin="3459" end="3469">
          <expression xsi:type="expressions:CallSet" begin="3459" end="3469">
            <calls begin="3459" end="3469" name="getterName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3471" end="3473" value="()"/>
      </scripts>
      <scripts begin="3528" end="3557">
        <descriptor begin="3486" end="3524" name="getterSignature" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3528" end="3535" value="public "/>
        <statements xsi:type="statements:Feature" begin="3537" end="3555">
          <expression xsi:type="expressions:CallSet" begin="3537" end="3555">
            <calls begin="3537" end="3555" name="getterItfSignature" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3607" end="3629">
        <descriptor begin="3570" end="3603" name="getterName" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3607" end="3610" value="get"/>
        <statements xsi:type="statements:Feature" begin="3612" end="3627">
          <expression xsi:type="expressions:CallSet" begin="3612" end="3627">
            <calls begin="3612" end="3616" name="name" prefix=""/>
            <calls begin="3617" end="3627" name="toU1Case" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3679" end="3701">
        <descriptor begin="3642" end="3675" name="setterName" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3679" end="3682" value="set"/>
        <statements xsi:type="statements:Feature" begin="3684" end="3699">
          <expression xsi:type="expressions:CallSet" begin="3684" end="3699">
            <calls begin="3684" end="3688" name="name" prefix=""/>
            <calls begin="3689" end="3699" name="toU1Case" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3759" end="3821">
        <descriptor begin="3714" end="3755" name="setterItfSignature" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3759" end="3764" value="void "/>
        <statements xsi:type="statements:Feature" begin="3766" end="3776">
          <expression xsi:type="expressions:CallSet" begin="3766" end="3776">
            <calls begin="3766" end="3776" name="setterName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3778" end="3785" value="(final "/>
        <statements xsi:type="statements:Feature" begin="3787" end="3804">
          <expression xsi:type="expressions:CallSet" begin="3787" end="3804">
            <calls begin="3787" end="3804" name="convertToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3806" end="3807" value=" "/>
        <statements xsi:type="statements:Feature" begin="3809" end="3818">
          <expression xsi:type="expressions:CallSet" begin="3809" end="3818">
            <calls begin="3809" end="3818" name="paramName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3820" end="3821" value=")"/>
      </scripts>
      <scripts begin="3876" end="3905">
        <descriptor begin="3834" end="3872" name="setterSignature" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3876" end="3883" value="public "/>
        <statements xsi:type="statements:Feature" begin="3885" end="3903">
          <expression xsi:type="expressions:CallSet" begin="3885" end="3903">
            <calls begin="3885" end="3903" name="setterItfSignature" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3966" end="4007">
        <descriptor begin="3918" end="3962" name="getterItfDtoSignature" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3968" end="3988">
          <expression xsi:type="expressions:CallSet" begin="3968" end="3988">
            <calls begin="3968" end="3988" name="convertToJavaDtoType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3990" end="3991" value=" "/>
        <statements xsi:type="statements:Feature" begin="3993" end="4003">
          <expression xsi:type="expressions:CallSet" begin="3993" end="4003">
            <calls begin="3993" end="4003" name="getterName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4005" end="4007" value="()"/>
      </scripts>
      <scripts begin="4065" end="4097">
        <descriptor begin="4020" end="4061" name="getterDtoSignature" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="4065" end="4072" value="public "/>
        <statements xsi:type="statements:Feature" begin="4074" end="4095">
          <expression xsi:type="expressions:CallSet" begin="4074" end="4095">
            <calls begin="4074" end="4095" name="getterItfDtoSignature" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="4158" end="4223">
        <descriptor begin="4110" end="4154" name="setterItfDtoSignature" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="4158" end="4163" value="void "/>
        <statements xsi:type="statements:Feature" begin="4165" end="4175">
          <expression xsi:type="expressions:CallSet" begin="4165" end="4175">
            <calls begin="4165" end="4175" name="setterName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4177" end="4184" value="(final "/>
        <statements xsi:type="statements:Feature" begin="4186" end="4206">
          <expression xsi:type="expressions:CallSet" begin="4186" end="4206">
            <calls begin="4186" end="4206" name="convertToJavaDtoType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4208" end="4209" value=" "/>
        <statements xsi:type="statements:Feature" begin="4211" end="4220">
          <expression xsi:type="expressions:CallSet" begin="4211" end="4220">
            <calls begin="4211" end="4220" name="paramName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4222" end="4223" value=")"/>
      </scripts>
      <scripts begin="4281" end="4313">
        <descriptor begin="4236" end="4277" name="setterDtoSignature" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="4281" end="4288" value="public "/>
        <statements xsi:type="statements:Feature" begin="4290" end="4311">
          <expression xsi:type="expressions:CallSet" begin="4290" end="4311">
            <calls begin="4290" end="4311" name="setterItfDtoSignature" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="4363" end="4386">
        <descriptor begin="4326" end="4359" name="signature" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="4363" end="4370" value="public "/>
        <statements xsi:type="statements:Feature" begin="4372" end="4384">
          <expression xsi:type="expressions:CallSet" begin="4372" end="4384">
            <calls begin="4372" end="4384" name="itfSignature" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="4439" end="4490">
        <descriptor begin="4399" end="4435" name="itfSignature" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="4441" end="4455">
          <expression xsi:type="expressions:CallSet" begin="4441" end="4455">
            <calls begin="4441" end="4455" name="generateReturn" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4457" end="4458" value=" "/>
        <statements xsi:type="statements:Feature" begin="4460" end="4464">
          <expression xsi:type="expressions:CallSet" begin="4460" end="4464">
            <calls begin="4460" end="4464" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4466" end="4467" value="("/>
        <statements xsi:type="statements:Feature" begin="4469" end="4487">
          <expression xsi:type="expressions:CallSet" begin="4469" end="4487">
            <calls begin="4469" end="4487" name="generateParameters" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4489" end="4490" value=")"/>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.common.dataTypes" imports="/0/@resources.9 /0/@resources.5 /0/@resources.10" beginTag="&lt;%" endTag="%>">
      <scripts begin="604" end="824">
        <descriptor begin="560" end="601" name="convertToJavaType" type="Parameter">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="609" end="819">
          <condition xsi:type="expressions:Parenthesis" begin="609" end="622">
            <expression xsi:type="expressions:Operator" begin="610" end="621" operator="==">
              <operands xsi:type="expressions:CallSet" begin="610" end="615">
                <calls begin="610" end="615" name="upper" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="619" end="621" value="-1"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:If" begin="630" end="778">
            <condition xsi:type="expressions:Parenthesis" begin="630" end="641">
              <expression xsi:type="expressions:CallSet" begin="631" end="640">
                <calls begin="631" end="640" name="isOrdered" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="644" end="649" value="List&lt;"/>
            <thenStatements xsi:type="statements:Feature" begin="651" end="673">
              <expression xsi:type="expressions:CallSet" begin="651" end="673">
                <calls begin="651" end="655" name="type" prefix=""/>
                <calls begin="656" end="673" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="675" end="676" value=">"/>
            <elseStatements xsi:type="statements:Text" begin="740" end="751" value="Collection&lt;"/>
            <elseStatements xsi:type="statements:Feature" begin="753" end="775">
              <expression xsi:type="expressions:CallSet" begin="753" end="775">
                <calls begin="753" end="757" name="type" prefix=""/>
                <calls begin="758" end="775" name="convertToJavaType" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="777" end="778" value=">"/>
            <elseIf>
              <condition xsi:type="expressions:Parenthesis" begin="686" end="696">
                <expression xsi:type="expressions:CallSet" begin="687" end="695">
                  <calls begin="687" end="695" name="isUnique" prefix=""/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="699" end="703" value="Set&lt;"/>
              <thenStatements xsi:type="statements:Feature" begin="705" end="727">
                <expression xsi:type="expressions:CallSet" begin="705" end="727">
                  <calls begin="705" end="709" name="type" prefix=""/>
                  <calls begin="710" end="727" name="convertToJavaType" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="729" end="730" value=">"/>
            </elseIf>
          </thenStatements>
          <elseStatements xsi:type="statements:Feature" begin="795" end="817">
            <expression xsi:type="expressions:CallSet" begin="795" end="817">
              <calls begin="795" end="799" name="type" prefix=""/>
              <calls begin="800" end="817" name="convertToJavaType" prefix=""/>
            </expression>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="887" end="1107">
        <descriptor begin="835" end="884" name="convertToJavaType" type="StructuralFeature">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="892" end="1102">
          <condition xsi:type="expressions:Parenthesis" begin="892" end="905">
            <expression xsi:type="expressions:Operator" begin="893" end="904" operator="==">
              <operands xsi:type="expressions:CallSet" begin="893" end="898">
                <calls begin="893" end="898" name="upper" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="902" end="904" value="-1"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:If" begin="913" end="1061">
            <condition xsi:type="expressions:Parenthesis" begin="913" end="924">
              <expression xsi:type="expressions:CallSet" begin="914" end="923">
                <calls begin="914" end="923" name="isOrdered" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="927" end="932" value="List&lt;"/>
            <thenStatements xsi:type="statements:Feature" begin="934" end="956">
              <expression xsi:type="expressions:CallSet" begin="934" end="956">
                <calls begin="934" end="938" name="type" prefix=""/>
                <calls begin="939" end="956" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="958" end="959" value=">"/>
            <elseStatements xsi:type="statements:Text" begin="1023" end="1034" value="Collection&lt;"/>
            <elseStatements xsi:type="statements:Feature" begin="1036" end="1058">
              <expression xsi:type="expressions:CallSet" begin="1036" end="1058">
                <calls begin="1036" end="1040" name="type" prefix=""/>
                <calls begin="1041" end="1058" name="convertToJavaType" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1060" end="1061" value=">"/>
            <elseIf>
              <condition xsi:type="expressions:Parenthesis" begin="969" end="979">
                <expression xsi:type="expressions:CallSet" begin="970" end="978">
                  <calls begin="970" end="978" name="isUnique" prefix=""/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="982" end="986" value="Set&lt;"/>
              <thenStatements xsi:type="statements:Feature" begin="988" end="1010">
                <expression xsi:type="expressions:CallSet" begin="988" end="1010">
                  <calls begin="988" end="992" name="type" prefix=""/>
                  <calls begin="993" end="1010" name="convertToJavaType" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="1012" end="1013" value=">"/>
            </elseIf>
          </thenStatements>
          <elseStatements xsi:type="statements:Feature" begin="1078" end="1100">
            <expression xsi:type="expressions:CallSet" begin="1078" end="1100">
              <calls begin="1078" end="1082" name="type" prefix=""/>
              <calls begin="1083" end="1100" name="convertToJavaType" prefix=""/>
            </expression>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="1166" end="1398">
        <descriptor begin="1119" end="1163" name="convertToJavaDtoType" type="Parameter">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1171" end="1393">
          <condition xsi:type="expressions:Parenthesis" begin="1171" end="1184">
            <expression xsi:type="expressions:Operator" begin="1172" end="1183" operator="==">
              <operands xsi:type="expressions:CallSet" begin="1172" end="1177">
                <calls begin="1172" end="1177" name="upper" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="1181" end="1183" value="-1"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:If" begin="1192" end="1349">
            <condition xsi:type="expressions:Parenthesis" begin="1192" end="1203">
              <expression xsi:type="expressions:CallSet" begin="1193" end="1202">
                <calls begin="1193" end="1202" name="isOrdered" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1206" end="1211" value="List&lt;"/>
            <thenStatements xsi:type="statements:Feature" begin="1213" end="1238">
              <expression xsi:type="expressions:CallSet" begin="1213" end="1238">
                <calls begin="1213" end="1217" name="type" prefix=""/>
                <calls begin="1218" end="1238" name="convertToJavaDtoType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1240" end="1241" value=">"/>
            <elseStatements xsi:type="statements:Text" begin="1308" end="1319" value="Collection&lt;"/>
            <elseStatements xsi:type="statements:Feature" begin="1321" end="1346">
              <expression xsi:type="expressions:CallSet" begin="1321" end="1346">
                <calls begin="1321" end="1325" name="type" prefix=""/>
                <calls begin="1326" end="1346" name="convertToJavaDtoType" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1348" end="1349" value=">"/>
            <elseIf>
              <condition xsi:type="expressions:Parenthesis" begin="1251" end="1261">
                <expression xsi:type="expressions:CallSet" begin="1252" end="1260">
                  <calls begin="1252" end="1260" name="isUnique" prefix=""/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="1264" end="1268" value="Set&lt;"/>
              <thenStatements xsi:type="statements:Feature" begin="1270" end="1295">
                <expression xsi:type="expressions:CallSet" begin="1270" end="1295">
                  <calls begin="1270" end="1274" name="type" prefix=""/>
                  <calls begin="1275" end="1295" name="convertToJavaDtoType" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="1297" end="1298" value=">"/>
            </elseIf>
          </thenStatements>
          <elseStatements xsi:type="statements:Feature" begin="1366" end="1391">
            <expression xsi:type="expressions:CallSet" begin="1366" end="1391">
              <calls begin="1366" end="1370" name="type" prefix=""/>
              <calls begin="1371" end="1391" name="convertToJavaDtoType" prefix=""/>
            </expression>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="1464" end="1696">
        <descriptor begin="1409" end="1461" name="convertToJavaDtoType" type="StructuralFeature">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1469" end="1691">
          <condition xsi:type="expressions:Parenthesis" begin="1469" end="1482">
            <expression xsi:type="expressions:Operator" begin="1470" end="1481" operator="==">
              <operands xsi:type="expressions:CallSet" begin="1470" end="1475">
                <calls begin="1470" end="1475" name="upper" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="1479" end="1481" value="-1"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:If" begin="1490" end="1647">
            <condition xsi:type="expressions:Parenthesis" begin="1490" end="1501">
              <expression xsi:type="expressions:CallSet" begin="1491" end="1500">
                <calls begin="1491" end="1500" name="isOrdered" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1504" end="1509" value="List&lt;"/>
            <thenStatements xsi:type="statements:Feature" begin="1511" end="1536">
              <expression xsi:type="expressions:CallSet" begin="1511" end="1536">
                <calls begin="1511" end="1515" name="type" prefix=""/>
                <calls begin="1516" end="1536" name="convertToJavaDtoType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1538" end="1539" value=">"/>
            <elseStatements xsi:type="statements:Text" begin="1606" end="1617" value="Collection&lt;"/>
            <elseStatements xsi:type="statements:Feature" begin="1619" end="1644">
              <expression xsi:type="expressions:CallSet" begin="1619" end="1644">
                <calls begin="1619" end="1623" name="type" prefix=""/>
                <calls begin="1624" end="1644" name="convertToJavaDtoType" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1646" end="1647" value=">"/>
            <elseIf>
              <condition xsi:type="expressions:Parenthesis" begin="1549" end="1559">
                <expression xsi:type="expressions:CallSet" begin="1550" end="1558">
                  <calls begin="1550" end="1558" name="isUnique" prefix=""/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="1562" end="1566" value="Set&lt;"/>
              <thenStatements xsi:type="statements:Feature" begin="1568" end="1593">
                <expression xsi:type="expressions:CallSet" begin="1568" end="1593">
                  <calls begin="1568" end="1572" name="type" prefix=""/>
                  <calls begin="1573" end="1593" name="convertToJavaDtoType" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="1595" end="1596" value=">"/>
            </elseIf>
          </thenStatements>
          <elseStatements xsi:type="statements:Feature" begin="1664" end="1689">
            <expression xsi:type="expressions:CallSet" begin="1664" end="1689">
              <calls begin="1664" end="1668" name="type" prefix=""/>
              <calls begin="1669" end="1689" name="convertToJavaDtoType" prefix=""/>
            </expression>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="1741" end="1770">
        <descriptor begin="1707" end="1738" name="dtoSuffix" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1743" end="1768">
          <expression xsi:type="expressions:CallSet" begin="1743" end="1768">
            <calls begin="1743" end="1768" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="1755" end="1767" value="dto.suffix"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1818" end="1850">
        <descriptor begin="1781" end="1815" name="entitySuffix" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1820" end="1848">
          <expression xsi:type="expressions:CallSet" begin="1820" end="1848">
            <calls begin="1820" end="1848" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="1832" end="1847" value="entity.suffix"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1901" end="1909">
        <descriptor begin="1862" end="1898" name="convertToJavaType" type="Type">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1903" end="1907">
          <expression xsi:type="expressions:CallSet" begin="1903" end="1907">
            <calls begin="1903" end="1907" name="name" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1961" end="2142">
        <descriptor begin="1920" end="1958" name="dtoName" type="Type">
          <file/>
          <post xsi:type="expressions:CallSet" begin="1953" end="1957">
            <calls begin="1953" end="1957" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="1966" end="2137">
          <condition xsi:type="expressions:Parenthesis" begin="1966" end="2083">
            <expression xsi:type="expressions:Operator" begin="1967" end="2082" operator="||">
              <operands xsi:type="expressions:Operator" begin="1967" end="2001" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1967" end="1995">
                  <calls begin="1967" end="1995" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1979" end="1994" value="useDtoPackage"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="1997" end="2001" value="no"/>
              </operands>
              <operands xsi:type="expressions:Parenthesis" begin="2005" end="2082">
                <expression xsi:type="expressions:Operator" begin="2006" end="2081" operator="&amp;&amp;">
                  <operands xsi:type="expressions:CallSet" begin="2006" end="2030">
                    <calls begin="2006" end="2021" name="filter" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="2013" end="2020" value="Class"/>
                    </calls>
                    <calls begin="2022" end="2030" name="isEntity" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:Operator" begin="2034" end="2081" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="2034" end="2072">
                      <calls begin="2034" end="2072" name="getProperty" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="2046" end="2071" value="generate.dto.per.entity"/>
                      </calls>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="2076" end="2081" value="yes"/>
                  </operands>
                </expression>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2087" end="2091" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="2093" end="2097">
            <expression xsi:type="expressions:CallSet" begin="2093" end="2097">
              <calls begin="2093" end="2097" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2099" end="2100" value="&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="2111" end="2115" value="    "/>
          <elseStatements xsi:type="statements:Feature" begin="2117" end="2121">
            <expression xsi:type="expressions:CallSet" begin="2117" end="2121">
              <calls begin="2117" end="2121" name="name" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Feature" begin="2125" end="2134">
            <expression xsi:type="expressions:CallSet" begin="2125" end="2134">
              <calls begin="2125" end="2134" name="dtoSuffix" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="2136" end="2137" value="&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="2197" end="2221">
        <descriptor begin="2153" end="2194" name="entityName" type="Type">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2189" end="2193">
            <calls begin="2189" end="2193" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2199" end="2203">
          <expression xsi:type="expressions:CallSet" begin="2199" end="2203">
            <calls begin="2199" end="2203" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="2207" end="2219">
          <expression xsi:type="expressions:CallSet" begin="2207" end="2219">
            <calls begin="2207" end="2219" name="entitySuffix" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2274" end="2285">
        <descriptor begin="2232" end="2271" name="convertToJavaDtoType" type="Type">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2276" end="2283">
          <expression xsi:type="expressions:CallSet" begin="2276" end="2283">
            <calls begin="2276" end="2283" name="dtoName" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2343" end="2351">
        <descriptor begin="2296" end="2340" name="convertToJavaDtoType" type="Interface">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2345" end="2349">
          <expression xsi:type="expressions:CallSet" begin="2345" end="2349">
            <calls begin="2345" end="2349" name="name" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2473" end="2517">
        <descriptor begin="2425" end="2470" name="convertToJavaType" type="PrimitiveType">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2475" end="2515">
          <expression xsi:type="expressions:CallSet" begin="2475" end="2515">
            <calls begin="2475" end="2515" name="getProperty" prefix="">
              <arguments xsi:type="expressions:Operator" begin="2487" end="2514" operator="+">
                <operands xsi:type="expressions:StringLiteral" begin="2487" end="2509" value="java.typeconversion."/>
                <operands xsi:type="expressions:CallSet" begin="2510" end="2514">
                  <calls begin="2510" end="2514" name="name" prefix=""/>
                </operands>
              </arguments>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2579" end="2600">
        <descriptor begin="2528" end="2576" name="convertToJavaDtoType" type="PrimitiveType">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2581" end="2598">
          <expression xsi:type="expressions:CallSet" begin="2581" end="2598">
            <calls begin="2581" end="2598" name="convertToJavaType" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2654" end="2978">
        <descriptor begin="2611" end="2651" name="nullValue" type="Type">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2646" end="2650">
            <calls begin="2646" end="2650" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="2659" end="2973">
          <condition xsi:type="expressions:Parenthesis" begin="2659" end="2749">
            <expression xsi:type="expressions:Operator" begin="2660" end="2748" operator="||">
              <operands xsi:type="expressions:Operator" begin="2660" end="2686" operator="==">
                <operands xsi:type="expressions:CallSet" begin="2660" end="2677">
                  <calls begin="2660" end="2677" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="2681" end="2686" value="int"/>
              </operands>
              <operands xsi:type="expressions:Operator" begin="2690" end="2717" operator="==">
                <operands xsi:type="expressions:CallSet" begin="2690" end="2707">
                  <calls begin="2690" end="2707" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="2711" end="2717" value="long"/>
              </operands>
              <operands xsi:type="expressions:Operator" begin="2721" end="2748" operator="==">
                <operands xsi:type="expressions:CallSet" begin="2721" end="2738">
                  <calls begin="2721" end="2738" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="2742" end="2748" value="byte"/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2753" end="2759" value="    0&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="2964" end="2973" value="    null&#xA;"/>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="2770" end="2833">
              <expression xsi:type="expressions:Operator" begin="2771" end="2832" operator="||">
                <operands xsi:type="expressions:Operator" begin="2771" end="2800" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="2771" end="2788">
                    <calls begin="2771" end="2788" name="convertToJavaType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="2792" end="2800" value="double"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="2804" end="2832" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="2804" end="2821">
                    <calls begin="2804" end="2821" name="convertToJavaType" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="2825" end="2832" value="float"/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2837" end="2845" value="    0.0&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="2856" end="2888">
              <expression xsi:type="expressions:Operator" begin="2857" end="2887" operator="==">
                <operands xsi:type="expressions:CallSet" begin="2857" end="2874">
                  <calls begin="2857" end="2874" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="2878" end="2887" value="boolean"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2892" end="2902" value="    false&#xA;"/>
          </elseIf>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="2913" end="2942">
              <expression xsi:type="expressions:Operator" begin="2914" end="2941" operator="==">
                <operands xsi:type="expressions:CallSet" begin="2914" end="2931">
                  <calls begin="2914" end="2931" name="convertToJavaType" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="2935" end="2941" value="char"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2946" end="2953" value="    ''&#xA;"/>
          </elseIf>
        </statements>
      </scripts>
      <scripts begin="3027" end="3061">
        <descriptor begin="2989" end="3024" name="defaultPKType" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3029" end="3059">
          <expression xsi:type="expressions:CallSet" begin="3029" end="3059">
            <calls begin="3029" end="3059" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3041" end="3058" value="default.pk.type"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3117" end="3165">
        <descriptor begin="3072" end="3114" name="defaultPKTypeWrapper" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3119" end="3163">
          <expression xsi:type="expressions:CallSet" begin="3119" end="3163">
            <calls begin="3119" end="3163" name="getProperty" prefix="">
              <arguments xsi:type="expressions:Operator" begin="3131" end="3162" operator="+">
                <operands xsi:type="expressions:StringLiteral" begin="3131" end="3146" value="java.wrapper."/>
                <operands xsi:type="expressions:CallSet" begin="3149" end="3162">
                  <calls begin="3149" end="3162" name="defaultPKType" prefix=""/>
                </operands>
              </arguments>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3217" end="3256">
        <descriptor begin="3176" end="3214" name="isJavaPrimitiveType" type="Type">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3219" end="3254">
          <expression xsi:type="expressions:CallSet" begin="3219" end="3254">
            <calls begin="3219" end="3236" name="convertToJavaType" prefix=""/>
            <calls begin="3237" end="3254" name="isPrimitiveType" prefix=""/>
          </expression>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.common.requests" imports="/0/@resources.9 /0/@resources.12" beginTag="&lt;%" endTag="%>">
      <scripts begin="531" end="571">
        <descriptor begin="494" end="527" name="isEntity" type="Classifier">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="533" end="569">
          <expression xsi:type="expressions:CallSet" begin="533" end="569">
            <calls begin="533" end="569" name="hasStereotype" prefix="">
              <arguments xsi:type="expressions:CallSet" begin="547" end="568">
                <calls begin="547" end="568" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="559" end="567" value="Entity"/>
                </calls>
              </arguments>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="613" end="650">
        <descriptor begin="584" end="609" name="isDao" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="615" end="648">
          <expression xsi:type="expressions:CallSet" begin="615" end="648">
            <calls begin="615" end="648" name="hasStereotype" prefix="">
              <arguments xsi:type="expressions:CallSet" begin="629" end="647">
                <calls begin="629" end="647" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="641" end="646" value="Dao"/>
                </calls>
              </arguments>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="692" end="729">
        <descriptor begin="663" end="688" name="isDto" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="694" end="727">
          <expression xsi:type="expressions:CallSet" begin="694" end="727">
            <calls begin="694" end="727" name="hasStereotype" prefix="">
              <arguments xsi:type="expressions:CallSet" begin="708" end="726">
                <calls begin="708" end="726" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="720" end="725" value="Dto"/>
                </calls>
              </arguments>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="773" end="809">
        <descriptor begin="742" end="769" name="isPK" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="775" end="807">
          <expression xsi:type="expressions:CallSet" begin="775" end="807">
            <calls begin="775" end="807" name="hasStereotype" prefix="">
              <arguments xsi:type="expressions:CallSet" begin="789" end="806">
                <calls begin="789" end="806" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="801" end="805" value="pk"/>
                </calls>
              </arguments>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="859" end="962">
        <descriptor begin="822" end="855" name="hasPrimaryKey" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="861" end="960">
          <expression xsi:type="expressions:Operator" begin="861" end="960" operator="||">
            <operands xsi:type="expressions:CallSet" begin="861" end="876">
              <calls begin="861" end="870" name="attribute" prefix="">
                <filter xsi:type="expressions:CallSet" begin="871" end="875">
                  <calls begin="871" end="875" name="isPK" prefix=""/>
                </filter>
              </calls>
            </operands>
            <operands xsi:type="expressions:CallSet" begin="880" end="960">
              <calls begin="880" end="900" name="interfaceRealization" prefix=""/>
              <calls begin="901" end="907" name="target" prefix=""/>
              <calls begin="908" end="927" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="915" end="926" value="Interface"/>
                <filter xsi:type="expressions:CallSet" begin="928" end="936">
                  <calls begin="928" end="936" name="isEntity" prefix=""/>
                </filter>
              </calls>
              <calls begin="938" end="944" name="nFirst" prefix=""/>
              <calls begin="945" end="954" name="attribute" prefix="">
                <filter xsi:type="expressions:CallSet" begin="955" end="959">
                  <calls begin="955" end="959" name="isPK" prefix=""/>
                </filter>
              </calls>
            </operands>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1013" end="1122">
        <descriptor begin="975" end="1009" name="getPKAttribute" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1015" end="1120">
          <expression xsi:type="expressions:Operator" begin="1015" end="1120" operator="+">
            <operands xsi:type="expressions:CallSet" begin="1015" end="1037">
              <calls begin="1015" end="1024" name="attribute" prefix="">
                <filter xsi:type="expressions:CallSet" begin="1025" end="1029">
                  <calls begin="1025" end="1029" name="isPK" prefix=""/>
                </filter>
              </calls>
              <calls begin="1031" end="1037" name="nFirst" prefix=""/>
            </operands>
            <operands xsi:type="expressions:CallSet" begin="1040" end="1120">
              <calls begin="1040" end="1060" name="interfaceRealization" prefix=""/>
              <calls begin="1061" end="1067" name="target" prefix=""/>
              <calls begin="1068" end="1087" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1075" end="1086" value="Interface"/>
                <filter xsi:type="expressions:CallSet" begin="1088" end="1096">
                  <calls begin="1088" end="1096" name="isEntity" prefix=""/>
                </filter>
              </calls>
              <calls begin="1098" end="1104" name="nFirst" prefix=""/>
              <calls begin="1105" end="1114" name="attribute" prefix="">
                <filter xsi:type="expressions:CallSet" begin="1115" end="1119">
                  <calls begin="1115" end="1119" name="isPK" prefix=""/>
                </filter>
              </calls>
            </operands>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1173" end="1224">
        <descriptor begin="1135" end="1169" name="dtoPerEntity" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1175" end="1222">
          <expression xsi:type="expressions:Operator" begin="1175" end="1222" operator="==">
            <operands xsi:type="expressions:CallSet" begin="1175" end="1213">
              <calls begin="1175" end="1213" name="getProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1187" end="1212" value="generate.dto.per.entity"/>
              </calls>
            </operands>
            <operands xsi:type="expressions:StringLiteral" begin="1217" end="1222" value="yes"/>
          </expression>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.common.specifics" imports="/0/@resources.9 /0/@resources.12" beginTag="&lt;%" endTag="%>">
      <scripts begin="604" end="864">
        <descriptor begin="514" end="559" name="baseImports" type="Element">
          <file/>
          <post xsi:type="expressions:CallSet" begin="554" end="558">
            <calls begin="554" end="558" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="609" end="859">
          <condition xsi:type="expressions:Parenthesis" begin="609" end="654">
            <expression xsi:type="expressions:Operator" begin="610" end="653" operator="==">
              <operands xsi:type="expressions:CallSet" begin="610" end="646">
                <calls begin="610" end="646" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="622" end="645" value="useModelAsBaseImports"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="648" end="653" value="yes"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="658" end="658" value=""/>
          <thenStatements xsi:type="statements:If" begin="667" end="807">
            <condition xsi:type="expressions:Parenthesis" begin="667" end="684">
              <expression xsi:type="expressions:CallSet" begin="668" end="683">
                <calls begin="668" end="683" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="675" end="682" value="Model"/>
                </calls>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="688" end="696" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="698" end="728">
              <expression xsi:type="expressions:CallSet" begin="698" end="728">
                <calls begin="698" end="702" name="self" prefix=""/>
                <calls begin="703" end="707" name="name" prefix=""/>
                <calls begin="708" end="728" name="replaceAll" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="719" end="723" value="::"/>
                  <arguments xsi:type="expressions:StringLiteral" begin="724" end="727" value="."/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="730" end="731" value="&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="746" end="754" value="        "/>
            <elseStatements xsi:type="statements:Feature" begin="756" end="800">
              <expression xsi:type="expressions:CallSet" begin="756" end="800">
                <calls begin="756" end="774" name="getRootContainer" prefix=""/>
                <calls begin="775" end="779" name="name" prefix=""/>
                <calls begin="780" end="800" name="replaceAll" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="791" end="795" value="::"/>
                  <arguments xsi:type="expressions:StringLiteral" begin="796" end="799" value="."/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="802" end="803" value="&#xA;"/>
          </thenStatements>
          <elseStatements xsi:type="statements:Text" begin="824" end="828" value="    "/>
          <elseStatements xsi:type="statements:Feature" begin="830" end="856">
            <expression xsi:type="expressions:CallSet" begin="830" end="856">
              <calls begin="830" end="856" name="getProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="842" end="855" value="baseImports"/>
              </calls>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="858" end="859" value="&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="957" end="987">
        <descriptor begin="877" end="922" name="projectName" type="Element">
          <file/>
          <post xsi:type="expressions:CallSet" begin="917" end="921">
            <calls begin="917" end="921" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="959" end="985">
          <expression xsi:type="expressions:CallSet" begin="959" end="985">
            <calls begin="959" end="985" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="971" end="984" value="projectName"/>
            </calls>
          </expression>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.common.structure" imports="/0/@resources.9 /0/@resources.4 /0/@resources.11 /0/@resources.10 /0/@resources.12" beginTag="&lt;%" endTag="%>">
      <scripts begin="715" end="845">
        <descriptor begin="677" end="712" name="classAttributes" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="717" end="843">
          <expression xsi:type="expressions:Operator" begin="717" end="843" operator="+">
            <operands xsi:type="expressions:CallSet" begin="717" end="731">
              <calls begin="717" end="731" name="ownedAttribute" prefix=""/>
            </operands>
            <operands xsi:type="expressions:CallSet" begin="734" end="843">
              <calls begin="734" end="751" name="getAssociations" prefix=""/>
              <calls begin="752" end="773" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="759" end="772" value="Association"/>
              </calls>
              <calls begin="774" end="811" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="794" end="810">
                  <calls begin="794" end="810" name="current" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="802" end="809" value="Class"/>
                  </calls>
                </arguments>
              </calls>
              <calls begin="812" end="830" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="819" end="829" value="Property"/>
                <filter xsi:type="expressions:CallSet" begin="831" end="842">
                  <calls begin="831" end="842" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </operands>
          </expression>
        </statements>
      </scripts>
      <scripts begin="896" end="1030">
        <descriptor begin="856" end="893" name="itfAttributes" type="Interface">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="898" end="1028">
          <expression xsi:type="expressions:Operator" begin="898" end="1028" operator="+">
            <operands xsi:type="expressions:CallSet" begin="898" end="912">
              <calls begin="898" end="912" name="ownedAttribute" prefix=""/>
            </operands>
            <operands xsi:type="expressions:CallSet" begin="915" end="1028">
              <calls begin="915" end="932" name="getAssociations" prefix=""/>
              <calls begin="933" end="954" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="940" end="953" value="Association"/>
              </calls>
              <calls begin="955" end="996" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="975" end="995">
                  <calls begin="975" end="995" name="current" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="983" end="994" value="Interface"/>
                  </calls>
                </arguments>
              </calls>
              <calls begin="997" end="1015" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1004" end="1014" value="Property"/>
                <filter xsi:type="expressions:CallSet" begin="1016" end="1027">
                  <calls begin="1016" end="1027" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </operands>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1079" end="1356">
        <descriptor begin="1041" end="1076" name="generateImports" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:For" begin="1085" end="1351">
          <iterator xsi:type="expressions:Parenthesis" begin="1085" end="1102">
            <expression xsi:type="expressions:CallSet" begin="1086" end="1101">
              <calls begin="1086" end="1101" name="classAttributes" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1107" end="1107" value=""/>
          <statements xsi:type="statements:If" begin="1113" end="1345">
            <condition xsi:type="expressions:Parenthesis" begin="1113" end="1288">
              <expression xsi:type="expressions:Operator" begin="1114" end="1287" operator="&amp;&amp;">
                <operands xsi:type="expressions:Operator" begin="1114" end="1152" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="1114" end="1131">
                    <calls begin="1114" end="1118" name="type" prefix=""/>
                    <calls begin="1119" end="1126" name="package" prefix=""/>
                    <calls begin="1127" end="1131" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="1133" end="1152" value="UMLPrimitiveTypes"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="1156" end="1175" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="1156" end="1165">
                    <calls begin="1156" end="1160" name="type" prefix=""/>
                    <calls begin="1161" end="1165" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="1167" end="1175" value="String"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="1179" end="1199" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="1179" end="1188">
                    <calls begin="1179" end="1183" name="type" prefix=""/>
                    <calls begin="1184" end="1188" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="1190" end="1199" value="Integer"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="1203" end="1221" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="1203" end="1212">
                    <calls begin="1203" end="1207" name="type" prefix=""/>
                    <calls begin="1208" end="1212" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="1214" end="1221" value="Float"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="1225" end="1242" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="1225" end="1234">
                    <calls begin="1225" end="1229" name="type" prefix=""/>
                    <calls begin="1230" end="1234" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="1236" end="1242" value="Long"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="1246" end="1266" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="1246" end="1255">
                    <calls begin="1246" end="1250" name="type" prefix=""/>
                    <calls begin="1251" end="1255" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="1257" end="1266" value="Boolean"/>
                </operands>
                <operands xsi:type="expressions:Operator" begin="1270" end="1287" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="1270" end="1279">
                    <calls begin="1270" end="1274" name="type" prefix=""/>
                    <calls begin="1275" end="1279" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="1281" end="1287" value="Date"/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1292" end="1299" value="import "/>
            <thenStatements xsi:type="statements:Feature" begin="1301" end="1340">
              <expression xsi:type="expressions:CallSet" begin="1301" end="1340">
                <calls begin="1301" end="1305" name="type" prefix=""/>
                <calls begin="1306" end="1319" name="qualifiedName" prefix=""/>
                <calls begin="1320" end="1340" name="replaceAll" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1331" end="1335" value="::"/>
                  <arguments xsi:type="expressions:StringLiteral" begin="1336" end="1339" value="."/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1342" end="1344" value=";&#xA;"/>
          </statements>
        </statements>
      </scripts>
      <scripts begin="1468" end="1532">
        <descriptor begin="1367" end="1409" name="generateParameters" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1470" end="1530">
          <expression xsi:type="expressions:CallSet" begin="1470" end="1530">
            <calls begin="1470" end="1489" name="getRealParameters" prefix=""/>
            <calls begin="1490" end="1509" name="filter" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="1497" end="1508" value="Parameter"/>
            </calls>
            <calls begin="1510" end="1520" name="genDeclare" prefix=""/>
            <calls begin="1521" end="1530" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="1525" end="1529" value=", "/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1581" end="1622">
        <descriptor begin="1544" end="1578" name="genDeclare" type="Parameter">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1581" end="1587" value="final "/>
        <statements xsi:type="statements:Feature" begin="1589" end="1606">
          <expression xsi:type="expressions:CallSet" begin="1589" end="1606">
            <calls begin="1589" end="1606" name="convertToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1608" end="1609" value=" "/>
        <statements xsi:type="statements:Feature" begin="1611" end="1620">
          <expression xsi:type="expressions:CallSet" begin="1611" end="1620">
            <calls begin="1611" end="1620" name="paramName" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1669" end="1692">
        <descriptor begin="1633" end="1666" name="paramName" type="Parameter">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1669" end="1673" value="some"/>
        <statements xsi:type="statements:Feature" begin="1675" end="1690">
          <expression xsi:type="expressions:CallSet" begin="1675" end="1690">
            <calls begin="1675" end="1679" name="name" prefix=""/>
            <calls begin="1680" end="1690" name="toU1Case" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1738" end="1761">
        <descriptor begin="1703" end="1735" name="paramName" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1738" end="1742" value="some"/>
        <statements xsi:type="statements:Feature" begin="1744" end="1759">
          <expression xsi:type="expressions:CallSet" begin="1744" end="1759">
            <calls begin="1744" end="1748" name="name" prefix=""/>
            <calls begin="1749" end="1759" name="toU1Case" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1875" end="1942">
        <descriptor begin="1772" end="1817" name="generateRawParameters" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1877" end="1940">
          <expression xsi:type="expressions:CallSet" begin="1877" end="1940">
            <calls begin="1877" end="1896" name="getRealParameters" prefix=""/>
            <calls begin="1897" end="1916" name="filter" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="1904" end="1915" value="Parameter"/>
            </calls>
            <calls begin="1917" end="1930" name="genRawDeclare" prefix=""/>
            <calls begin="1931" end="1940" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="1935" end="1939" value=", "/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="1993" end="2034">
        <descriptor begin="1953" end="1990" name="genRawDeclare" type="Parameter">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1995" end="2012">
          <expression xsi:type="expressions:CallSet" begin="1995" end="2012">
            <calls begin="1995" end="2012" name="convertToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2014" end="2015" value=" "/>
        <statements xsi:type="statements:Feature" begin="2017" end="2032">
          <expression xsi:type="expressions:CallSet" begin="2017" end="2032">
            <calls begin="2017" end="2021" name="name" prefix=""/>
            <calls begin="2022" end="2032" name="toL1Case" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2225" end="2300">
        <descriptor begin="2045" end="2083" name="generateReturn" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="2230" end="2295">
          <condition xsi:type="expressions:Parenthesis" begin="2230" end="2244">
            <expression xsi:type="expressions:Operator" begin="2231" end="2243" operator="==">
              <operands xsi:type="expressions:CallSet" begin="2231" end="2235">
                <calls begin="2231" end="2235" name="type" prefix=""/>
              </operands>
              <operands xsi:type="expressions:NullLiteral" begin="2239" end="2243"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2247" end="2251" value="void"/>
          <elseStatements xsi:type="statements:Feature" begin="2263" end="2293">
            <expression xsi:type="expressions:CallSet" begin="2263" end="2293">
              <calls begin="2263" end="2275" name="returnResult" prefix=""/>
              <calls begin="2276" end="2293" name="convertToJavaType" prefix=""/>
            </expression>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="2414" end="2452">
        <descriptor begin="2313" end="2359" name="generateParameterNames" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2416" end="2450">
          <expression xsi:type="expressions:CallSet" begin="2416" end="2450">
            <calls begin="2416" end="2435" name="getRealParameters" prefix=""/>
            <calls begin="2436" end="2440" name="name" prefix=""/>
            <calls begin="2441" end="2450" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2445" end="2449" value=", "/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2509" end="2540">
        <descriptor begin="2464" end="2506" name="generateJavadoc" type="NamedElement">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="2509" end="2513" value="/**&#xA;"/>
        <statements xsi:type="statements:Feature" begin="2515" end="2534">
          <expression xsi:type="expressions:CallSet" begin="2515" end="2534">
            <calls begin="2515" end="2534" name="generateJavadocBody" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2536" end="2540" value="&#xA; */"/>
      </scripts>
      <scripts begin="2599" end="2776">
        <descriptor begin="2550" end="2596" name="generateJavadocBody" type="NamedElement">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="2599" end="2607" value=" * &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="2609" end="2622">
          <expression xsi:type="expressions:CallSet" begin="2609" end="2622">
            <calls begin="2609" end="2622" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2624" end="2629" value=" for "/>
        <statements xsi:type="statements:Feature" begin="2631" end="2635">
          <expression xsi:type="expressions:CallSet" begin="2631" end="2635">
            <calls begin="2631" end="2635" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2637" end="2665" value=" -->&#xA; * &lt;p>&#xA; * &lt;/p>&#xA; * &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="2667" end="2678">
          <expression xsi:type="expressions:CallSet" begin="2667" end="2678">
            <calls begin="2667" end="2678" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2680" end="2685" value=" for "/>
        <statements xsi:type="statements:Feature" begin="2687" end="2691">
          <expression xsi:type="expressions:CallSet" begin="2687" end="2691">
            <calls begin="2687" end="2691" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2693" end="2697" value=" -->"/>
        <statements xsi:type="statements:If" begin="2702" end="2771">
          <condition xsi:type="expressions:Parenthesis" begin="2702" end="2736">
            <expression xsi:type="expressions:Operator" begin="2704" end="2734" operator=">">
              <operands xsi:type="expressions:CallSet" begin="2704" end="2730">
                <calls begin="2704" end="2716" name="ownedComment" prefix=""/>
                <calls begin="2717" end="2721" name="body" prefix=""/>
                <calls begin="2722" end="2730" name="length" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="2733" end="2734"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2740" end="2745" value="* &lt;p>"/>
          <thenStatements xsi:type="statements:Feature" begin="2747" end="2764">
            <expression xsi:type="expressions:CallSet" begin="2747" end="2764">
              <calls begin="2747" end="2759" name="ownedComment" prefix=""/>
              <calls begin="2760" end="2764" name="body" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2766" end="2771" value="&lt;/p>&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="2871" end="2904">
        <descriptor begin="2788" end="2827" name="generateJavadoc" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="2871" end="2876" value="&#x9;/**&#xA;"/>
        <statements xsi:type="statements:Feature" begin="2878" end="2897">
          <expression xsi:type="expressions:CallSet" begin="2878" end="2897">
            <calls begin="2878" end="2897" name="generateJavadocBody" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2899" end="2904" value="&#xA;&#x9; */"/>
      </scripts>
      <scripts begin="2962" end="3340">
        <descriptor begin="2915" end="2958" name="generateJavadocBody" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="2962" end="2971" value="&#x9; * &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="2973" end="2986">
          <expression xsi:type="expressions:CallSet" begin="2973" end="2986">
            <calls begin="2973" end="2986" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2988" end="2993" value=" for "/>
        <statements xsi:type="statements:Feature" begin="2995" end="2999">
          <expression xsi:type="expressions:CallSet" begin="2995" end="2999">
            <calls begin="2995" end="2999" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3001" end="3023" value=" -->&#xA;&#x9; * &lt;p>&#xA;&#x9; * &lt;/p>&#xA;"/>
        <statements xsi:type="statements:For" begin="3029" end="3140">
          <iterator xsi:type="expressions:Parenthesis" begin="3029" end="3050">
            <expression xsi:type="expressions:CallSet" begin="3030" end="3049">
              <calls begin="3030" end="3049" name="getRealParameters" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3054" end="3065" value="&#x9; * @param "/>
          <statements xsi:type="statements:Feature" begin="3067" end="3071">
            <expression xsi:type="expressions:CallSet" begin="3067" end="3071">
              <calls begin="3067" end="3071" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3073" end="3074" value=" "/>
          <statements xsi:type="statements:If" begin="3079" end="3134">
            <condition xsi:type="expressions:Parenthesis" begin="3079" end="3109">
              <expression xsi:type="expressions:Operator" begin="3080" end="3108" operator=">">
                <operands xsi:type="expressions:CallSet" begin="3080" end="3106">
                  <calls begin="3080" end="3092" name="ownedComment" prefix=""/>
                  <calls begin="3093" end="3097" name="body" prefix=""/>
                  <calls begin="3098" end="3106" name="length" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="3107" end="3108"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Feature" begin="3115" end="3132">
              <expression xsi:type="expressions:CallSet" begin="3115" end="3132">
                <calls begin="3115" end="3127" name="ownedComment" prefix=""/>
                <calls begin="3128" end="3132" name="body" prefix=""/>
              </expression>
            </thenStatements>
          </statements>
          <statements xsi:type="statements:Text" begin="3139" end="3140" value="&#xA;"/>
        </statements>
        <statements xsi:type="statements:If" begin="3153" end="3211">
          <condition xsi:type="expressions:Parenthesis" begin="3153" end="3167">
            <expression xsi:type="expressions:Operator" begin="3154" end="3166" operator="!=">
              <operands xsi:type="expressions:CallSet" begin="3154" end="3158">
                <calls begin="3154" end="3158" name="type" prefix=""/>
              </operands>
              <operands xsi:type="expressions:NullLiteral" begin="3162" end="3166"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3171" end="3183" value="&#x9; * @return "/>
          <thenStatements xsi:type="statements:Feature" begin="3185" end="3207">
            <expression xsi:type="expressions:CallSet" begin="3185" end="3207">
              <calls begin="3185" end="3189" name="type" prefix=""/>
              <calls begin="3190" end="3202" name="ownedComment" prefix=""/>
              <calls begin="3203" end="3207" name="body" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="3209" end="3211" value="&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="3218" end="3227" value="&#x9; * &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="3229" end="3240">
          <expression xsi:type="expressions:CallSet" begin="3229" end="3240">
            <calls begin="3229" end="3240" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3242" end="3247" value=" for "/>
        <statements xsi:type="statements:Feature" begin="3249" end="3253">
          <expression xsi:type="expressions:CallSet" begin="3249" end="3253">
            <calls begin="3249" end="3253" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3255" end="3259" value=" -->"/>
        <statements xsi:type="statements:If" begin="3264" end="3335">
          <condition xsi:type="expressions:Parenthesis" begin="3264" end="3298">
            <expression xsi:type="expressions:Operator" begin="3266" end="3296" operator=">">
              <operands xsi:type="expressions:CallSet" begin="3266" end="3292">
                <calls begin="3266" end="3278" name="ownedComment" prefix=""/>
                <calls begin="3279" end="3283" name="body" prefix=""/>
                <calls begin="3284" end="3292" name="length" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="3295" end="3296"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3302" end="3309" value="&#x9; * &lt;p>"/>
          <thenStatements xsi:type="statements:Feature" begin="3311" end="3328">
            <expression xsi:type="expressions:CallSet" begin="3311" end="3328">
              <calls begin="3311" end="3323" name="ownedComment" prefix=""/>
              <calls begin="3324" end="3328" name="body" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="3330" end="3335" value="&lt;/p>&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="3415" end="3470">
        <descriptor begin="3352" end="3382" name="extensions" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="3420" end="3465">
          <condition xsi:type="expressions:Parenthesis" begin="3420" end="3438">
            <expression xsi:type="expressions:Not" begin="3421" end="3437">
              <expression xsi:type="expressions:CallSet" begin="3422" end="3437">
                <calls begin="3422" end="3429" name="general" prefix=""/>
                <calls begin="3430" end="3437" name="isEmpty" prefix=""/>
              </expression>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3441" end="3449" value="extends "/>
          <thenStatements xsi:type="statements:Feature" begin="3451" end="3463">
            <expression xsi:type="expressions:CallSet" begin="3451" end="3463">
              <calls begin="3451" end="3458" name="general" prefix=""/>
              <calls begin="3459" end="3463" name="name" prefix=""/>
            </expression>
          </thenStatements>
        </statements>
      </scripts>
      <scripts begin="3523" end="3566">
        <descriptor begin="3483" end="3519" name="normalizedName" type="Package">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3525" end="3564">
          <expression xsi:type="expressions:CallSet" begin="3525" end="3564">
            <calls begin="3525" end="3529" name="name" prefix=""/>
            <calls begin="3530" end="3550" name="toStandardNotation" prefix=""/>
            <calls begin="3551" end="3564" name="toLowerCase" prefix=""/>
          </expression>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dto.dto" imports="/0/@resources.9 /0/@resources.3 /0/@resources.5 /0/@resources.1 /0/@resources.6 /0/@resources.4 /0/@resources.10 /0/@resources.11 /0/@resources.12" beginTag="&lt;%" endTag="%>">
      <scripts begin="1046" end="1141">
        <descriptor begin="1010" end="1042" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1051" end="1136">
          <condition xsi:type="expressions:Parenthesis" begin="1051" end="1070">
            <expression xsi:type="expressions:Operator" begin="1052" end="1069" operator="||">
              <operands xsi:type="expressions:CallSet" begin="1052" end="1060">
                <calls begin="1052" end="1060" name="isEntity" prefix=""/>
              </operands>
              <operands xsi:type="expressions:CallSet" begin="1064" end="1069">
                <calls begin="1064" end="1069" name="isDto" prefix=""/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="1077" end="1091">
            <expression xsi:type="expressions:CallSet" begin="1077" end="1091">
              <calls begin="1077" end="1091" name="pathToMainJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1093" end="1094" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1096" end="1115">
            <expression xsi:type="expressions:CallSet" begin="1096" end="1115">
              <calls begin="1096" end="1106" name="dtoPackage" prefix=""/>
              <calls begin="1107" end="1115" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1117" end="1118" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1120" end="1127">
            <expression xsi:type="expressions:CallSet" begin="1120" end="1127">
              <calls begin="1120" end="1127" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1129" end="1136" value=".java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1210" end="1328">
        <descriptor begin="1154" end="1206" name="generate" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1191" end="1203">
              <expression xsi:type="expressions:CallSet" begin="1191" end="1203">
                <calls begin="1191" end="1203" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:If" begin="1215" end="1323">
          <condition xsi:type="expressions:Parenthesis" begin="1215" end="1276">
            <expression xsi:type="expressions:Operator" begin="1216" end="1275" operator="&amp;&amp;">
              <operands xsi:type="expressions:CallSet" begin="1216" end="1224">
                <calls begin="1216" end="1224" name="isEntity" prefix=""/>
              </operands>
              <operands xsi:type="expressions:Operator" begin="1228" end="1275" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1228" end="1266">
                  <calls begin="1228" end="1266" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1240" end="1265" value="generate.dto.per.entity"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="1270" end="1275" value="yes"/>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="1283" end="1295">
            <expression xsi:type="expressions:CallSet" begin="1283" end="1295">
              <calls begin="1283" end="1295" name="genEntityDto" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1297" end="1299" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Feature" begin="1313" end="1319">
            <expression xsi:type="expressions:CallSet" begin="1313" end="1319">
              <calls begin="1313" end="1319" name="genDto" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="1321" end="1323" value="&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1402" end="2550">
        <descriptor begin="1341" end="1367" name="genDto" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1402" end="1410" value="package "/>
        <statements xsi:type="statements:Feature" begin="1412" end="1422">
          <expression xsi:type="expressions:CallSet" begin="1412" end="1422">
            <calls begin="1412" end="1422" name="dtoPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1424" end="1432" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1434" end="1447">
          <expression xsi:type="expressions:CallSet" begin="1434" end="1447">
            <calls begin="1434" end="1447" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1449" end="1517" value=" for imports&#xD;&#xA;import java.io.Serializable;&#xD;&#xA;import java.util.*;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1519" end="1530">
          <expression xsi:type="expressions:CallSet" begin="1519" end="1530">
            <calls begin="1519" end="1530" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1532" end="1556" value=" for imports&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA; * "/>
        <statements xsi:type="statements:Feature" begin="1558" end="1575">
          <expression xsi:type="expressions:CallSet" begin="1558" end="1575">
            <calls begin="1558" end="1570" name="ownedComment" prefix=""/>
            <calls begin="1571" end="1575" name="body" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1577" end="1598" value="&#xD;&#xA; */&#xD;&#xA; public class "/>
        <statements xsi:type="statements:Feature" begin="1600" end="1607">
          <expression xsi:type="expressions:CallSet" begin="1600" end="1607">
            <calls begin="1600" end="1607" name="dtoName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="1611" end="1621">
          <expression xsi:type="expressions:CallSet" begin="1611" end="1621">
            <calls begin="1611" end="1621" name="extensions" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1623" end="1779" value=" implements Serializable {&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * serialVersionUID is used for serialization.&#xD;&#xA;     */&#xD;&#xA;    private static final long serialVersionUID = 1L;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="1783" end="1804" value=" Generate attributes "/>
        <statements xsi:type="statements:For" begin="1816" end="1882">
          <iterator xsi:type="expressions:Parenthesis" begin="1816" end="1827">
            <expression xsi:type="expressions:CallSet" begin="1817" end="1826">
              <calls begin="1817" end="1826" name="attribute" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1832" end="1846" value="    protected "/>
          <statements xsi:type="statements:Feature" begin="1848" end="1868">
            <expression xsi:type="expressions:CallSet" begin="1848" end="1868">
              <calls begin="1848" end="1868" name="convertDtoToJavaType" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1870" end="1871" value=" "/>
          <statements xsi:type="statements:Feature" begin="1873" end="1877">
            <expression xsi:type="expressions:CallSet" begin="1873" end="1877">
              <calls begin="1873" end="1877" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1879" end="1882" value=";&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="1889" end="1949" value="&#xD;&#xA;    /**&#xD;&#xA;     * Default constructor.&#xD;&#xA;     */&#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="1951" end="1958">
          <expression xsi:type="expressions:CallSet" begin="1951" end="1958">
            <calls begin="1951" end="1958" name="dtoName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1960" end="1993" value="() {&#xD;&#xA;        super();&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="1998" end="2323">
          <condition xsi:type="expressions:Parenthesis" begin="1998" end="2018">
            <expression xsi:type="expressions:Not" begin="1999" end="2017">
              <expression xsi:type="expressions:CallSet" begin="2000" end="2017">
                <calls begin="2000" end="2009" name="attribute" prefix=""/>
                <calls begin="2010" end="2017" name="isEmpty" prefix=""/>
              </expression>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2023" end="2085" value="    /**&#xD;&#xA;     * Constructor with all parameters initialized.&#xD;&#xA;"/>
          <thenStatements xsi:type="statements:For" begin="2095" end="2161">
            <iterator xsi:type="expressions:Parenthesis" begin="2095" end="2106">
              <expression xsi:type="expressions:CallSet" begin="2096" end="2105">
                <calls begin="2096" end="2105" name="attribute" prefix=""/>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="2111" end="2125" value="     * @param "/>
            <statements xsi:type="statements:Feature" begin="2127" end="2131">
              <expression xsi:type="expressions:CallSet" begin="2127" end="2131">
                <calls begin="2127" end="2131" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="2133" end="2134" value=" "/>
            <statements xsi:type="statements:Feature" begin="2136" end="2153">
              <expression xsi:type="expressions:CallSet" begin="2136" end="2153">
                <calls begin="2136" end="2148" name="ownedComment" prefix=""/>
                <calls begin="2149" end="2153" name="body" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="2155" end="2157" value="&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2168" end="2188" value="     */&#xD;&#xA;    public "/>
          <thenStatements xsi:type="statements:Feature" begin="2190" end="2197">
            <expression xsi:type="expressions:CallSet" begin="2190" end="2197">
              <calls begin="2190" end="2197" name="dtoName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2199" end="2200" value="("/>
          <thenStatements xsi:type="statements:Feature" begin="2202" end="2233">
            <expression xsi:type="expressions:CallSet" begin="2202" end="2233">
              <calls begin="2202" end="2211" name="attribute" prefix=""/>
              <calls begin="2212" end="2223" name="asParameter" prefix=""/>
              <calls begin="2224" end="2233" name="sep" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2228" end="2232" value=", "/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2235" end="2240" value=") {&#xD;&#xA;"/>
          <thenStatements xsi:type="statements:For" begin="2250" end="2305">
            <iterator xsi:type="expressions:Parenthesis" begin="2250" end="2261">
              <expression xsi:type="expressions:CallSet" begin="2251" end="2260">
                <calls begin="2251" end="2260" name="attribute" prefix=""/>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="2266" end="2279" value="        this."/>
            <statements xsi:type="statements:Feature" begin="2281" end="2285">
              <expression xsi:type="expressions:CallSet" begin="2281" end="2285">
                <calls begin="2281" end="2285" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="2287" end="2290" value=" = "/>
            <statements xsi:type="statements:Feature" begin="2292" end="2296">
              <expression xsi:type="expressions:CallSet" begin="2292" end="2296">
                <calls begin="2292" end="2296" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="2298" end="2301" value=";&#xD;&#xA;"/>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2312" end="2323" value="    }    &#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2330" end="2332" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="2336" end="2366" value=" Generate getters and setters "/>
        <statements xsi:type="statements:For" begin="2378" end="2540">
          <iterator xsi:type="expressions:Parenthesis" begin="2378" end="2389">
            <expression xsi:type="expressions:CallSet" begin="2379" end="2388">
              <calls begin="2379" end="2388" name="attribute" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="2395" end="2397" value="&#xD;&#xA;"/>
          <statements xsi:type="statements:Comment" begin="2401" end="2419" value=" Deals with Lists "/>
          <statements xsi:type="statements:Text" begin="2425" end="2425" value=""/>
          <statements xsi:type="statements:If" begin="2434" end="2527">
            <condition xsi:type="expressions:Parenthesis" begin="2434" end="2447">
              <expression xsi:type="expressions:Operator" begin="2435" end="2446" operator="==">
                <operands xsi:type="expressions:CallSet" begin="2435" end="2440">
                  <calls begin="2435" end="2440" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="2444" end="2446" value="-1"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2452" end="2460" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="2462" end="2479">
              <expression xsi:type="expressions:CallSet" begin="2462" end="2479">
                <calls begin="2462" end="2479" name="generateOpForList" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2481" end="2483" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="2499" end="2507" value="        "/>
            <elseStatements xsi:type="statements:Feature" begin="2509" end="2519">
              <expression xsi:type="expressions:CallSet" begin="2509" end="2519">
                <calls begin="2509" end="2519" name="generateOp" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="2521" end="2523" value="&#xD;&#xA;"/>
          </statements>
          <statements xsi:type="statements:Text" begin="2534" end="2540" value="    &#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2547" end="2550" value="&#xD;&#xA;}"/>
      </scripts>
      <scripts begin="2626" end="2706">
        <descriptor begin="2563" end="2593" name="extensions" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="2631" end="2701">
          <condition xsi:type="expressions:Parenthesis" begin="2631" end="2649">
            <expression xsi:type="expressions:Not" begin="2632" end="2648">
              <expression xsi:type="expressions:CallSet" begin="2633" end="2648">
                <calls begin="2633" end="2640" name="general" prefix=""/>
                <calls begin="2641" end="2648" name="isEmpty" prefix=""/>
              </expression>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2652" end="2661" value=" extends "/>
          <thenStatements xsi:type="statements:Feature" begin="2663" end="2675">
            <expression xsi:type="expressions:CallSet" begin="2663" end="2675">
              <calls begin="2663" end="2670" name="general" prefix=""/>
              <calls begin="2671" end="2675" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Feature" begin="2679" end="2688">
            <expression xsi:type="expressions:CallSet" begin="2679" end="2688">
              <calls begin="2679" end="2688" name="dtoSuffix" prefix=""/>
            </expression>
          </thenStatements>
        </statements>
      </scripts>
      <scripts begin="2823" end="2856">
        <descriptor begin="2719" end="2753" name="asParameter" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2825" end="2845">
          <expression xsi:type="expressions:CallSet" begin="2825" end="2845">
            <calls begin="2825" end="2845" name="convertDtoToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2847" end="2848" value=" "/>
        <statements xsi:type="statements:Feature" begin="2850" end="2854">
          <expression xsi:type="expressions:CallSet" begin="2850" end="2854">
            <calls begin="2850" end="2854" name="name" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2944" end="3446">
        <descriptor begin="2869" end="2902" name="generateOp" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="2944" end="2968" value="    /**&#xD;&#xA;     * Returns "/>
        <statements xsi:type="statements:Feature" begin="2970" end="2974">
          <expression xsi:type="expressions:CallSet" begin="2970" end="2974">
            <calls begin="2970" end="2974" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2976" end="2994" value=".&#xD;&#xA;     * @return "/>
        <statements xsi:type="statements:Feature" begin="2996" end="3013">
          <expression xsi:type="expressions:CallSet" begin="2996" end="3013">
            <calls begin="2996" end="3008" name="ownedComment" prefix=""/>
            <calls begin="3009" end="3013" name="body" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3015" end="3037" value="&#xD;&#xA;     */&#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="3039" end="3059">
          <expression xsi:type="expressions:CallSet" begin="3039" end="3059">
            <calls begin="3039" end="3059" name="convertDtoToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3061" end="3065" value=" get"/>
        <statements xsi:type="statements:Feature" begin="3067" end="3082">
          <expression xsi:type="expressions:CallSet" begin="3067" end="3082">
            <calls begin="3067" end="3071" name="name" prefix=""/>
            <calls begin="3072" end="3082" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3084" end="3105" value="() {&#xD;&#xA;        return "/>
        <statements xsi:type="statements:Feature" begin="3107" end="3111">
          <expression xsi:type="expressions:CallSet" begin="3107" end="3111">
            <calls begin="3107" end="3111" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3113" end="3166" value=";&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Set a value to parameter "/>
        <statements xsi:type="statements:Feature" begin="3168" end="3172">
          <expression xsi:type="expressions:CallSet" begin="3168" end="3172">
            <calls begin="3168" end="3172" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3174" end="3191" value=".&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="3193" end="3197">
          <expression xsi:type="expressions:CallSet" begin="3193" end="3197">
            <calls begin="3193" end="3197" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3199" end="3200" value=" "/>
        <statements xsi:type="statements:Feature" begin="3202" end="3219">
          <expression xsi:type="expressions:CallSet" begin="3202" end="3219">
            <calls begin="3202" end="3214" name="ownedComment" prefix=""/>
            <calls begin="3215" end="3219" name="body" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3221" end="3251" value="&#xD;&#xA;     */&#xD;&#xA;    public void set"/>
        <statements xsi:type="statements:Feature" begin="3253" end="3268">
          <expression xsi:type="expressions:CallSet" begin="3253" end="3268">
            <calls begin="3253" end="3257" name="name" prefix=""/>
            <calls begin="3258" end="3268" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3270" end="3271" value="("/>
        <statements xsi:type="statements:Feature" begin="3273" end="3293">
          <expression xsi:type="expressions:CallSet" begin="3273" end="3293">
            <calls begin="3273" end="3293" name="convertDtoToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3295" end="3296" value=" "/>
        <statements xsi:type="statements:Feature" begin="3298" end="3302">
          <expression xsi:type="expressions:CallSet" begin="3298" end="3302">
            <calls begin="3298" end="3302" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3304" end="3322" value=") {&#xD;&#xA;        this."/>
        <statements xsi:type="statements:Feature" begin="3324" end="3328">
          <expression xsi:type="expressions:CallSet" begin="3324" end="3328">
            <calls begin="3324" end="3328" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3330" end="3333" value=" = "/>
        <statements xsi:type="statements:Feature" begin="3335" end="3339">
          <expression xsi:type="expressions:CallSet" begin="3335" end="3339">
            <calls begin="3335" end="3339" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3341" end="3344" value=";&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="3349" end="3434">
          <condition xsi:type="expressions:Parenthesis" begin="3349" end="3367">
            <expression xsi:type="expressions:Operator" begin="3350" end="3366" operator="!=">
              <operands xsi:type="expressions:CallSet" begin="3350" end="3358">
                <calls begin="3350" end="3358" name="opposite" prefix=""/>
              </operands>
              <operands xsi:type="expressions:NullLiteral" begin="3362" end="3366"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3372" end="3385" value="        this."/>
          <thenStatements xsi:type="statements:Feature" begin="3387" end="3391">
            <expression xsi:type="expressions:CallSet" begin="3387" end="3391">
              <calls begin="3387" end="3391" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="3393" end="3397" value=".set"/>
          <thenStatements xsi:type="statements:Feature" begin="3399" end="3423">
            <expression xsi:type="expressions:CallSet" begin="3399" end="3423">
              <calls begin="3399" end="3418" name="featuringClassifier" prefix=""/>
              <calls begin="3419" end="3423" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="3425" end="3434" value="(this);&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="3441" end="3446" value="    }"/>
      </scripts>
      <scripts begin="3558" end="4998">
        <descriptor begin="3459" end="3499" name="generateOpForList" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3558" end="3582" value="    /**&#xD;&#xA;     * Returns "/>
        <statements xsi:type="statements:Feature" begin="3584" end="3588">
          <expression xsi:type="expressions:CallSet" begin="3584" end="3588">
            <calls begin="3584" end="3588" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3590" end="3618" value=".&#xD;&#xA;     * @return A list of "/>
        <statements xsi:type="statements:Feature" begin="3620" end="3624">
          <expression xsi:type="expressions:CallSet" begin="3620" end="3624">
            <calls begin="3620" end="3624" name="type" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3626" end="3628" value=". "/>
        <statements xsi:type="statements:Feature" begin="3630" end="3647">
          <expression xsi:type="expressions:CallSet" begin="3630" end="3647">
            <calls begin="3630" end="3642" name="ownedComment" prefix=""/>
            <calls begin="3643" end="3647" name="body" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3649" end="3671" value="&#xD;&#xA;     */&#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="3673" end="3693">
          <expression xsi:type="expressions:CallSet" begin="3673" end="3693">
            <calls begin="3673" end="3693" name="convertDtoToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3695" end="3699" value=" get"/>
        <statements xsi:type="statements:Feature" begin="3701" end="3716">
          <expression xsi:type="expressions:CallSet" begin="3701" end="3716">
            <calls begin="3701" end="3705" name="name" prefix=""/>
            <calls begin="3706" end="3716" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3718" end="3768" value="() {&#xD;&#xA;        return Collections.unmodifiableList("/>
        <statements xsi:type="statements:Feature" begin="3770" end="3774">
          <expression xsi:type="expressions:CallSet" begin="3770" end="3774">
            <calls begin="3770" end="3774" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3776" end="3830" value=");&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Set a value to parameter "/>
        <statements xsi:type="statements:Feature" begin="3832" end="3836">
          <expression xsi:type="expressions:CallSet" begin="3832" end="3836">
            <calls begin="3832" end="3836" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3838" end="3855" value=".&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="3857" end="3861">
          <expression xsi:type="expressions:CallSet" begin="3857" end="3861">
            <calls begin="3857" end="3861" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3863" end="3874" value=" A list of "/>
        <statements xsi:type="statements:Feature" begin="3876" end="3880">
          <expression xsi:type="expressions:CallSet" begin="3876" end="3880">
            <calls begin="3876" end="3880" name="type" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3882" end="3884" value=". "/>
        <statements xsi:type="statements:Feature" begin="3886" end="3903">
          <expression xsi:type="expressions:CallSet" begin="3886" end="3903">
            <calls begin="3886" end="3898" name="ownedComment" prefix=""/>
            <calls begin="3899" end="3903" name="body" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3905" end="3935" value="&#xD;&#xA;     */&#xD;&#xA;    public void set"/>
        <statements xsi:type="statements:Feature" begin="3937" end="3952">
          <expression xsi:type="expressions:CallSet" begin="3937" end="3952">
            <calls begin="3937" end="3941" name="name" prefix=""/>
            <calls begin="3942" end="3952" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3954" end="3955" value="("/>
        <statements xsi:type="statements:Feature" begin="3957" end="3977">
          <expression xsi:type="expressions:CallSet" begin="3957" end="3977">
            <calls begin="3957" end="3977" name="convertDtoToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3979" end="3980" value=" "/>
        <statements xsi:type="statements:Feature" begin="3982" end="3986">
          <expression xsi:type="expressions:CallSet" begin="3982" end="3986">
            <calls begin="3982" end="3986" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3988" end="4006" value=") {&#xD;&#xA;        this."/>
        <statements xsi:type="statements:Feature" begin="4008" end="4012">
          <expression xsi:type="expressions:CallSet" begin="4008" end="4012">
            <calls begin="4008" end="4012" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4014" end="4017" value=" = "/>
        <statements xsi:type="statements:Feature" begin="4019" end="4023">
          <expression xsi:type="expressions:CallSet" begin="4019" end="4023">
            <calls begin="4019" end="4023" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4025" end="4084" value=";&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Add an element to the list "/>
        <statements xsi:type="statements:Feature" begin="4086" end="4090">
          <expression xsi:type="expressions:CallSet" begin="4086" end="4090">
            <calls begin="4086" end="4090" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4092" end="4138" value=".&#xD;&#xA;     * @param elementToAdd Element of type "/>
        <statements xsi:type="statements:Feature" begin="4140" end="4144">
          <expression xsi:type="expressions:CallSet" begin="4140" end="4144">
            <calls begin="4140" end="4144" name="type" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4146" end="4183" value=" to add&#xD;&#xA;     */&#xD;&#xA;    public void add"/>
        <statements xsi:type="statements:Feature" begin="4185" end="4200">
          <expression xsi:type="expressions:CallSet" begin="4185" end="4200">
            <calls begin="4185" end="4189" name="name" prefix=""/>
            <calls begin="4190" end="4200" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4202" end="4203" value="("/>
        <statements xsi:type="statements:Feature" begin="4205" end="4230">
          <expression xsi:type="expressions:CallSet" begin="4205" end="4230">
            <calls begin="4205" end="4209" name="type" prefix=""/>
            <calls begin="4210" end="4230" name="convertDtoToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4232" end="4263" value=" elementToAdd) {&#xD;&#xA;        this."/>
        <statements xsi:type="statements:Feature" begin="4265" end="4269">
          <expression xsi:type="expressions:CallSet" begin="4265" end="4269">
            <calls begin="4265" end="4269" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4271" end="4292" value=".add(elementToAdd);&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="4305" end="4497">
          <condition xsi:type="expressions:Parenthesis" begin="4305" end="4323">
            <expression xsi:type="expressions:Operator" begin="4306" end="4322" operator="!=">
              <operands xsi:type="expressions:CallSet" begin="4306" end="4314">
                <calls begin="4306" end="4314" name="opposite" prefix=""/>
              </operands>
              <operands xsi:type="expressions:NullLiteral" begin="4318" end="4322"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="4328" end="4328" value=""/>
          <thenStatements xsi:type="statements:If" begin="4345" end="4482">
            <condition xsi:type="expressions:Parenthesis" begin="4345" end="4357">
              <expression xsi:type="expressions:Operator" begin="4346" end="4356" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="4346" end="4351">
                  <calls begin="4346" end="4351" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="4355" end="4356" value="1"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4362" end="4386" value="        elementToAdd.add"/>
            <thenStatements xsi:type="statements:Feature" begin="4388" end="4393">
              <expression xsi:type="expressions:CallSet" begin="4388" end="4393">
                <calls begin="4388" end="4393" name="owner" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4395" end="4404" value="(this);&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="4428" end="4452" value="        elementToAdd.set"/>
            <elseStatements xsi:type="statements:Feature" begin="4454" end="4459">
              <expression xsi:type="expressions:CallSet" begin="4454" end="4459">
                <calls begin="4454" end="4459" name="owner" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="4461" end="4470" value="(this);&#xD;&#xA;"/>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="4504" end="4563" value="    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Remove an element to the list "/>
        <statements xsi:type="statements:Feature" begin="4565" end="4569">
          <expression xsi:type="expressions:CallSet" begin="4565" end="4569">
            <calls begin="4565" end="4569" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4571" end="4620" value=".&#xD;&#xA;     * @param elementToRevmoe Element of type "/>
        <statements xsi:type="statements:Feature" begin="4622" end="4626">
          <expression xsi:type="expressions:CallSet" begin="4622" end="4626">
            <calls begin="4622" end="4626" name="type" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4628" end="4668" value=" to add&#xD;&#xA;     */&#xD;&#xA;    public void remove"/>
        <statements xsi:type="statements:Feature" begin="4670" end="4685">
          <expression xsi:type="expressions:CallSet" begin="4670" end="4685">
            <calls begin="4670" end="4674" name="name" prefix=""/>
            <calls begin="4675" end="4685" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4687" end="4688" value="("/>
        <statements xsi:type="statements:Feature" begin="4690" end="4715">
          <expression xsi:type="expressions:CallSet" begin="4690" end="4715">
            <calls begin="4690" end="4694" name="type" prefix=""/>
            <calls begin="4695" end="4715" name="convertDtoToJavaType" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4717" end="4751" value=" elementToRemove) {&#xD;&#xA;        this."/>
        <statements xsi:type="statements:Feature" begin="4753" end="4757">
          <expression xsi:type="expressions:CallSet" begin="4753" end="4757">
            <calls begin="4753" end="4757" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4759" end="4786" value=".remove(elementToRemove);&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="4791" end="4986">
          <condition xsi:type="expressions:Parenthesis" begin="4791" end="4809">
            <expression xsi:type="expressions:Operator" begin="4792" end="4808" operator="!=">
              <operands xsi:type="expressions:CallSet" begin="4792" end="4800">
                <calls begin="4792" end="4800" name="opposite" prefix=""/>
              </operands>
              <operands xsi:type="expressions:NullLiteral" begin="4804" end="4808"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="4814" end="4814" value=""/>
          <thenStatements xsi:type="statements:If" begin="4831" end="4971">
            <condition xsi:type="expressions:Parenthesis" begin="4831" end="4843">
              <expression xsi:type="expressions:Operator" begin="4832" end="4842" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="4832" end="4837">
                  <calls begin="4832" end="4837" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="4841" end="4842" value="1"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4848" end="4875" value="        elementToAdd.remove"/>
            <thenStatements xsi:type="statements:Feature" begin="4877" end="4882">
              <expression xsi:type="expressions:CallSet" begin="4877" end="4882">
                <calls begin="4877" end="4882" name="owner" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4884" end="4893" value="(this);&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="4917" end="4941" value="        elementToAdd.set"/>
            <elseStatements xsi:type="statements:Feature" begin="4943" end="4948">
              <expression xsi:type="expressions:CallSet" begin="4943" end="4948">
                <calls begin="4943" end="4948" name="owner" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="4950" end="4959" value="(null);&#xD;&#xA;"/>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="4993" end="4998" value="    }"/>
      </scripts>
      <scripts begin="5109" end="5209">
        <descriptor begin="5017" end="5060" name="convertDtoToJavaType" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="5114" end="5204">
          <condition xsi:type="expressions:Parenthesis" begin="5114" end="5127">
            <expression xsi:type="expressions:Operator" begin="5115" end="5126" operator="==">
              <operands xsi:type="expressions:CallSet" begin="5115" end="5120">
                <calls begin="5115" end="5120" name="upper" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="5124" end="5126" value="-1"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="5130" end="5135" value="List&lt;"/>
          <thenStatements xsi:type="statements:Feature" begin="5137" end="5162">
            <expression xsi:type="expressions:CallSet" begin="5137" end="5162">
              <calls begin="5137" end="5141" name="type" prefix=""/>
              <calls begin="5142" end="5162" name="convertDtoToJavaType" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="5164" end="5165" value=">"/>
          <elseStatements xsi:type="statements:Feature" begin="5177" end="5202">
            <expression xsi:type="expressions:CallSet" begin="5177" end="5202">
              <calls begin="5177" end="5181" name="type" prefix=""/>
              <calls begin="5182" end="5202" name="convertDtoToJavaType" prefix=""/>
            </expression>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="5277" end="5366">
        <descriptor begin="5222" end="5273" name="convertDtoToJavaType" type="Type">
          <file/>
          <post xsi:type="expressions:CallSet" begin="5268" end="5272">
            <calls begin="5268" end="5272" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="5282" end="5361">
          <condition xsi:type="expressions:Parenthesis" begin="5282" end="5306">
            <expression xsi:type="expressions:CallSet" begin="5284" end="5304">
              <calls begin="5284" end="5304" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="5298" end="5303" value="Dto"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="5311" end="5312" value="&#x9;"/>
          <thenStatements xsi:type="statements:Feature" begin="5314" end="5318">
            <expression xsi:type="expressions:CallSet" begin="5314" end="5318">
              <calls begin="5314" end="5318" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="5320" end="5325" value="Dto&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="5337" end="5338" value="&#x9;"/>
          <elseStatements xsi:type="statements:Feature" begin="5340" end="5357">
            <expression xsi:type="expressions:CallSet" begin="5340" end="5357">
              <calls begin="5340" end="5357" name="convertToJavaType" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="5359" end="5361" value="&#xD;&#xA;"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Metamodel" name="http://www.eclipse.org/uml2/2.0.0/UML"/>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.StringServices">
      <methods name="toPath" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="repeat" return="java.lang.String">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="int"/>
      </methods>
      <methods name="uniqueCode" return="int">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="toStandardNotation" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="toPkgName" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="isPrimitiveType" return="boolean">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="compare" return="int">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="java.lang.String"/>
      </methods>
    </resources>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.ListServices">
      <methods name="filterExistProperty" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
        <parameters type="boolean"/>
      </methods>
      <methods name="getAllInstances" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENode"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="isEmpty" return="boolean">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
    </resources>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.Uml2Services">
      <methods name="getAssociations" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="getAssociations" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Interface"/>
      </methods>
      <methods name="isNavigable" return="boolean">
        <parameters type="org.eclipse.uml2.uml.Property"/>
      </methods>
      <methods name="returnResult" return="org.eclipse.uml2.uml.Parameter">
        <parameters type="org.eclipse.uml2.uml.Operation"/>
      </methods>
      <methods name="subClass" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="hasStereotype" return="boolean">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="filterWithStereotype" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="attributeIds" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
      <methods name="filterWithOutStereotype" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="attributeNotIds" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
      <methods name="primitiveAttributes" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="pointedAttribute" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="oppositeAttribute" return="org.eclipse.uml2.uml.Property">
        <parameters type="org.eclipse.uml2.uml.Property"/>
      </methods>
      <methods name="oppositeAttributeOf" return="org.eclipse.uml2.uml.Property">
        <parameters type="org.eclipse.uml2.uml.Association"/>
        <parameters type="org.eclipse.uml2.uml.Classifier"/>
      </methods>
      <methods name="getRealParameters" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENode"/>
      </methods>
      <methods name="getElementByXmiId" return="org.eclipse.emf.ecore.EObject">
        <parameters type="java.lang.String"/>
        <parameters type="org.eclipse.emf.ecore.EObject"/>
      </methods>
      <methods name="getValue" return="java.lang.Object">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="java.lang.String"/>
      </methods>
    </resources>
  </mt:ResourceSet>
  <ecore:EAnnotation source="positions"/>
</xmi:XMI>
