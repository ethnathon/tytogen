<?xml version="1.0" encoding="iso-8859-1"?>

<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>AndroMDA - Spring - HowTo (5)</title>
        <author email="wouter@andromda.org">Wouter Zoons</author>
    </properties>

    <body>
        <section name="Enumerations">
            <p>
                You might have noticed the <code>carType</code> attribute in the <code>Car</code> entity. It is
                is a String type while in fact it makes more sense to restrict the set of possible values for
                this attribute. This can be achieved using <i>type-safe enumerations</i>. This is the topic
                discussed on this page.
            </p>
            <p>
                Type-safe enumerations are modeled by means of a regular class, only this time you need
                to use the <![CDATA[<<Enumeration>>]]> stereotype. All attributes on such an enumeration will
                be known as enumeration literals, they will assume the default values you assign to the attributes,
                or the name of the attribute if the default value is missing.
            </p>
            <p>
                Enumerations are persisted by the Hibernate framework used behind the scenes, so it is
                no problem to use these enumeration types for entity attributes, in the next picture we
                have replaced the type of the <code>carType</code> attribute in the <code>Car</code> entity
                from <code>datatype::String</code> to <code>org.andromda.test.CarType</code>.
            </p>
            <p>
                <img src="howto/org/andromda/test/5/uml.gif" alt="howto/org/andromda/test/5/uml.gif"/>
            </p>
            <ul>
                <li class="gen">Auto-generated source that does not need manual editing</li>
                <li class="impl">Auto-generated source that should be edited manually</li>
                <li class="changed">File that is affected by the modifications applied in this section</li>
            </ul>
            <ul>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/5/Car.hbm.xml"><code>Car.hbm.xml</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/5/Car.java"><code>Car.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/5/CarImpl.java"><code>CarImpl.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/5/CarDao.java"><code>CarDao.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/5/CarDaoBase.java"><code>CarDaoBase.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/5/CarDaoImpl.java"><code>CarDaoImpl.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/5/CarType.java"><code>CarType.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/Person.hbm.xml"><code>Person.hbm.xml</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/Person.java"><code>Person.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/PersonImpl.java"><code>PersonImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/PersonDao.java"><code>PersonDao.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/PersonDaoBase.java"><code>PersonDaoBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/PersonDaoImpl.java"><code>PersonDaoImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/RentalService.java"><code>RentalService.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/RentalServiceBase.java"><code>RentalServiceBase.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/5/RentalServiceImpl.java"><code>RentalServiceImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/ejb/RentalService.java"><code>ejb/RentalService.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/ejb/RentalServiceBean.java"><code>ejb/RentalServiceBean.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/5/ejb/RentalServiceHome.java"><code>ejb/RentalServiceHome.java</code></a></li>
            </ul>
            <subsection name="Literals">
                <p>
                    Note that in this example the enumeration attributes have been specified using regular variables
                    in Java notation, the <em>initial value</em> has been specified using capitals
                    (actually you would do this only when you want to have the value different from the attribute name):
<source><![CDATA[
sedan : String = SEDAN
liftback : String = LIFTBACK
stationWagon : String = STATION_WAGON
]]></source>
                    The following is perfectly equivalent, and shorter in use, it specifies the attribute name using
                    capitals and omits the initial value:
<source><![CDATA[
SEDAN : String
LIFTBACK : String
STATION_WAGON : String
]]></source>
                </p>
                <p class="highlight">
                    The latter is recommended for Java applications where it preferred to have literal names matching
                    the persisted values: the enumeration literals will be constants
                    and therefore a capitalized name is desired, and since the name is exactly what will be persisted
                    it is very easy in use too.
                </p>
            </subsection>
        </section>
        <section name="Next">
            <p>
                We'll learn how to model entity finders and have the Query Language automatically
                generated, the <a href="howto6.html">next</a> section will go into more details.
            </p>
        </section>
    </body>
</document>
