<?xml version="1.0" encoding="iso-8859-1"?>

<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>AndroMDA - Spring - HowTo (3)</title>
        <author email="wouter@andromda.org">Wouter Zoons</author>
    </properties>

    <body>
        <section name="Services">
            <p>
                A common strategy to shield the presentation tier from the persistence tier is to model
                the services in between, they will be used to implement the business logic in the application tier.
                The technology behind is of little interest to the developer (that's one of the good points of MDA right!), 
                but it's good to know Spring POJOs are being used (optionally wrapped with EJBs: more specifically 
                EJB Session Beans).
            </p>
            <p>
                In order to model such services you would just create another class, but this time you will give
                this class the <![CDATA[<<Service>>]]> stereotype. 
            </p>
            <p>
                Generally speaking it is sufficient to only model operations in these services, they represent
                the operations that can be called remotely, consider these operations the API of your application's
                back-end.
            </p>
            <p>
                Notice how we have modeled dependencies from the service to the entities, this will render
                accessors to the DAOs of both entities in the service. You will need to draw such dependencies
                when you need access to the persistent storage of entities. This is similar to the dependencies
                drawn between entities, as we have seen before.
            </p>
            <p>
                <img src="howto/org/andromda/test/3/uml.gif" alt="howto/org/andromda/test/3/uml.gif"/>
            </p>
            <ul>
                <li class="gen">Auto-generated source that does not need manual editing</li>
                <li class="impl">Auto-generated source that should be edited manually</li>
                <li class="changed">File that is affected by the modifications applied in this section</li>
            </ul>
            <ul>
                <li class="gen"><a href="howto/org/andromda/test/3/Car.hbm.xml"><code>Car.hbm.xml</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/Car.java"><code>Car.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/3/CarImpl.java"><code>CarImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/CarDao.java"><code>CarDao.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/CarDaoBase.java"><code>CarDaoBase.java</code></a></li>
                <li class="impl"><a href="howto/org/andromda/test/3/CarDaoImpl.java"><code>CarDaoImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/Person.hbm.xml"><code>Person.hbm.xml</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/Person.java"><code>Person.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/PersonImpl.java"><code>PersonImpl.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/PersonDao.java"><code>PersonDao.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/PersonDaoBase.java"><code>PersonDaoBase.java</code></a></li>
                <li class="gen"><a href="howto/org/andromda/test/3/PersonDaoImpl.java"><code>PersonDaoImpl.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/3/RentalService.java"><code>RentalService.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/3/RentalServiceBase.java"><code>RentalServiceBase.java</code></a></li>
                <li class="impl"><a class="changed" href="howto/org/andromda/test/3/RentalServiceImpl.java"><code>RentalServiceImpl.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/3/ejb/RentalService.java"><code>ejb/RentalService.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/3/ejb/RentalServiceBean.java"><code>ejb/RentalServiceBean.java</code></a></li>
                <li class="gen"><a class="changed" href="howto/org/andromda/test/3/ejb/RentalServiceHome.java"><code>ejb/RentalServiceHome.java</code></a></li>
            </ul>
            <p>
                There are a few other things you can do with these services, these features will be presented
                in the sections ahead.
            </p>
            <subsection name="Nullable Parameters">
                <p>
                    If you want an operation to have a parameter which is allowed to be <code>null</code> then simply
                    assign the <![CDATA[<<Nullable>>]]> stereotype to that parameter.
                </p>
            </subsection>
        </section>
        <section name="Next">
            <p>
                In the next section we'll learn about value-objects, click
                <a href="howto4.html">here</a> to continue.
            </p>
        </section>
    </body>
</document>
