<?xml version="1.0" encoding="$xmlEncoding"?>
<!-- Generated by webservice cartridge (web.xml.vsl) do not edit! -->
<web-app id="$applicationName" version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <display-name>$applicationName</display-name>
    <!-- context-param merge-point -->
    <!-- filter merge-point -->
    <!-- filter-mapping merge-point -->
#if ($cxf)
    <!-- Spring context Configuration file. Default is WEB-INF/applicationContext.xml -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext-CXF.xml</param-value>
    </context-param>
#end
#if ($axis1)
    <listener>
        <listener-class>org.apache.axis.transport.http.AxisHTTPSessionListener</listener-class>
    </listener>
#elseif ($jaxws)
    <listener>
        <listener-class>com.sun.xml.ws.transport.http.servlet.WSServletContextListener</listener-class>
    </listener>
#elseif ($cxf)
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
#end
    <!-- listener merge-point -->
#if ($axis1)
    <servlet>
        <description>Apache-Axis Servlet</description>
        <display-name>Apache-Axis Servlet</display-name>
        <servlet-name>AxisServlet</servlet-name>
        <servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
    </servlet>
    <servlet>
        <description>Axis Admin Servlet</description>
        <display-name>Axis Admin Servlet</display-name>
        <servlet-name>AdminServlet</servlet-name>
        <servlet-class>org.apache.axis.transport.http.AdminServlet</servlet-class>
        <load-on-startup>100</load-on-startup>
    </servlet>
    <servlet>
        <description>SOAPMonitorService</description>
        <display-name>SOAPMonitorService</display-name>
        <servlet-name>SOAPMonitorService</servlet-name>
        <servlet-class>org.apache.axis.monitor.SOAPMonitorService</servlet-class>
        <init-param>
            <param-name>SOAPMonitorPort</param-name>
            <param-value>5001</param-value>
        </init-param>
        <load-on-startup>100</load-on-startup>
    </servlet>
#elseif ($axis2)
    <servlet>
        <description>Apache-Axis Servlet</description>
        <display-name>Apache-Axis Servlet</display-name>
        <servlet-name>AxisServlet</servlet-name>
        <servlet-class>
            org.apache.axis2.transport.http.AxisServlet</servlet-class>
        <!--<init-param>-->
        <!--<param-name>axis2.xml.path</param-name>-->
        <!--<param-value>/WEB-INF/conf/axis2.xml</param-value>-->
        <!--<param-name>axis2.xml.url</param-name>-->
        <!--<param-value>http://localhot/myrepo/axis2.xml</param-value>-->
        <!--<param-name>axis2.repository.path</param-name>-->
        <!--<param-value>/WEB-INF</param-value>-->
        <!--<param-name>axis2.repository.url</param-name>-->
        <!--<param-value>http://localhot/myrepo</param-value>-->
        <!--</init-param>-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <description>Apache-Axis Servlet (REST)</description>
        <display-name>Apache-Axis Servlet (REST)</display-name>
        <servlet-name>AxisRESTServlet</servlet-name>
        <servlet-class>org.apache.axis2.transport.http.AxisRESTServlet</servlet-class>
    </servlet>
    <servlet>
        <description>Apache-Axis AxisAdmin Servlet (REST)</description>
        <display-name>Apache-Axis AxisAdmin Servlet (REST)</display-name>
        <servlet-name>AxisAdminServlet</servlet-name>
        <servlet-class>org.apache.axis2.transport.http.AxisAdminServlet</servlet-class>
    </servlet>
#elseif ($xfire)
    <servlet>
        <description>XFire Servlet</description>
        <display-name>XFire Servlet</display-name>
        <servlet-name>XFireServlet</servlet-name>
        <servlet-class>org.codehaus.xfire.transport.http.XFireConfigurableServlet</servlet-class>
    </servlet>
#elseif ($cxf)
    <servlet>
        <description>CXF Servlet</description>
        <display-name>CXF Servlet</display-name>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
#elseif ($jaxws)
#foreach ($service in $services)
    <servlet>
        <description>${service.name} Servlet</description>
        <display-name>${service.name} Servlet</display-name>
        <servlet-name>${service.name}Servlet</servlet-name>
        <servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
    </servlet>
#end
#end
    <!-- servlet merge-point -->
#if ($axis)
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/servlet/AxisServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/$servicesPath/*</url-pattern>
    </servlet-mapping>
#end
#if ($axis1)
    <servlet-mapping>
        <servlet-name>SOAPMonitorService</servlet-name>
        <url-pattern>/SOAPMonitor</url-pattern>
    </servlet-mapping>
#elseif ($axis2)
    <servlet-mapping>
        <servlet-name>AxisRESTServlet</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>*.jws</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisAdminServlet</servlet-name>
        <url-pattern>/axis2-admin/*</url-pattern>
    </servlet-mapping>
#elseif ($xfire)
    <servlet-mapping>
        <servlet-name>XFireServlet</servlet-name>
        <url-pattern>/servlet/XFireServlet/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>XFireServlet</servlet-name>
        <url-pattern>/$servicesPath/*</url-pattern>
    </servlet-mapping>
#elseif ($cxf)
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/servlet/CXFServlet/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/$servicesPath/*</url-pattern>
    </servlet-mapping>
#elseif ($jaxws)
#foreach ($service in $services)
    <servlet-mapping>
        <servlet-name>${service.name}Servlet</servlet-name>
        <url-pattern>/$servicesPath/${service.name}</url-pattern>
    </servlet-mapping>
#end
#end
    <!-- servlet-mapping merge-point -->
    <session-config>
        <session-timeout>$sessionTimeout</session-timeout>
    </session-config>
#if ($axis1)
    <!-- currently the W3C havent settled on a media type for WSDL;
         http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
         for now we go with the basic 'it's XML' response -->
    <mime-mapping>
        <extension>wsdl</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>
#end
    <!-- mime-mapping merge-point -->
#if ($axis2)
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>/axis2-web/index.jsp</welcome-file>
    </welcome-file-list>
#else
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
        <!-- welcome-file merge-point -->
    </welcome-file-list>
#end
#if ($axis2)
    <error-page>
        <error-code>404</error-code>
        <location>/axis2-web/Error/error404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/axis2-web/Error/error500.jsp</location>
    </error-page>
#end
    <!-- error-page merge-point -->
#if ($securityEnabled)
#foreach ($service in $services)
#if ($umlUtils.shouldOutput($service))
#if ($service.secured)
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>$service.name</web-resource-name>
            <description>
                Secures the $service.name web service.
            </description>
            <url-pattern>/${servicesPath}/${service.name}/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
#foreach ($role in $service.allRoles)
            <role-name>$role.name</role-name>
#end
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
#end
#end
#end
    <!-- security-constraint merge-point -->
    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>$securityRealm</realm-name>
    </login-config>
#set ($allRoles = $webServiceUtils.getAllRoles($services))
#foreach ($role in $allRoles)
    <security-role>
        <role-name>$role.name</role-name>
    </security-role>
#end
    <!-- security-role merge-point -->
#end
</web-app>