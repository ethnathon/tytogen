<?xml version="1.0" encoding="iso-8859-1"?>

<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>AndroMDA - CXF Webservices - HowTo</title>
        <author email="bob@andromda.org">Bob Fields</author>
    </properties>

    <body>
        <section name="Features">
            <h3>Generation of the complete set of required Webservice files</h3>
            <p>
                From a UML model webservice is used to generate a fully deployable webservice application.
                These features are all available and easily updatable via the UML model.
            </p>
            <p>
                The generated files include:
            </p>
            <ul>
                <li>wsdl/xsd</li>
                <li>Spring Configuration</li>
                <li>Web Configuration</li>
                <li>Endpoint Interface, Impl, and Delegate</li>
                <li>stubbed implementation code</li>
                <li>Ant scripts to run wsdl2java and java2ws for each service</li>
                <li>unit and integration tests</li>
                <li>webservice client generated by CXF</li>
            </ul>
        </section>
        <section name="Configuration">
            <p>
                Many configuration options are available from andromda.xml properties in the 
            webservice and default namespaces, including:
            </p>
            <ul>
                <li>xmlAttributes=true: Generate UML Class attributes as wsdl/xsd attributes (default), not elements</li>
                <li>XML*Adapter: JAXB binding adapter class for specific xml datatypes</li>
                <li>makeNillable=false: Make nullable=true for optional attributes/elements</li>
                <li>importedXSD=true: wsdl imports each schema as a separate file</li>
            </ul>
        </section>
        <section name="Modeling example">
            <p>
                We want to get you kick-started so that you can get productive with this cartridge as soon as
                possible. For this reason the following sections describe a very small example that will allow
                us to explain more features with less application complexity.
            </p>
            <p>
                In this how-to we will cover the following topics:
            </p>
            <ul>
                <li><a href="modeling.html">Modeling Webservices</a></li>
                <li><a href="output.html">Output Projects and Files</a></li>
                <li><a href="implementation.html">Implementation</a></li>
                <li><a href="testing.html">Unit and Integration Testing</a></li>
                <li><a href="cxfclient.html">CXF Client Project</a></li>
                <li><a href="bindings.html">JAXB Bindings Customization</a></li>
                <li><a href="faults.html">Exceptions and Faults</a></li>
                <li><a href="headers.html">Custom Headers</a></li>
                <li><a href="rest.html">REST</a></li>
                <li>Deployment</li>
                <li>Security</li>
                <li><a href="future.html">Future Enhancements</a></li>
            </ul>
        </section>
    </body>
</document>
