// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package it.tyto.iia.domain;

import it.tyto.iia.vo.RegistrantContactVO;

/**
 * @see RegistrantContact
 */
public class RegistrantContactDaoImpl
    extends RegistrantContactDaoBase
{
    /**
     * {@inheritDoc}
     */
    public void toRegistrantContactVO(
        RegistrantContact source,
        RegistrantContactVO target)
    {
        // TODO verify behavior of toRegistrantContactVO
        super.toRegistrantContactVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public RegistrantContactVO toRegistrantContactVO(final RegistrantContact entity)
    {
        // TODO verify behavior of toRegistrantContactVO
        return super.toRegistrantContactVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private RegistrantContact loadRegistrantContactFromRegistrantContactVO(RegistrantContactVO registrantContactVO)
    {
        // TODO implement loadRegistrantContactFromRegistrantContactVO
        throw new UnsupportedOperationException("it.tyto.iia.domain.loadRegistrantContactFromRegistrantContactVO(RegistrantContactVO) not yet implemented.");

        /* A typical implementation looks like this:
        RegistrantContact registrantContact = this.get(registrantContactVO.getId());
        if (registrantContact == null)
        {
            registrantContact = RegistrantContact.Factory.newInstance();
        }
        return registrantContact;
        */
    }

    /**
     * {@inheritDoc}
     */
    public RegistrantContact registrantContactVOToEntity(RegistrantContactVO registrantContactVO)
    {
        // TODO verify behavior of registrantContactVOToEntity
        RegistrantContact entity = this.loadRegistrantContactFromRegistrantContactVO(registrantContactVO);
        this.registrantContactVOToEntity(registrantContactVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void registrantContactVOToEntity(
        RegistrantContactVO source,
        RegistrantContact target,
        boolean copyIfNull)
    {
        // TODO verify behavior of registrantContactVOToEntity
        super.registrantContactVOToEntity(source, target, copyIfNull);
    }
}