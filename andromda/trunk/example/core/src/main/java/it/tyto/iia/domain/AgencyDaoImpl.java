// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package it.tyto.iia.domain;

import it.tyto.iia.vo.AgencyDetailVO;
import it.tyto.iia.vo.AgencyVO;

/**
 * @see Agency
 */
public class AgencyDaoImpl
    extends AgencyDaoBase
{
    /**
     * {@inheritDoc}
     */
    public void toAgencyVO(
        Agency source,
        AgencyVO target)
    {
        // TODO verify behavior of toAgencyVO
        super.toAgencyVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public AgencyVO toAgencyVO(final Agency entity)
    {
        // TODO verify behavior of toAgencyVO
        return super.toAgencyVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Agency loadAgencyFromAgencyVO(AgencyVO agencyVO)
    {
        // TODO implement loadAgencyFromAgencyVO
        throw new UnsupportedOperationException("it.tyto.iia.domain.loadAgencyFromAgencyVO(AgencyVO) not yet implemented.");

        /* A typical implementation looks like this:
        Agency agency = this.get(agencyVO.getId());
        if (agency == null)
        {
            agency = Agency.Factory.newInstance();
        }
        return agency;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Agency agencyVOToEntity(AgencyVO agencyVO)
    {
        // TODO verify behavior of agencyVOToEntity
        Agency entity = this.loadAgencyFromAgencyVO(agencyVO);
        this.agencyVOToEntity(agencyVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void agencyVOToEntity(
        AgencyVO source,
        Agency target,
        boolean copyIfNull)
    {
        // TODO verify behavior of agencyVOToEntity
        super.agencyVOToEntity(source, target, copyIfNull);
    }
    /**
     * {@inheritDoc}
     */
    public void toAgencyDetailVO(
        Agency source,
        AgencyDetailVO target)
    {
        // TODO verify behavior of toAgencyDetailVO
        super.toAgencyDetailVO(source, target);
        // WARNING! No conversion for target.contacts (can't convert source.getContacts():it.tyto.iia.domain.AgencyContact to it.tyto.iia.vo.AgencyContactVO
        // WARNING! No conversion for target.countries (can't convert source.getCountries():it.tyto.iia.domain.AgencyCountryAssociation to it.tyto.iia.vo.CountryVO
    }

    /**
     * {@inheritDoc}
     */
    public AgencyDetailVO toAgencyDetailVO(final Agency entity)
    {
        // TODO verify behavior of toAgencyDetailVO
        return super.toAgencyDetailVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Agency loadAgencyFromAgencyDetailVO(AgencyDetailVO agencyDetailVO)
    {
        // TODO implement loadAgencyFromAgencyDetailVO
        throw new UnsupportedOperationException("it.tyto.iia.domain.loadAgencyFromAgencyDetailVO(AgencyDetailVO) not yet implemented.");

        /* A typical implementation looks like this:
        Agency agency = this.get(agencyDetailVO.getId());
        if (agency == null)
        {
            agency = Agency.Factory.newInstance();
        }
        return agency;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Agency agencyDetailVOToEntity(AgencyDetailVO agencyDetailVO)
    {
        // TODO verify behavior of agencyDetailVOToEntity
        Agency entity = this.loadAgencyFromAgencyDetailVO(agencyDetailVO);
        this.agencyDetailVOToEntity(agencyDetailVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void agencyDetailVOToEntity(
        AgencyDetailVO source,
        Agency target,
        boolean copyIfNull)
    {
        // TODO verify behavior of agencyDetailVOToEntity
        super.agencyDetailVOToEntity(source, target, copyIfNull);
    }
}