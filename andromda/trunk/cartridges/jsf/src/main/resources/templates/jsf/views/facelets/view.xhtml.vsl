<?xml version="1.0" encoding="${xmlEncoding}"?>
## This macro defines the layout of a web page, and how the zones are layed out
## on it. Every web application should consider modifying it. to adapt to its 
## needs
<!-- Generated by andromda-jsf cartridge (views\facelets\view.xhtml.vsl) DO NOT EDIT! -->
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:c="http://java.sun.com/jstl/core"
    xmlns:tr="http://myfaces.apache.org/trinidad">

#if ($view.useCase.registrationUseCase)
    #set ($layout = "/layout/registration-layout.xhtml")
#elseif ($view.popup)
    #set ($layout = "/layout/popup-layout.xhtml")
#else
    #set ($layout = "/layout/layout.xhtml")
#end
#set($needsUpload="false")
#foreach ($action in $view.actions)
    #if($action.needsFileUpload)
        #set($needsUpload="true")
    #end
#end
    <ui:composition template="$layout">
        <ui:param name="usesUpload" value="${needsUpload}"/>
        <ui:param name="partialTriggers" value=""/>
        <ui:define name="title">
            <c:set var="title" value="#{messages['${view.titleKey}']}" scope="request"/>
        </ui:define>
        <ui:define name="content">
#set ( $zones = $view.zones ) 
#if($zones.contains('default'))
#drawZone('default')
#end

## Render Tabs with Jquery UI      
#set ( $tabMap = $view.tabLabelsById ) 
#if ( !$tabMap.isEmpty() )
            <script>$(function() {$( "#tabs" ).tabs();});</script>
            <div id="tabs">
                <ul>
#foreach ( $key in $tabMap.keySet() )
					<li><a href="#${key}">$tabMap.get($key)</a></li>
#end
                </ul>
#foreach ( $key in $tabMap.keySet() )
				<div id="$key">
#if($zones.contains($key))
#drawZone ( $key )
#end
#if($zones.contains("${key}-column1")||$zones.contains("${key}-column2"))
            		<table>
                    	<tr class="zoneRow">
                        	<td id="zoneColumn1" class="zoneCell" width="50%">
#drawZone("${key}-column1")
							</td>
							<td id="zoneColumn2" class="zoneCell" width="50%">
#drawZone("${key}-column2")
							</td>
                    	</tr>
            		</table>
#end
                </div>
#end
			</div>
#end
## Render page body, laying out zones in a table. 

#if($zones.contains('top') || $zones.contains('column1')||$zones.contains('column2')||$zones.contains('bottom'))
            <table class="zoneTable">
#if($zones.contains('top'))
                    <tr class="zoneRow">
                        <td class="zoneCell" colspan="2">#drawZone('top')</td>
                    </tr>
#end
#if($zones.contains('column1')||$zones.contains('column2'))
                    <tr class="zoneRow">
                        <td id="zoneColumn1" class="zoneCell" width="50%">
#drawZone('column1')
						</td>
						<td id="zoneColumn2" class="zoneCell" width="50%">
#drawZone('column2')
						</td>
                    </tr>
#end
#if($zones.contains('bottom'))
                    <tr class="zoneRow">
                        <td class="zoneCell" colspan="2">#drawZone('bottom')</td>
                    </tr>
#end
            </table>
#end
        </ui:define>
    </ui:composition>
</html>
