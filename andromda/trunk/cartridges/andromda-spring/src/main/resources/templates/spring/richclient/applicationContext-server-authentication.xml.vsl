<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- Generated by richclient/applicationContext-authentication.xml.vsl in andromda-spring-cartridge -->
<beans>
    <bean id="basicProcessingFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <property name="authenticationManager"><ref bean="${securityAuthenticationManager}"/></property>
        <property name="authenticationEntryPoint"><ref bean="authenticationEntryPoint"/></property>
    </bean>

    <bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <property name="realmName"><value>${securityRealm}</value></property>
    </bean>

#if ($stringUtils.isNotBlank($securityAuthenticationManagerImplClass))
    <bean id="${securityAuthenticationManager}" class="$securityAuthenticationManagerImplClass">
        <property name="providers">
            <list>
                <ref bean="${securityDaoAuthenticationProviderBeanName}"/>
            </list>
        </property>
    </bean>

#end
#if ($stringUtils.isNotBlank($securityDaoAuthenticationProviderImplClass))
    <bean id="${securityDaoAuthenticationProviderBeanName}" class="${securityDaoAuthenticationProviderImplClass}">
        <property name="userDetailsService">
            <ref bean="${securityAuthenticationDaoBeanName}"/>
        </property>
#if ($stringUtils.isNotBlank($securityDaoUserCacheBeanName))
        <property name="userCache">
            <ref bean="${securityDaoUserCacheBeanName}"/>
        </property>
#end
#if ($stringUtils.isNotBlank($passwordEncoderBeanName))
        <property name="passwordEncoder">
            <ref bean="${passwordEncoderBeanName}"/>
        </property>
#end
#if ($stringUtils.isNotBlank($passwordSaltSourceBeanNamee))
        <property name="saltSource">
            <ref bean="${passwordSaltSourceBeanName}"/>
        </property>
#end
    </bean>

#end
#if ($stringUtils.isNotBlank($securityDaoUserCacheImplClass))
    <bean id="userCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
#if (${securityUserCacheConfigLocation} == 'default')
            <value>classpath:WEB-INF/ehcache-server-authentication.xml</value>
#else
            <value>${securityUserCacheConfigLocation}</value>
#end
        </property>
    </bean>

    <bean id="userCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
           <ref local="userCacheManager"/>
        </property>
        <property name="cacheName">
           <value>${securityUserCacheName}</value>
        </property>
    </bean>

    <bean id="${securityDaoUserCacheBeanName}" class="${securityDaoUserCacheImplClass}">
        <property name="cache">
            <ref local="userCacheBackend"/>
        </property>
    </bean>

#end
#if ($stringUtils.isNotBlank($passwordEncoderImplClass))
    <bean id="${passwordEncoderBeanName}" class="${passwordEncoderImplClass}">
    </bean>

#end
    <!-- applicationContext server authentication merge-point -->
</beans>