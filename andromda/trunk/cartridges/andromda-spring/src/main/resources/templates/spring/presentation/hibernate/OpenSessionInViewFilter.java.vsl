// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: OpenSessionInViewFilter.java.vsl in andromda-spring-cartridge.
//
#if($stringUtils.isNotBlank($springPresentationTypesPackage))
package $springPresentationTypesPackage;
#set ($generatedFile = "${stringUtils.replace($springPresentationTypesPackage,'.','/')}/${openSessionInViewFilterName}.java")
#end

/**
 * This class extends Spring's regular OpenSessionInViewFilter to take into account the particular Spring
 * configuration files structure generated by AndroMDA, that is one root beanRefFactory application
 * context with separated datasource and common beans sub-application contexts.
 *
 * @author Sebastien Arbogast
 * @author Chad Brandon
 */
public class $openSessionInViewFilterName
    extends ${hibernateUtils.springHibernatePackage}.support.OpenSessionInViewFilter
{
   /**
    * @see ${hibernateUtils.springHibernatePackage}.support.OpenSessionInViewFilter${esc.hash}lookupSessionFactory()
    */
   protected ${hibernateUtils.basePackage}.SessionFactory lookupSessionFactory()
   {
        final org.springframework.beans.factory.access.BeanFactoryLocator beanFactoryLocator =
            org.springframework.context.access.ContextSingletonBeanFactoryLocator.getInstance("$beanRefFactory");
        final org.springframework.beans.factory.access.BeanFactoryReference reference =
            beanFactoryLocator.useBeanFactory("$beanRefFactoryId");
        return (${hibernateUtils.basePackage}.SessionFactory)reference.getFactory().getBean(this.getSessionFactoryBeanName());
   }
}