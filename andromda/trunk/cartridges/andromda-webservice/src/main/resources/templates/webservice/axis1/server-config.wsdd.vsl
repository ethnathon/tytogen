<?xml version="1.0" encoding="$xmlEncoding"?>
<!-- Axis Web Service Deployment Descriptor (WSDD),
     generated by andromda-webservice cartridge
     (server-config.wsdd.vsl) do not edit! -->
<deployment xmlns="http://xml.apache.org/axis/wsdd/" xmlns:java="http://xml.apache.org/axis/wsdd/providers/java">
    <globalConfiguration>
        <parameter name="adminPassword" value="admin"/>
        <parameter name="attachments.implementation" value="org.apache.axis.attachments.AttachmentsImpl"/>
#if ($stringUtils.isNotBlank($attachmentsDirectory))
        <parameter name="attachments.Directory" value="$attachmentsDirectory"/>
#end
        <parameter name="sendXsiTypes" value="true"/>
        <parameter name="sendMultiRefs" value="true"/>
        <parameter name="sendXMLDeclaration" value="true"/>
        <parameter name="axis.sendMinimizedElements" value="true"/>
        <parameter name="axis.servicesPath" value="/$servicesPath/"/>
    </globalConfiguration>
    <handler name="LocalResponder" type="java:org.apache.axis.transport.local.LocalResponder"/>
    <handler name="URLMapper" type="java:org.apache.axis.handlers.http.URLMapper"/>
    <handler name="Authenticate" type="java:org.apache.axis.handlers.SimpleAuthenticationHandler"/>
#set ($arraySerializerName = "ArraySerializerFactory")
#if ($stringUtils.isNotBlank($webserviceTypesPackage))
#set ($arraySerializerName = "$webserviceTypesPackage.$arraySerializerName")
#end
#foreach ($service in $services)
#parse("templates/webservice/Globals.vm")
    <service name="$service.qName" provider="java:${service.provider}" style="$service.style" use="$service.use">
## if the signedRequest or encyptedRequest flag is true, then we'll add in the appropriate
## handler
#if ($signedRequest == 'true'|| $encryptedRequest == 'true')
#if ($signedRequest == 'true')
#set ($action = "Signature")
#end
#if ($encryptedRequest == 'true')
#set ($action = " $action Encrypt")
#end
        <!-- define the WSS4J security handler to handle requests -->
        <requestFlow>
            <handler type="java:org.apache.ws.axis.security.WSDoAllReceiver">
                <parameter name="action" value="$action.trim()"/>
                <parameter name="signaturePropFile" value="wss4j/crypto.properties" />
            </handler>
        </requestFlow>
#end
## For now only define the static wsdl with wrapped
#if ($service.wrappedStyle)
        <wsdlFile>/$service.wsdlFile</wsdlFile>
#end
        <documentation>
$service.getDocumentation("            ", 64, false)
        </documentation>
        <namespace>$service.namespace</namespace>
        <parameter name="allowedMethods" value="$service.allowedMethods"/>
#parse("templates/webservice/${service.provider}-Globals.vm")
#parse("templates/webservice/axis1/${service.provider}-provider.vm")
#foreach ( $operation in $service.allowedOperations )
        <operation name="${operation.name}">
#foreach ( $argument in $operation.arguments )
            <parameter name="${argument.name}"/>
#end
        </operation>
#end
#foreach ( $typeMapping in $service.typeMappingElements )
## By default set the type as the typeMapping itself,
## however if it has a type, use that instead
#set ($type = $typeMapping)
#if ($typeMapping.type)
#set ($type = $typeMapping.type)
#end
        <typeMapping
            type="java:${type.fullyQualifiedName}"
            xmlns:ns${velocityCount}="${type.namespace}"
#set ($serialPrefix = "Bean")
#if ($type.arrayType)
#set ($serialPrefix = "Array")
            qname="ns${velocityCount}:${type.wsdlArrayName}"
#else
            qname="ns${velocityCount}:${type.qName}"
#if ($type.enumeration)
#set ($serialPrefix = "Enum")
#end
#end
#if ($type.arrayType)
            serializer="$arraySerializerName"
#else
            serializer="org.apache.axis.encoding.ser.${serialPrefix}SerializerFactory"
#end
            deserializer="org.apache.axis.encoding.ser.${serialPrefix}DeserializerFactory"
            encodingStyle="${encodingStyle}">
            <documentation>
$type.getDocumentation("            ", 64, false)
            </documentation>
        </typeMapping>
## Handle any type mappings that happen to be associationEnds
#if ($typeMapping.many)
        <typeMapping
            type="java:${type.fullyQualifiedName}[]"
            xmlns:ns${velocityCount}="$type.namespace"
            qname="ns${velocityCount}:${type.wsdlArrayName}"
            serializer="$arraySerializerName"
            deserializer="org.apache.axis.encoding.ser.ArrayDeserializerFactory"
            encodingStyle="${encodingStyle}">
            <documentation>
$type.getDocumentation("            ", 64, false)
            </documentation>
        </typeMapping>
#end
#end
    </service>
#end
    <transport name="http">
        <requestFlow>
            <handler type="URLMapper"/>
            <handler type="java:org.apache.axis.handlers.http.HTTPAuthHandler"/>
        </requestFlow>
    </transport>
    <transport name="local">
        <responseFlow>
            <handler type="LocalResponder"/>
        </responseFlow>
    </transport>
</deployment>