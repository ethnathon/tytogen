#if(!$hibernateUtils.version2)
<?xml version="1.0" encoding="$xmlEncoding"?>
<!--
     Attention: Generated code! Do not modify by hand!
     Generated by: hibernate3/test/hibernate-test.cfg.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE
    hibernate-configuration
    PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
           "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- properties -->
#if ($stringUtils.isNotBlank($testDriver))
        <property name="connection.driver_class">$testDriver</property>
#end
#if ($stringUtils.isNotBlank($testUsername))
        <property name="connection.username">$testUsername</property>
#end
#if ($stringUtils.isNotBlank($testPassword))
        <property name="connection.password">$testPassword</property>
#end
##if ($stringUtils.isNotBlank($dataSource))
##        <property name="connection.datasource">$dataSource</property>
##end
#if ($stringUtils.isNotBlank($testConnectionUrl))
        <property name="connection.url">$testConnectionUrl</property>
#end
#if ($stringUtils.isNotBlank($hibernatePoolSize))
        <property name="pool.size">$hibernatePoolSize</property>
#end
#if ($stringUtils.isNotBlank($hibernateTransactionManagerStrategy))
        <property name="transaction.manager.strategy">$hibernateTransactionManagerStrategy</property>
#end
#if ($stringUtils.isNotBlank($hibernateUserTransactionName))
        <property name="jta.UserTransaction">$hibernateUserTransactionName</property>
#end
#if ($stringUtils.isNotBlank($hibernateTransactionFactoryClass))
        <property name="transaction.factory_class">$hibernateTransactionFactoryClass</property>
#end
#if ($stringUtils.isNotBlank($hibernateTransactionManagerLookup))
        <property name="transaction.manager_lookup_class">$hibernateTransactionManagerLookup</property>
#end
#if ($stringUtils.isNotBlank($hibernateUseOuterJoin))
        <property name="use_outer_join">$hibernateUseOuterJoin</property>
#end
#if ($stringUtils.isNotBlank($hibernateShowSql))
        <property name="show_sql">$hibernateShowSql</property>
#end
#if ($stringUtils.isNotBlank($hibernateJndiName))
        <property name="session_factory_name">$hibernateJndiName</property>
#end
#if ($stringUtils.isNotBlank($hibernateDialect))
        <property name="dialect">$hibernateDialect</property>
#end
#if ($stringUtils.isNotBlank($schemaName))
        <property name="default_schema">$schemaName</property>
#end
#if ($stringUtils.isNotBlank($hibernateMaxFetchDepth))
        <property name="max_fetch_depth">$hibernateMaxFetchDepth</property>
#end
#if ($stringUtils.isNotBlank($hibernateJdbcFetchSize))
        <property name="jdbc.fetch_size">$hibernateJdbcFetchSize</property>
#end
#if ($stringUtils.isNotBlank($hibernateJdbcBatchSize))
        <property name="jdbc.batch_size">$hibernateJdbcBatchSize</property>
#end
#if ($stringUtils.isNotBlank($hibernateJdbcUseScrollableResultSet))
        <property name="jdbc.use_scrollable_resultset">$hibernateJdbcUseScrollableResultSet</property>
#end
#if ($stringUtils.isNotBlank($hibernateJdbcUseStreamsForBinary))
        <property name="use_streams_for_binary">$hibernateJdbcUseStreamsForBinary</property>
#end
#if ($stringUtils.isNotBlank($hibernateHbm2DDLAuto))
        <property name="hibernate.hbm2ddl.auto">$hibernateHbm2DDLAuto</property>
#end
## Use the new Identifier generator for Hibernate 3.x, if using annotation mappings
        <property name="hibernate.id.new_generator_mappings">true</property>
#if ($stringUtils.isNotBlank($hibernateQueryFactory))
        <property name="hibernate.query.factory_class">$hibernateQueryFactory</property>
#end
#if ($stringUtils.isNotBlank($hibernateQuerySubstitutions))
        <property name="hibernate.query.substitutions">$hibernateQuerySubstitutions</property>
#end
#if ($stringUtils.isNotBlank($hibernateEnableCache))
        <property name="hibernate.cache.use_query_cache">$hibernateEnableCache</property>
#end
#if ($stringUtils.isNotBlank($hibernateCacheProvider))
        <property name="hibernate.cache.provider_class">$hibernateCacheProvider</property>
#end
#if ($stringUtils.isNotBlank($hibernateQueryCacheFactory))
        <property name="hibernate.cache.query_cache_factory">$hibernateQueryCacheFactory</property>
#end
#if ($stringUtils.isNotBlank($hibernateConnectionReleaseMode))
        <property name="hibernate.connection.release_mode">$hibernateConnectionReleaseMode</property>
#end
#if (!$hibernateEntityAnnotations)
        <!-- mapping files -->
#foreach($entity in $entities)
#if ($entity.requiresMapping)
        <mapping resource="${entity.packagePath}/${entity.entityName}.hbm.xml"/>
#end
#end
#end
    </session-factory>
</hibernate-configuration>
#end