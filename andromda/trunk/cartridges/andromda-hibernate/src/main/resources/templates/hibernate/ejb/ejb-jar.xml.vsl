#parse("templates/hibernate/ejb/HibernateSessionEJBGlobals.vm")
<?xml version="1.0" encoding="$xmlEncoding"?>
<!--
     Attention: Generated code! Do not modify by hand!
     Generated by hibernate/ejb/ejb-jar.xml.vsl in andromda-hibernate-cartridge on $hibernateUtils.date.
-->
<!DOCTYPE ejb-jar PUBLIC "-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN"
                         "http://java.sun.com/dtd/ejb-jar_2_0.dtd">

<ejb-jar>

    <description>No Description.</description>
    <display-name>Generated by AndroMDA Hibernate Cartridge</display-name>

    <enterprise-beans>

#foreach ($service in $services)
        <session>
            <description>
#if (!$stringUtils.containsNone($service.getDocumentation("", 64, false), "\"'&<>"))                <![CDATA[[#end
                $service.getDocumentation("                ", 64, false)
#if (!$stringUtils.containsNone($service.getDocumentation("", 64, false), "\"'&<>"))                ]]>#end
            </description>
            <ejb-name>$service.name</ejb-name>
#if ($service.ejbRemoteView)
            <home>${service.fullyQualifiedName}Home</home>
#else
            <local-home>${service.fullyQualifiedName}Home</local-home>
#end
            <$service.ejbViewType>$service.fullyQualifiedName</$service.ejbViewType>
            <ejb-class>${service.fullyQualifiedName}BeanImpl</ejb-class>
#if ($service.ejbStateful)
            <session-type>Stateful</session-type>
#else
            <session-type>Stateless</session-type>
#end
            <transaction-type>Container</transaction-type>
#foreach ($serviceRef in $service.serviceReferences)
#set ($serviceRef = $serviceRef.targetElement)
#set ($ejbRefTag = "ejb-ref")
#if (!$serviceRef.ejbRemoteView)
#set ($ejbRefTag = "ejb-local-ref")
#end
            <$ejbRefTag>
                <ejb-ref-name>ejb/${serviceRef.name}Ref</ejb-ref-name>
                <ejb-ref-type>Session</ejb-ref-type>
#if ($serviceRef.ejbRemoteView)
                <home>${serviceRef.fullyQualifiedName}Home</home>
#else
                <local-home>${serviceRef.fullyQualifiedName}Home</local-home>
#end
                <$serviceRef.ejbViewType>$serviceRef.fullyQualifiedName</$serviceRef.ejbViewType>
                <ejb-link>$serviceRef.name</ejb-link>
            </$ejbRefTag>
#end
        </session>

#end
    </enterprise-beans>

    <assembly-descriptor>

#if ($ejbSecurityEnabled)
#foreach ($role in $hibernateUtils.getAllRoles($services))
        <security-role>
            <description>#if (!$stringUtils.containsNone($role.getDocumentation("", 64, false), "\"'&<>"))<![CDATA[[#end$role.getDocumentation("", -1, false)#if (!$stringUtils.containsNone($role.getDocumentation("", 64, false), "\"'&<>"))]]>#end</description>
            <role-name>$role.name</role-name>
        </security-role>

#end
#end
#foreach ($service in $services)
        <method-permission>
            <description>Create method security constraint</description>
#if (!$ejbSecurityEnabled || $service.allRoles.empty)
            <unchecked/>
#else
#foreach ($role in $service.allRoles)
            <role-name>$role.name</role-name>
#end
#end
            <method>
              <description>Creates the $service.name Session EJB</description>
              <ejb-name>$service.name</ejb-name>
#set ($homeInterface = "LocalHome")
#if ($service.ejbRemoteView)
#set ($homeInterface = "Home")
#end
              <method-intf>$homeInterface</method-intf>
              <method-name>create</method-name>
          </method>
        </method-permission>

#foreach ($operation in $service.operations)
        <method-permission>
            <description>$operation.signature security constraint</description>
#if (!$ejbSecurityEnabled || $operation.roles.empty)
            <unchecked/>
#else
#foreach ($role in $operation.roles)
            <role-name>$role.name</role-name>
#end
#end
            <method>
                <description>#if (!$stringUtils.containsNone($operation.getDocumentation("", -1, false), "\"'&<>"))<![CDATA[[#end$operation.getDocumentation("", -1, false)#if (!$stringUtils.containsNone($operation.getDocumentation("", -1, false), "\"'&<>"))]]>#end</description>
                <ejb-name>$service.name</ejb-name>
#set ($interface = "Local")
#if ($service.ejbRemoteView)
#set ($interface = "Remote")
#end
                <method-intf>$interface</method-intf>
                <method-name>$operation.name</method-name>
#if (!$operation.arguments.empty)
                <method-params>
#foreach ($argument in $operation.arguments)
                    <method-param>$argument.type.fullyQualifiedHibernateType</method-param>
#end
                </method-params>
#end
            </method>
        </method-permission>

#end
#end
#foreach ($service in $services)
#foreach ($operation in $service.operations)
        <container-transaction>
            <method>
                <ejb-name>$service.name</ejb-name>
                <method-name>$operation.name</method-name>
                <method-params>
#foreach ($argument in $operation.arguments)
                    <method-param>$argument.type.fullyQualifiedHibernateType</method-param>
#end
                </method-params>
            </method>
            <trans-attribute>$operation.transactionType</trans-attribute>
        </container-transaction>

#end
#end
    </assembly-descriptor>

</ejb-jar>