// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package it.tyto.iia.domain;

import it.tyto.iia.vo.DetailRegistrantVO;
import it.tyto.iia.vo.RegistrantVO;

/**
 * @see Registrant
 */
public class RegistrantDaoImpl
    extends RegistrantDaoBase
{
    /**
     * {@inheritDoc}
     */
    public void toRegistrantVO(
        Registrant source,
        RegistrantVO target)
    {
        // TODO verify behavior of toRegistrantVO
        super.toRegistrantVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public RegistrantVO toRegistrantVO(final Registrant entity)
    {
        // TODO verify behavior of toRegistrantVO
        return super.toRegistrantVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Registrant loadRegistrantFromRegistrantVO(RegistrantVO registrantVO)
    {
        // TODO implement loadRegistrantFromRegistrantVO
        throw new UnsupportedOperationException("it.tyto.iia.domain.loadRegistrantFromRegistrantVO(RegistrantVO) not yet implemented.");

        /* A typical implementation looks like this:
        Registrant registrant = this.get(registrantVO.getId());
        if (registrant == null)
        {
            registrant = Registrant.Factory.newInstance();
        }
        return registrant;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Registrant registrantVOToEntity(RegistrantVO registrantVO)
    {
        // TODO verify behavior of registrantVOToEntity
        Registrant entity = this.loadRegistrantFromRegistrantVO(registrantVO);
        this.registrantVOToEntity(registrantVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void registrantVOToEntity(
        RegistrantVO source,
        Registrant target,
        boolean copyIfNull)
    {
        // TODO verify behavior of registrantVOToEntity
        super.registrantVOToEntity(source, target, copyIfNull);
    }
    /**
     * {@inheritDoc}
     */
    public void toDetailRegistrantVO(
        Registrant source,
        DetailRegistrantVO target)
    {
        // TODO verify behavior of toDetailRegistrantVO
        super.toDetailRegistrantVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public DetailRegistrantVO toDetailRegistrantVO(final Registrant entity)
    {
        // TODO verify behavior of toDetailRegistrantVO
        return super.toDetailRegistrantVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Registrant loadRegistrantFromDetailRegistrantVO(DetailRegistrantVO detailRegistrantVO)
    {
        // TODO implement loadRegistrantFromDetailRegistrantVO
        throw new UnsupportedOperationException("it.tyto.iia.domain.loadRegistrantFromDetailRegistrantVO(DetailRegistrantVO) not yet implemented.");

        /* A typical implementation looks like this:
        Registrant registrant = this.get(detailRegistrantVO.getId());
        if (registrant == null)
        {
            registrant = Registrant.Factory.newInstance();
        }
        return registrant;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Registrant detailRegistrantVOToEntity(DetailRegistrantVO detailRegistrantVO)
    {
        // TODO verify behavior of detailRegistrantVOToEntity
        Registrant entity = this.loadRegistrantFromDetailRegistrantVO(detailRegistrantVO);
        this.detailRegistrantVOToEntity(detailRegistrantVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void detailRegistrantVOToEntity(
        DetailRegistrantVO source,
        Registrant target,
        boolean copyIfNull)
    {
        // TODO verify behavior of detailRegistrantVOToEntity
        super.detailRegistrantVOToEntity(source, target, copyIfNull);
    }
}