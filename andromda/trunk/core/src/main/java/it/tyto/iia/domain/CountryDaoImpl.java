// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package it.tyto.iia.domain;

import it.tyto.iia.vo.CountryVO;

/**
 * @see Country
 */
public class CountryDaoImpl
    extends CountryDaoBase
{
    /**
     * {@inheritDoc}
     */
    public void toCountryVO(
        Country source,
        CountryVO target)
    {
        // TODO verify behavior of toCountryVO
        super.toCountryVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public CountryVO toCountryVO(final Country entity)
    {
        // TODO verify behavior of toCountryVO
        return super.toCountryVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Country loadCountryFromCountryVO(CountryVO countryVO)
    {
        // TODO implement loadCountryFromCountryVO
        throw new UnsupportedOperationException("it.tyto.iia.domain.loadCountryFromCountryVO(CountryVO) not yet implemented.");

        /* A typical implementation looks like this:
        Country country = this.get(countryVO.getId());
        if (country == null)
        {
            country = Country.Factory.newInstance();
        }
        return country;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Country countryVOToEntity(CountryVO countryVO)
    {
        // TODO verify behavior of countryVOToEntity
        Country entity = this.loadCountryFromCountryVO(countryVO);
        this.countryVOToEntity(countryVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void countryVOToEntity(
        CountryVO source,
        Country target,
        boolean copyIfNull)
    {
        // TODO verify behavior of countryVOToEntity
        super.countryVOToEntity(source, target, copyIfNull);
    }
}