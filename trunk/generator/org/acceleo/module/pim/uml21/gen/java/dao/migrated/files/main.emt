<?xml version="1.0" encoding="Cp1252"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="http://www.eclipse.org/acceleo/mt/2.6.0/core" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:expressions="http://www.eclipse.org/acceleo/mt/2.6.0/expressions" xmlns:mt="http://www.eclipse.org/acceleo/mt/2.6.0" xmlns:statements="http://www.eclipse.org/acceleo/mt/2.6.0/statements">
  <mt:ResourceSet>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.api.dao-common" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20" beginTag="&lt;%" endTag="%>">
      <scripts begin="825" end="1237">
        <descriptor begin="756" end="798" name="daoPackage" type="Class">
          <file/>
          <post xsi:type="expressions:CallSet" begin="793" end="797">
            <calls begin="793" end="797" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="830" end="1232">
          <condition xsi:type="expressions:Parenthesis" begin="830" end="866">
            <expression xsi:type="expressions:Operator" begin="831" end="865" operator="==">
              <operands xsi:type="expressions:CallSet" begin="831" end="859">
                <calls begin="831" end="859" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="843" end="858" value="useDaoPackage"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="861" end="865" value="no"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="871" end="875" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="877" end="902">
            <expression xsi:type="expressions:CallSet" begin="877" end="902">
              <calls begin="877" end="884" name="package" prefix=""/>
              <calls begin="885" end="902" name="getCompleteName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="904" end="906" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="918" end="918" value=""/>
          <elseStatements xsi:type="statements:If" begin="927" end="1225">
            <condition xsi:type="expressions:Parenthesis" begin="927" end="980">
              <expression xsi:type="expressions:Operator" begin="928" end="979" operator="==">
                <operands xsi:type="expressions:CallSet" begin="928" end="969">
                  <calls begin="928" end="969" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="940" end="968" value="use.functional.disposition"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="973" end="979" value="true"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="985" end="989" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="991" end="1002">
              <expression xsi:type="expressions:CallSet" begin="991" end="1002">
                <calls begin="991" end="1002" name="baseImports" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1004" end="1005" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1007" end="1018">
              <expression xsi:type="expressions:CallSet" begin="1007" end="1018">
                <calls begin="1007" end="1018" name="projectName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1020" end="1021" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1023" end="1045">
              <expression xsi:type="expressions:CallSet" begin="1023" end="1045">
                <calls begin="1023" end="1030" name="package" prefix=""/>
                <calls begin="1031" end="1045" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1049" end="1079">
              <expression xsi:type="expressions:CallSet" begin="1049" end="1079">
                <calls begin="1049" end="1079" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1065" end="1078" value="dao.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Comment" begin="1085" end="1090" value=" dao "/>
            <thenStatements xsi:type="statements:Text" begin="1094" end="1096" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="1112" end="1116" value="    "/>
            <elseStatements xsi:type="statements:Feature" begin="1118" end="1129">
              <expression xsi:type="expressions:CallSet" begin="1118" end="1129">
                <calls begin="1118" end="1129" name="baseImports" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1131" end="1132" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1134" end="1145">
              <expression xsi:type="expressions:CallSet" begin="1134" end="1145">
                <calls begin="1134" end="1145" name="projectName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="1149" end="1179">
              <expression xsi:type="expressions:CallSet" begin="1149" end="1179">
                <calls begin="1149" end="1179" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1165" end="1178" value="dao.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Comment" begin="1185" end="1188" value="dao"/>
            <elseStatements xsi:type="statements:Text" begin="1192" end="1193" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1195" end="1217">
              <expression xsi:type="expressions:CallSet" begin="1195" end="1217">
                <calls begin="1195" end="1202" name="package" prefix=""/>
                <calls begin="1203" end="1217" name="normalizedName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1219" end="1221" value="&#xD;&#xA;"/>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="1300" end="1856">
        <descriptor begin="1250" end="1296" name="daoImplPackage" type="Class">
          <file/>
          <post xsi:type="expressions:CallSet" begin="1291" end="1295">
            <calls begin="1291" end="1295" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="1305" end="1851">
          <condition xsi:type="expressions:Parenthesis" begin="1305" end="1341">
            <expression xsi:type="expressions:Operator" begin="1306" end="1340" operator="==">
              <operands xsi:type="expressions:CallSet" begin="1306" end="1334">
                <calls begin="1306" end="1334" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1318" end="1333" value="useDaoPackage"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="1336" end="1340" value="no"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1346" end="1350" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="1352" end="1377">
            <expression xsi:type="expressions:CallSet" begin="1352" end="1377">
              <calls begin="1352" end="1359" name="package" prefix=""/>
              <calls begin="1360" end="1377" name="getCompleteName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1379" end="1380" value="."/>
          <thenStatements xsi:type="statements:Feature" begin="1382" end="1417">
            <expression xsi:type="expressions:CallSet" begin="1382" end="1417">
              <calls begin="1382" end="1417" name="getProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1394" end="1416" value="default.impl.package"/>
              </calls>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Comment" begin="1423" end="1429" value=" impl "/>
          <thenStatements xsi:type="statements:Text" begin="1433" end="1435" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="1447" end="1447" value=""/>
          <elseStatements xsi:type="statements:If" begin="1456" end="1844">
            <condition xsi:type="expressions:Parenthesis" begin="1456" end="1509">
              <expression xsi:type="expressions:Operator" begin="1457" end="1508" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1457" end="1498">
                  <calls begin="1457" end="1498" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1469" end="1497" value="use.functional.disposition"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="1502" end="1508" value="true"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1514" end="1518" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="1520" end="1531">
              <expression xsi:type="expressions:CallSet" begin="1520" end="1531">
                <calls begin="1520" end="1531" name="baseImports" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1533" end="1534" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1536" end="1547">
              <expression xsi:type="expressions:CallSet" begin="1536" end="1547">
                <calls begin="1536" end="1547" name="projectName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1549" end="1550" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="1552" end="1574">
              <expression xsi:type="expressions:CallSet" begin="1552" end="1574">
                <calls begin="1552" end="1559" name="package" prefix=""/>
                <calls begin="1560" end="1574" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1578" end="1608">
              <expression xsi:type="expressions:CallSet" begin="1578" end="1608">
                <calls begin="1578" end="1608" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1594" end="1607" value="dao.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="1612" end="1647">
              <expression xsi:type="expressions:CallSet" begin="1612" end="1647">
                <calls begin="1612" end="1647" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1628" end="1646" value="dao.impl.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Comment" begin="1653" end="1663" value=" dao.impl "/>
            <thenStatements xsi:type="statements:Text" begin="1667" end="1669" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="1685" end="1689" value="    "/>
            <elseStatements xsi:type="statements:Feature" begin="1691" end="1702">
              <expression xsi:type="expressions:CallSet" begin="1691" end="1702">
                <calls begin="1691" end="1702" name="baseImports" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1704" end="1705" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1707" end="1718">
              <expression xsi:type="expressions:CallSet" begin="1707" end="1718">
                <calls begin="1707" end="1718" name="projectName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="1722" end="1752">
              <expression xsi:type="expressions:CallSet" begin="1722" end="1752">
                <calls begin="1722" end="1752" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1738" end="1751" value="dao.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="1754" end="1755" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="1757" end="1779">
              <expression xsi:type="expressions:CallSet" begin="1757" end="1779">
                <calls begin="1757" end="1764" name="package" prefix=""/>
                <calls begin="1765" end="1779" name="normalizedName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="1783" end="1818">
              <expression xsi:type="expressions:CallSet" begin="1783" end="1818">
                <calls begin="1783" end="1818" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="1799" end="1817" value="dao.impl.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Comment" begin="1824" end="1834" value=" dao.impl "/>
            <elseStatements xsi:type="statements:Text" begin="1838" end="1840" value="&#xD;&#xA;"/>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="1909" end="1921">
        <descriptor begin="1869" end="1905" name="daoInterfaceName" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1909" end="1910" value="I"/>
        <statements xsi:type="statements:Feature" begin="1912" end="1916">
          <expression xsi:type="expressions:CallSet" begin="1912" end="1916">
            <calls begin="1912" end="1916" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1918" end="1921" value="Dao"/>
      </scripts>
      <scripts begin="1989" end="2487">
        <descriptor begin="1934" end="1985" name="daoInterfacePackage" type="Class">
          <file/>
          <post xsi:type="expressions:CallSet" begin="1980" end="1984">
            <calls begin="1980" end="1984" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="1994" end="2482">
          <condition xsi:type="expressions:Parenthesis" begin="1994" end="2030">
            <expression xsi:type="expressions:Operator" begin="1995" end="2029" operator="==">
              <operands xsi:type="expressions:CallSet" begin="1995" end="2023">
                <calls begin="1995" end="2023" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2007" end="2022" value="useDaoPackage"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="2025" end="2029" value="no"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2035" end="2039" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="2041" end="2066">
            <expression xsi:type="expressions:CallSet" begin="2041" end="2066">
              <calls begin="2041" end="2048" name="package" prefix=""/>
              <calls begin="2049" end="2066" name="getCompleteName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2068" end="2070" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="2082" end="2082" value=""/>
          <elseStatements xsi:type="statements:If" begin="2091" end="2475">
            <condition xsi:type="expressions:Parenthesis" begin="2091" end="2144">
              <expression xsi:type="expressions:Operator" begin="2092" end="2143" operator="==">
                <operands xsi:type="expressions:CallSet" begin="2092" end="2133">
                  <calls begin="2092" end="2133" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="2104" end="2132" value="use.functional.disposition"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="2137" end="2143" value="true"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2149" end="2153" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="2155" end="2166">
              <expression xsi:type="expressions:CallSet" begin="2155" end="2166">
                <calls begin="2155" end="2166" name="baseImports" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2168" end="2169" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="2171" end="2182">
              <expression xsi:type="expressions:CallSet" begin="2171" end="2182">
                <calls begin="2171" end="2182" name="projectName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2184" end="2185" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="2187" end="2209">
              <expression xsi:type="expressions:CallSet" begin="2187" end="2209">
                <calls begin="2187" end="2194" name="package" prefix=""/>
                <calls begin="2195" end="2209" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="2213" end="2243">
              <expression xsi:type="expressions:CallSet" begin="2213" end="2243">
                <calls begin="2213" end="2243" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2229" end="2242" value="dao.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Feature" begin="2247" end="2281">
              <expression xsi:type="expressions:CallSet" begin="2247" end="2281">
                <calls begin="2247" end="2281" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2263" end="2280" value="dao.api.package"/>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Comment" begin="2287" end="2296" value=" dao.api "/>
            <thenStatements xsi:type="statements:Text" begin="2300" end="2302" value="&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="2318" end="2322" value="    "/>
            <elseStatements xsi:type="statements:Feature" begin="2324" end="2335">
              <expression xsi:type="expressions:CallSet" begin="2324" end="2335">
                <calls begin="2324" end="2335" name="baseImports" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="2337" end="2338" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="2340" end="2351">
              <expression xsi:type="expressions:CallSet" begin="2340" end="2351">
                <calls begin="2340" end="2351" name="projectName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="2355" end="2385">
              <expression xsi:type="expressions:CallSet" begin="2355" end="2385">
                <calls begin="2355" end="2385" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2371" end="2384" value="dao.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="2387" end="2388" value="."/>
            <elseStatements xsi:type="statements:Feature" begin="2390" end="2412">
              <expression xsi:type="expressions:CallSet" begin="2390" end="2412">
                <calls begin="2390" end="2397" name="package" prefix=""/>
                <calls begin="2398" end="2412" name="normalizedName" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Feature" begin="2416" end="2450">
              <expression xsi:type="expressions:CallSet" begin="2416" end="2450">
                <calls begin="2416" end="2450" name="insertInPackage" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2432" end="2449" value="dao.api.package"/>
                </calls>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Comment" begin="2456" end="2465" value=" dao.api "/>
            <elseStatements xsi:type="statements:Text" begin="2469" end="2471" value="&#xD;&#xA;"/>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="2549" end="2593">
        <descriptor begin="2500" end="2545" name="daoInterfaceQualifiedName" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2551" end="2570">
          <expression xsi:type="expressions:CallSet" begin="2551" end="2570">
            <calls begin="2551" end="2570" name="daoInterfacePackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2572" end="2573" value="."/>
        <statements xsi:type="statements:Feature" begin="2575" end="2591">
          <expression xsi:type="expressions:CallSet" begin="2575" end="2591">
            <calls begin="2575" end="2591" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="2653" end="2871">
        <descriptor begin="2606" end="2649" name="testPackage" type="Model">
          <file/>
          <post xsi:type="expressions:CallSet" begin="2644" end="2648">
            <calls begin="2644" end="2648" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="2658" end="2866">
          <condition xsi:type="expressions:Parenthesis" begin="2658" end="2694">
            <expression xsi:type="expressions:Operator" begin="2659" end="2693" operator="==">
              <operands xsi:type="expressions:CallSet" begin="2659" end="2687">
                <calls begin="2659" end="2687" name="getProperty" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2671" end="2686" value="useDaoPackage"/>
                </calls>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="2689" end="2693" value="no"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="2699" end="2703" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="2705" end="2722">
            <expression xsi:type="expressions:CallSet" begin="2705" end="2722">
              <calls begin="2705" end="2722" name="getCompleteName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2724" end="2726" value="&#xD;&#xA;"/>
          <elseStatements xsi:type="statements:Text" begin="2738" end="2742" value="    "/>
          <elseStatements xsi:type="statements:Feature" begin="2744" end="2755">
            <expression xsi:type="expressions:CallSet" begin="2744" end="2755">
              <calls begin="2744" end="2755" name="baseImports" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Text" begin="2757" end="2758" value="."/>
          <elseStatements xsi:type="statements:Feature" begin="2760" end="2771">
            <expression xsi:type="expressions:CallSet" begin="2760" end="2771">
              <calls begin="2760" end="2771" name="projectName" prefix=""/>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Feature" begin="2775" end="2805">
            <expression xsi:type="expressions:CallSet" begin="2775" end="2805">
              <calls begin="2775" end="2805" name="insertInPackage" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2791" end="2804" value="dao.package"/>
              </calls>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Feature" begin="2809" end="2844">
            <expression xsi:type="expressions:CallSet" begin="2809" end="2844">
              <calls begin="2809" end="2844" name="insertInPackage" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2825" end="2843" value="dao.test.package"/>
              </calls>
            </expression>
          </elseStatements>
          <elseStatements xsi:type="statements:Comment" begin="2850" end="2860" value=" dao.test "/>
          <elseStatements xsi:type="statements:Text" begin="2864" end="2866" value="&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="2925" end="2990">
        <descriptor begin="2884" end="2921" name="daoFactoryPackage" type="Model">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="2927" end="2938">
          <expression xsi:type="expressions:CallSet" begin="2927" end="2938">
            <calls begin="2927" end="2938" name="baseImports" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2940" end="2941" value="."/>
        <statements xsi:type="statements:Feature" begin="2943" end="2954">
          <expression xsi:type="expressions:CallSet" begin="2943" end="2954">
            <calls begin="2943" end="2954" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="2958" end="2988">
          <expression xsi:type="expressions:CallSet" begin="2958" end="2988">
            <calls begin="2958" end="2988" name="insertInPackage" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="2974" end="2987" value="dao.package"/>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3059" end="3095">
        <descriptor begin="3016" end="3055" name="daoFactoryClassName" type="Model">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3061" end="3083">
          <expression xsi:type="expressions:CallSet" begin="3061" end="3083">
            <calls begin="3061" end="3072" name="projectName" prefix=""/>
            <calls begin="3073" end="3083" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3085" end="3095" value="DaoFactory"/>
      </scripts>
      <scripts begin="3160" end="3205">
        <descriptor begin="3108" end="3156" name="daoFactoryQualifiedClassName" type="Model">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3162" end="3179">
          <expression xsi:type="expressions:CallSet" begin="3162" end="3179">
            <calls begin="3162" end="3179" name="daoFactoryPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3181" end="3182" value="."/>
        <statements xsi:type="statements:Feature" begin="3184" end="3203">
          <expression xsi:type="expressions:CallSet" begin="3184" end="3203">
            <calls begin="3184" end="3203" name="daoFactoryClassName" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3255" end="3299">
        <descriptor begin="3218" end="3251" name="utilPackage" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3257" end="3268">
          <expression xsi:type="expressions:CallSet" begin="3257" end="3268">
            <calls begin="3257" end="3268" name="baseImports" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3270" end="3271" value="."/>
        <statements xsi:type="statements:Feature" begin="3273" end="3284">
          <expression xsi:type="expressions:CallSet" begin="3273" end="3284">
            <calls begin="3273" end="3284" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3286" end="3299" value=".fwk.dao.jdbc"/>
      </scripts>
      <scripts begin="3356" end="3459">
        <descriptor begin="3312" end="3352" name="findByPKItfSignature" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3358" end="3362">
          <expression xsi:type="expressions:CallSet" begin="3358" end="3362">
            <calls begin="3358" end="3362" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3364" end="3365" value=" "/>
        <statements xsi:type="statements:Feature" begin="3367" end="3385">
          <expression xsi:type="expressions:CallSet" begin="3367" end="3385">
            <calls begin="3367" end="3385" name="findByPKMethodName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3387" end="3388" value="("/>
        <statements xsi:type="statements:Feature" begin="3390" end="3407">
          <expression xsi:type="expressions:CallSet" begin="3390" end="3407">
            <calls begin="3390" end="3407" name="getPKJavaTypeName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3409" end="3414" value=" some"/>
        <statements xsi:type="statements:Feature" begin="3416" end="3436">
          <expression xsi:type="expressions:CallSet" begin="3416" end="3436">
            <calls begin="3416" end="3425" name="getPKName" prefix=""/>
            <calls begin="3426" end="3436" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3438" end="3459" value=") throws DaoException"/>
      </scripts>
      <scripts begin="3513" end="3622">
        <descriptor begin="3472" end="3509" name="findByPKSignature" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3515" end="3519">
          <expression xsi:type="expressions:CallSet" begin="3515" end="3519">
            <calls begin="3515" end="3519" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3521" end="3522" value=" "/>
        <statements xsi:type="statements:Feature" begin="3524" end="3542">
          <expression xsi:type="expressions:CallSet" begin="3524" end="3542">
            <calls begin="3524" end="3542" name="findByPKMethodName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3544" end="3551" value="(final "/>
        <statements xsi:type="statements:Feature" begin="3553" end="3570">
          <expression xsi:type="expressions:CallSet" begin="3553" end="3570">
            <calls begin="3553" end="3570" name="getPKJavaTypeName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3572" end="3577" value=" some"/>
        <statements xsi:type="statements:Feature" begin="3579" end="3599">
          <expression xsi:type="expressions:CallSet" begin="3579" end="3599">
            <calls begin="3579" end="3588" name="getPKName" prefix=""/>
            <calls begin="3589" end="3599" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3601" end="3622" value=") throws DaoException"/>
      </scripts>
      <scripts begin="3677" end="3715">
        <descriptor begin="3635" end="3673" name="findByPKMethodName" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3677" end="3681" value="find"/>
        <statements xsi:type="statements:Feature" begin="3683" end="3687">
          <expression xsi:type="expressions:CallSet" begin="3683" end="3687">
            <calls begin="3683" end="3687" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3689" end="3691" value="By"/>
        <statements xsi:type="statements:Feature" begin="3693" end="3713">
          <expression xsi:type="expressions:CallSet" begin="3693" end="3713">
            <calls begin="3693" end="3702" name="getPKName" prefix=""/>
            <calls begin="3703" end="3713" name="toU1Case" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3772" end="3840">
        <descriptor begin="3728" end="3768" name="importDaoException" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3772" end="3779" value="import "/>
        <statements xsi:type="statements:Feature" begin="3781" end="3816">
          <expression xsi:type="expressions:CallSet" begin="3781" end="3816">
            <calls begin="3781" end="3816" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3793" end="3815" value="daoException.package"/>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3818" end="3819" value="."/>
        <statements xsi:type="statements:Feature" begin="3821" end="3837">
          <expression xsi:type="expressions:CallSet" begin="3821" end="3837">
            <calls begin="3821" end="3837" name="daoExceptionName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3839" end="3840" value=";"/>
      </scripts>
      <scripts begin="3895" end="3931">
        <descriptor begin="3853" end="3891" name="daoExceptionName" type="Element">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3897" end="3929">
          <expression xsi:type="expressions:CallSet" begin="3897" end="3929">
            <calls begin="3897" end="3929" name="getProperty" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3909" end="3928" value="daoException.name"/>
            </calls>
          </expression>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.api.dao-default-dao.properties" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.0" beginTag="&lt;%" endTag="%>">
      <scripts begin="1000" end="1350">
        <descriptor begin="912" end="996" name="generateProperties" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="959" end="978">
              <expression xsi:type="expressions:CallSet" begin="959" end="978">
                <calls begin="959" end="978" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="980" end="995" value="/dao.properties"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1000" end="1116" value="# Config file for DAO implementation mapping.&#xD;&#xA;# Generate it only once and fill it with real implementation class.&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1122" end="1345">
          <iterator xsi:type="expressions:Parenthesis" begin="1122" end="1148">
            <expression xsi:type="expressions:CallSet" begin="1123" end="1147">
              <calls begin="1123" end="1147" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1139" end="1146" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1153" end="1153" value=""/>
          <statements xsi:type="statements:If" begin="1162" end="1338">
            <condition xsi:type="expressions:Parenthesis" begin="1162" end="1181">
              <expression xsi:type="expressions:Operator" begin="1163" end="1180" operator="||">
                <operands xsi:type="expressions:CallSet" begin="1163" end="1171">
                  <calls begin="1163" end="1171" name="isEntity" prefix=""/>
                </operands>
                <operands xsi:type="expressions:CallSet" begin="1175" end="1180">
                  <calls begin="1175" end="1180" name="isDao" prefix=""/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1186" end="1188" value="# "/>
            <thenStatements xsi:type="statements:Feature" begin="1190" end="1203">
              <expression xsi:type="expressions:CallSet" begin="1190" end="1203">
                <calls begin="1190" end="1203" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1205" end="1206" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="1208" end="1230">
              <expression xsi:type="expressions:CallSet" begin="1208" end="1230">
                <calls begin="1208" end="1215" name="package" prefix=""/>
                <calls begin="1216" end="1230" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1232" end="1234" value="::"/>
            <thenStatements xsi:type="statements:Feature" begin="1236" end="1240">
              <expression xsi:type="expressions:CallSet" begin="1236" end="1240">
                <calls begin="1236" end="1240" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1242" end="1244" value="&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:Feature" begin="1246" end="1271">
              <expression xsi:type="expressions:CallSet" begin="1246" end="1271">
                <calls begin="1246" end="1271" name="daoInterfaceQualifiedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1273" end="1278" value="=&#xD;&#xA;# "/>
            <thenStatements xsi:type="statements:Feature" begin="1280" end="1291">
              <expression xsi:type="expressions:CallSet" begin="1280" end="1291">
                <calls begin="1280" end="1291" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1293" end="1294" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="1296" end="1318">
              <expression xsi:type="expressions:CallSet" begin="1296" end="1318">
                <calls begin="1296" end="1303" name="package" prefix=""/>
                <calls begin="1304" end="1318" name="normalizedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1320" end="1322" value="::"/>
            <thenStatements xsi:type="statements:Feature" begin="1324" end="1328">
              <expression xsi:type="expressions:CallSet" begin="1324" end="1328">
                <calls begin="1324" end="1328" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1330" end="1334" value="&#xD;&#xA;&#xD;&#xA;"/>
          </statements>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.api.dao-factory" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.0" beginTag="&lt;%" endTag="%>">
      <scripts begin="1046" end="1137">
        <descriptor begin="1010" end="1042" name="fullFilePath" type="Model">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1048" end="1062">
          <expression xsi:type="expressions:CallSet" begin="1048" end="1062">
            <calls begin="1048" end="1062" name="pathToMainJava" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1064" end="1065" value="/"/>
        <statements xsi:type="statements:Feature" begin="1067" end="1093">
          <expression xsi:type="expressions:CallSet" begin="1067" end="1093">
            <calls begin="1067" end="1084" name="daoFactoryPackage" prefix=""/>
            <calls begin="1085" end="1093" name="toPath" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1095" end="1096" value="/"/>
        <statements xsi:type="statements:Feature" begin="1098" end="1120">
          <expression xsi:type="expressions:CallSet" begin="1098" end="1120">
            <calls begin="1098" end="1109" name="projectName" prefix=""/>
            <calls begin="1110" end="1120" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1122" end="1137" value="DaoFactory.java"/>
      </scripts>
      <scripts begin="1253" end="4275">
        <descriptor begin="1150" end="1202" name="generate" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="1187" end="1199">
              <expression xsi:type="expressions:CallSet" begin="1187" end="1199">
                <calls begin="1187" end="1199" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1253" end="1261" value="package "/>
        <statements xsi:type="statements:Feature" begin="1263" end="1280">
          <expression xsi:type="expressions:CallSet" begin="1263" end="1280">
            <calls begin="1263" end="1280" name="daoFactoryPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1282" end="1367" value=";&#xD;&#xA;&#xD;&#xA;import java.util.MissingResourceException;&#xD;&#xA;import java.util.ResourceBundle;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1369" end="1387">
          <expression xsi:type="expressions:CallSet" begin="1369" end="1387">
            <calls begin="1369" end="1387" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1389" end="1391" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1397" end="1554">
          <iterator xsi:type="expressions:Parenthesis" begin="1397" end="1439">
            <expression xsi:type="expressions:CallSet" begin="1398" end="1438">
              <calls begin="1398" end="1419" name="eAllContents" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1411" end="1418" value="Class"/>
                <filter xsi:type="expressions:Operator" begin="1420" end="1437" operator="||">
                  <operands xsi:type="expressions:CallSet" begin="1420" end="1428">
                    <calls begin="1420" end="1428" name="isEntity" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:CallSet" begin="1432" end="1437">
                    <calls begin="1432" end="1437" name="isDao" prefix=""/>
                  </operands>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:If" begin="1447" end="1549">
            <condition xsi:type="expressions:Parenthesis" begin="1447" end="1479">
              <expression xsi:type="expressions:Operator" begin="1448" end="1478" operator="==">
                <operands xsi:type="expressions:CallSet" begin="1448" end="1470">
                  <calls begin="1448" end="1470" name="nGet" prefix="">
                    <arguments xsi:type="expressions:Operator" begin="1453" end="1469" operator="+">
                      <operands xsi:type="expressions:StringLiteral" begin="1453" end="1462" value="import."/>
                      <operands xsi:type="expressions:CallSet" begin="1465" end="1469">
                        <calls begin="1465" end="1469" name="name" prefix=""/>
                      </operands>
                    </arguments>
                  </calls>
                </operands>
                <operands xsi:type="expressions:NullLiteral" begin="1474" end="1478"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Feature" begin="1486" end="1508">
              <expression xsi:type="expressions:CallSet" begin="1486" end="1508">
                <calls begin="1486" end="1508" name="nPut" prefix="">
                  <arguments xsi:type="expressions:Operator" begin="1491" end="1507" operator="+">
                    <operands xsi:type="expressions:StringLiteral" begin="1491" end="1500" value="import."/>
                    <operands xsi:type="expressions:CallSet" begin="1503" end="1507">
                      <calls begin="1503" end="1507" name="name" prefix=""/>
                    </operands>
                  </arguments>
                </calls>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1510" end="1517" value="import "/>
            <thenStatements xsi:type="statements:Feature" begin="1519" end="1544">
              <expression xsi:type="expressions:CallSet" begin="1519" end="1544">
                <calls begin="1519" end="1544" name="daoInterfaceQualifiedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1546" end="1549" value=";&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="1561" end="1728" value="&#xD;&#xA;/**&#xD;&#xA; * Factory in charge of creating the appropriate instances of DAO objects by&#xD;&#xA; * using the properties in the dao.properties resource bundle.&#xD;&#xA; */&#xD;&#xA;public class "/>
        <statements xsi:type="statements:Feature" begin="1730" end="1752">
          <expression xsi:type="expressions:CallSet" begin="1730" end="1752">
            <calls begin="1730" end="1741" name="projectName" prefix=""/>
            <calls begin="1742" end="1752" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1754" end="2402" value="DaoFactory {&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Constant that represents the name of the bundle with the DAO mappings.&#xD;&#xA;     */&#xD;&#xA;    private static final String FILE_DAO_MAPPING = &quot;dao&quot;;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * ResourceBundle that contains the mappings between interfaces and their&#xD;&#xA;     * implementations.&#xD;&#xA;     */&#xD;&#xA;    private static ResourceBundle bundle =&#xD;&#xA;        ResourceBundle.getBundle(FILE_DAO_MAPPING);&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Protected constructor to prevent instanciation. See&#xD;&#xA;     * &lt;a href=&quot;http://checkstyle.sourceforge.net/config_design.html&quot;>this&#xD;&#xA;     * CheckStyle site's page&lt;/a> for details (section DesignForExtension).&#xD;&#xA;     */&#xD;&#xA;    protected "/>
        <statements xsi:type="statements:Feature" begin="2404" end="2426">
          <expression xsi:type="expressions:CallSet" begin="2404" end="2426">
            <calls begin="2404" end="2415" name="projectName" prefix=""/>
            <calls begin="2416" end="2426" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2428" end="2541" value="DaoFactory() {&#xD;&#xA;        // prevents subclass calls&#xD;&#xA;        throw new UnsupportedOperationException();&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="2545" end="2605" value=" All Entity class and DAO customized class are gatherd here "/>
        <statements xsi:type="statements:For" begin="2617" end="4259">
          <iterator xsi:type="expressions:Parenthesis" begin="2617" end="2662">
            <expression xsi:type="expressions:CallSet" begin="2618" end="2661">
              <calls begin="2618" end="2642" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2634" end="2641" value="Class"/>
                <filter xsi:type="expressions:Operator" begin="2643" end="2660" operator="||">
                  <operands xsi:type="expressions:CallSet" begin="2643" end="2651">
                    <calls begin="2643" end="2651" name="isEntity" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:CallSet" begin="2655" end="2660">
                    <calls begin="2655" end="2660" name="isDao" prefix=""/>
                  </operands>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="2667" end="2760" value="    /**&#xD;&#xA;     * Factory method which provides the appropriate implementation for the&#xD;&#xA;     * "/>
          <statements xsi:type="statements:Feature" begin="2762" end="2778">
            <expression xsi:type="expressions:CallSet" begin="2762" end="2778">
              <calls begin="2762" end="2778" name="daoInterfaceName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2780" end="2867" value=" DAO interface.&#xD;&#xA;     * @return Returns an instance of a class that implements&#xD;&#xA;     * "/>
          <statements xsi:type="statements:Feature" begin="2869" end="2885">
            <expression xsi:type="expressions:CallSet" begin="2869" end="2885">
              <calls begin="2869" end="2885" name="daoInterfaceName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2887" end="3063" value=" as specified in the mapping bundle.&#xD;&#xA;     * @throws DaoException If the declared implementation cannot be found or&#xD;&#xA;     * cannot be instanciated.&#xD;&#xA;     */&#xD;&#xA;    public static "/>
          <statements xsi:type="statements:Feature" begin="3065" end="3083">
            <expression xsi:type="expressions:CallSet" begin="3065" end="3083">
              <calls begin="3065" end="3083" name="packageDeclaration" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Feature" begin="3087" end="3103">
            <expression xsi:type="expressions:CallSet" begin="3087" end="3103">
              <calls begin="3087" end="3103" name="daoInterfaceName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3105" end="3109" value=" get"/>
          <statements xsi:type="statements:Feature" begin="3111" end="3123">
            <expression xsi:type="expressions:CallSet" begin="3111" end="3123">
              <calls begin="3111" end="3123" name="getterPrefix" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Feature" begin="3127" end="3131">
            <expression xsi:type="expressions:CallSet" begin="3127" end="3131">
              <calls begin="3127" end="3131" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3133" end="3225" value="Dao() throws DaoException {&#xD;&#xA;        try {&#xD;&#xA;            String className = bundle.getString("/>
          <statements xsi:type="statements:Feature" begin="3227" end="3245">
            <expression xsi:type="expressions:CallSet" begin="3227" end="3245">
              <calls begin="3227" end="3245" name="packageDeclaration" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Feature" begin="3249" end="3265">
            <expression xsi:type="expressions:CallSet" begin="3249" end="3265">
              <calls begin="3249" end="3265" name="daoInterfaceName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3267" end="3376" value=".class.getName());&#xD;&#xA;&#xD;&#xA;            // Cast and instanciate with JDK 1.5 control&#xD;&#xA;            Class&lt; ? extends "/>
          <statements xsi:type="statements:Feature" begin="3378" end="3396">
            <expression xsi:type="expressions:CallSet" begin="3378" end="3396">
              <calls begin="3378" end="3396" name="packageDeclaration" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Feature" begin="3400" end="3416">
            <expression xsi:type="expressions:CallSet" begin="3400" end="3416">
              <calls begin="3400" end="3416" name="daoInterfaceName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3418" end="3485" value="> daoClass = &#xD;&#xA;                Class.forName(className).asSubclass("/>
          <statements xsi:type="statements:Feature" begin="3487" end="3505">
            <expression xsi:type="expressions:CallSet" begin="3487" end="3505">
              <calls begin="3487" end="3505" name="packageDeclaration" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Feature" begin="3509" end="3525">
            <expression xsi:type="expressions:CallSet" begin="3509" end="3525">
              <calls begin="3509" end="3525" name="daoInterfaceName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3527" end="3694" value=".class);&#xD;&#xA;            return daoClass.newInstance();&#xD;&#xA;        } catch (MissingResourceException e) {&#xD;&#xA;            throw new DaoException(&quot;Key &quot;&#xD;&#xA;                    + "/>
          <statements xsi:type="statements:Feature" begin="3696" end="3714">
            <expression xsi:type="expressions:CallSet" begin="3696" end="3714">
              <calls begin="3696" end="3714" name="packageDeclaration" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Feature" begin="3718" end="3734">
            <expression xsi:type="expressions:CallSet" begin="3718" end="3734">
              <calls begin="3718" end="3734" name="daoInterfaceName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="3736" end="3974" value=".class.getName()&#xD;&#xA;                    + &quot; not found in &quot; + FILE_DAO_MAPPING + &quot;.properties&quot;, e);&#xD;&#xA;        } catch (ClassNotFoundException e) {&#xD;&#xA;            throw new DaoException(&quot;DAO implementation not found for &quot;&#xD;&#xA;                    + "/>
          <statements xsi:type="statements:Feature" begin="3976" end="3994">
            <expression xsi:type="expressions:CallSet" begin="3976" end="3994">
              <calls begin="3976" end="3994" name="packageDeclaration" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Feature" begin="3998" end="4014">
            <expression xsi:type="expressions:CallSet" begin="3998" end="4014">
              <calls begin="3998" end="4014" name="daoInterfaceName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="4016" end="4259" value=".class.getName(),&#xD;&#xA;                    e);&#xD;&#xA;        } catch (InstantiationException e) {&#xD;&#xA;            throw new DaoException(e);&#xD;&#xA;        } catch (IllegalAccessException e) {&#xD;&#xA;            throw new DaoException(e);&#xD;&#xA;        }   &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="4266" end="4267" value="}"/>
        <statements xsi:type="statements:Feature" begin="4269" end="4273">
          <expression xsi:type="expressions:StringLiteral" begin="4269" end="4273" value="&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="4415" end="4487">
        <descriptor begin="4288" end="4411" name="packageDeclaration" type="Class" description="write explicit package declaration if many entities have the same name">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="4420" end="4482">
          <condition xsi:type="expressions:Parenthesis" begin="4420" end="4455">
            <expression xsi:type="expressions:Operator" begin="4421" end="4454" operator="!=">
              <operands xsi:type="expressions:CallSet" begin="4421" end="4446">
                <calls begin="4421" end="4446" name="nGet" prefix="">
                  <arguments xsi:type="expressions:Operator" begin="4426" end="4445" operator="+">
                    <operands xsi:type="expressions:StringLiteral" begin="4426" end="4438" value="daogetter."/>
                    <operands xsi:type="expressions:CallSet" begin="4441" end="4445">
                      <calls begin="4441" end="4445" name="name" prefix=""/>
                    </operands>
                  </arguments>
                </calls>
              </operands>
              <operands xsi:type="expressions:NullLiteral" begin="4450" end="4454"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="4460" end="4479">
            <expression xsi:type="expressions:CallSet" begin="4460" end="4479">
              <calls begin="4460" end="4479" name="daoInterfacePackage" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="4481" end="4482" value="."/>
        </statements>
      </scripts>
      <scripts begin="4605" end="4690">
        <descriptor begin="4500" end="4601" name="getterPrefix" type="Class" description="manage getter name if many entities have the same name">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="4610" end="4685">
          <condition xsi:type="expressions:Parenthesis" begin="4610" end="4645">
            <expression xsi:type="expressions:Operator" begin="4611" end="4644" operator="!=">
              <operands xsi:type="expressions:CallSet" begin="4611" end="4636">
                <calls begin="4611" end="4636" name="nGet" prefix="">
                  <arguments xsi:type="expressions:Operator" begin="4616" end="4635" operator="+">
                    <operands xsi:type="expressions:StringLiteral" begin="4616" end="4628" value="daogetter."/>
                    <operands xsi:type="expressions:CallSet" begin="4631" end="4635">
                      <calls begin="4631" end="4635" name="name" prefix=""/>
                    </operands>
                  </arguments>
                </calls>
              </operands>
              <operands xsi:type="expressions:NullLiteral" begin="4640" end="4644"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="4650" end="4683">
            <expression xsi:type="expressions:CallSet" begin="4650" end="4683">
              <calls begin="4650" end="4657" name="package" prefix=""/>
              <calls begin="4658" end="4672" name="normalizedName" prefix=""/>
              <calls begin="4673" end="4683" name="firstUpper" prefix=""/>
            </expression>
          </thenStatements>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.api.dao-interface-customized" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.0" beginTag="&lt;%" endTag="%>">
      <scripts begin="918" end="1035">
        <descriptor begin="882" end="914" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="923" end="1030">
          <condition xsi:type="expressions:Parenthesis" begin="923" end="945">
            <expression xsi:type="expressions:CallSet" begin="924" end="944">
              <calls begin="924" end="944" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="938" end="943" value="Dao"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="953" end="967">
            <expression xsi:type="expressions:CallSet" begin="953" end="967">
              <calls begin="953" end="967" name="pathToMainJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="969" end="970" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="972" end="1000">
            <expression xsi:type="expressions:CallSet" begin="972" end="1000">
              <calls begin="972" end="991" name="daoInterfacePackage" prefix=""/>
              <calls begin="992" end="1000" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1002" end="1003" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1005" end="1021">
            <expression xsi:type="expressions:CallSet" begin="1005" end="1021">
              <calls begin="1005" end="1021" name="daoInterfaceName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1023" end="1030" value=".java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1107" end="2575">
        <descriptor begin="1048" end="1103" name="generateDao" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1088" end="1100">
              <expression xsi:type="expressions:CallSet" begin="1088" end="1100">
                <calls begin="1088" end="1100" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1107" end="1115" value="package "/>
        <statements xsi:type="statements:Feature" begin="1117" end="1136">
          <expression xsi:type="expressions:CallSet" begin="1117" end="1136">
            <calls begin="1117" end="1136" name="daoInterfacePackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1138" end="1146" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1148" end="1161">
          <expression xsi:type="expressions:CallSet" begin="1148" end="1161">
            <calls begin="1148" end="1161" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1163" end="1202" value=" for import&#xD;&#xA;import java.util.List;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1204" end="1222">
          <expression xsi:type="expressions:CallSet" begin="1204" end="1222">
            <calls begin="1204" end="1222" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1224" end="1226" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1232" end="1311">
          <iterator xsi:type="expressions:Parenthesis" begin="1232" end="1273">
            <expression xsi:type="expressions:CallSet" begin="1233" end="1272">
              <calls begin="1233" end="1249" name="clientDependency" prefix=""/>
              <calls begin="1250" end="1256" name="target" prefix=""/>
              <calls begin="1257" end="1272" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1264" end="1271" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1278" end="1285" value="import "/>
          <statements xsi:type="statements:Feature" begin="1287" end="1306">
            <expression xsi:type="expressions:CallSet" begin="1287" end="1306">
              <calls begin="1287" end="1306" name="entityQualifiedName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1308" end="1311" value=";&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="1318" end="1323" value="&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1325" end="1336">
          <expression xsi:type="expressions:CallSet" begin="1325" end="1336">
            <calls begin="1325" end="1336" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1338" end="1410" value=" for import&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA; * This class provides the data access layer to the "/>
        <statements xsi:type="statements:Feature" begin="1412" end="1416">
          <expression xsi:type="expressions:CallSet" begin="1412" end="1416">
            <calls begin="1412" end="1416" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1418" end="1536" value=" entity class.&lt;br/>&#xD;&#xA; * This is the interface which represents the contract of the DAO access.&#xD;&#xA; */&#xD;&#xA;public interface "/>
        <statements xsi:type="statements:Feature" begin="1538" end="1554">
          <expression xsi:type="expressions:CallSet" begin="1538" end="1554">
            <calls begin="1538" end="1554" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1556" end="1562" value=" {&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1564" end="1587">
          <expression xsi:type="expressions:CallSet" begin="1564" end="1587">
            <calls begin="1564" end="1578" name="ownedOperation" prefix=""/>
            <calls begin="1579" end="1587" name="generate" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1589" end="1591" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1597" end="2559">
          <iterator xsi:type="expressions:Parenthesis" begin="1597" end="1638">
            <expression xsi:type="expressions:CallSet" begin="1598" end="1637">
              <calls begin="1598" end="1614" name="clientDependency" prefix=""/>
              <calls begin="1615" end="1621" name="target" prefix=""/>
              <calls begin="1622" end="1637" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1629" end="1636" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1643" end="1679" value="&#xD;&#xA;    // Data Access Operations for "/>
          <statements xsi:type="statements:Feature" begin="1681" end="1685">
            <expression xsi:type="expressions:CallSet" begin="1681" end="1685">
              <calls begin="1681" end="1685" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1687" end="1749" value="&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Creates a new element.&#xD;&#xA;     * @param "/>
          <statements xsi:type="statements:Feature" begin="1751" end="1766">
            <expression xsi:type="expressions:CallSet" begin="1751" end="1766">
              <calls begin="1751" end="1755" name="name" prefix=""/>
              <calls begin="1756" end="1766" name="toL1Case" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1768" end="1820" value=" Element to create.&#xD;&#xA;     */&#xD;&#xA;    public void create"/>
          <statements xsi:type="statements:Feature" begin="1822" end="1826">
            <expression xsi:type="expressions:CallSet" begin="1822" end="1826">
              <calls begin="1822" end="1826" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1828" end="1829" value="("/>
          <statements xsi:type="statements:Feature" begin="1831" end="1835">
            <expression xsi:type="expressions:CallSet" begin="1831" end="1835">
              <calls begin="1831" end="1835" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1837" end="1838" value=" "/>
          <statements xsi:type="statements:Feature" begin="1840" end="1855">
            <expression xsi:type="expressions:CallSet" begin="1840" end="1855">
              <calls begin="1840" end="1844" name="name" prefix=""/>
              <calls begin="1845" end="1855" name="toL1Case" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1857" end="1943" value=") throws DaoException;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Updates an existing element.&#xD;&#xA;     * @param "/>
          <statements xsi:type="statements:Feature" begin="1945" end="1960">
            <expression xsi:type="expressions:CallSet" begin="1945" end="1960">
              <calls begin="1945" end="1949" name="name" prefix=""/>
              <calls begin="1950" end="1960" name="toL1Case" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="1962" end="2055" value=" Element to update. If the element has an id, it may use it.&#xD;&#xA;     */&#xD;&#xA;    public void update"/>
          <statements xsi:type="statements:Feature" begin="2057" end="2061">
            <expression xsi:type="expressions:CallSet" begin="2057" end="2061">
              <calls begin="2057" end="2061" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2063" end="2064" value="("/>
          <statements xsi:type="statements:Feature" begin="2066" end="2070">
            <expression xsi:type="expressions:CallSet" begin="2066" end="2070">
              <calls begin="2066" end="2070" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2072" end="2073" value=" "/>
          <statements xsi:type="statements:Feature" begin="2075" end="2090">
            <expression xsi:type="expressions:CallSet" begin="2075" end="2090">
              <calls begin="2075" end="2079" name="name" prefix=""/>
              <calls begin="2080" end="2090" name="toL1Case" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2092" end="2236" value=") throws DaoException;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Deletes an element.&#xD;&#xA;     * Only id can be used to find which element must be deleted.&#xD;&#xA;     * @param "/>
          <statements xsi:type="statements:Feature" begin="2238" end="2253">
            <expression xsi:type="expressions:CallSet" begin="2238" end="2253">
              <calls begin="2238" end="2242" name="name" prefix=""/>
              <calls begin="2243" end="2253" name="toL1Case" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2255" end="2319" value=" Element which will be delete. &#xD;&#xA;     */&#xD;&#xA;    public void delete"/>
          <statements xsi:type="statements:Feature" begin="2321" end="2325">
            <expression xsi:type="expressions:CallSet" begin="2321" end="2325">
              <calls begin="2321" end="2325" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2327" end="2328" value="("/>
          <statements xsi:type="statements:Feature" begin="2330" end="2334">
            <expression xsi:type="expressions:CallSet" begin="2330" end="2334">
              <calls begin="2330" end="2334" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2336" end="2337" value=" "/>
          <statements xsi:type="statements:Feature" begin="2339" end="2354">
            <expression xsi:type="expressions:CallSet" begin="2339" end="2354">
              <calls begin="2339" end="2343" name="name" prefix=""/>
              <calls begin="2344" end="2354" name="toL1Case" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2356" end="2506" value=") throws DaoException;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Finds all elements.&#xD;&#xA;     * @return A list with all elements, without any filter.&#xD;&#xA;     */&#xD;&#xA;    public List&lt;"/>
          <statements xsi:type="statements:Feature" begin="2508" end="2512">
            <expression xsi:type="expressions:CallSet" begin="2508" end="2512">
              <calls begin="2508" end="2512" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2514" end="2523" value="> findAll"/>
          <statements xsi:type="statements:Feature" begin="2525" end="2529">
            <expression xsi:type="expressions:CallSet" begin="2525" end="2529">
              <calls begin="2525" end="2529" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2531" end="2559" value="s() throws DaoException;&#xD;&#xA;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2566" end="2567" value="}"/>
        <statements xsi:type="statements:Feature" begin="2569" end="2573">
          <expression xsi:type="expressions:StringLiteral" begin="2569" end="2573" value="&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="2624" end="2834">
        <descriptor begin="2588" end="2620" name="generate" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="2629" end="2671">
          <condition xsi:type="expressions:Parenthesis" begin="2629" end="2654">
            <expression xsi:type="expressions:CallSet" begin="2630" end="2653">
              <calls begin="2630" end="2653" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2644" end="2652" value="create"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="2661" end="2667">
            <expression xsi:type="expressions:CallSet" begin="2661" end="2667">
              <calls begin="2661" end="2667" name="create" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2669" end="2671" value="&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:If" begin="2683" end="2725">
          <condition xsi:type="expressions:Parenthesis" begin="2683" end="2708">
            <expression xsi:type="expressions:CallSet" begin="2684" end="2707">
              <calls begin="2684" end="2707" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2698" end="2706" value="update"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="2715" end="2721">
            <expression xsi:type="expressions:CallSet" begin="2715" end="2721">
              <calls begin="2715" end="2721" name="update" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2723" end="2725" value="&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:If" begin="2737" end="2779">
          <condition xsi:type="expressions:Parenthesis" begin="2737" end="2762">
            <expression xsi:type="expressions:CallSet" begin="2738" end="2761">
              <calls begin="2738" end="2761" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2752" end="2760" value="delete"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="2769" end="2775">
            <expression xsi:type="expressions:CallSet" begin="2769" end="2775">
              <calls begin="2769" end="2775" name="delete" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2777" end="2779" value="&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:If" begin="2791" end="2829">
          <condition xsi:type="expressions:Parenthesis" begin="2791" end="2814">
            <expression xsi:type="expressions:CallSet" begin="2792" end="2813">
              <calls begin="2792" end="2813" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2806" end="2812" value="find"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="2821" end="2825">
            <expression xsi:type="expressions:CallSet" begin="2821" end="2825">
              <calls begin="2821" end="2825" name="find" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="2827" end="2829" value="&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="2881" end="3063">
        <descriptor begin="2847" end="2877" name="create" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="2881" end="2935" value="    /**&#xD;&#xA;     * Creates a new element.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="2937" end="2956">
          <expression xsi:type="expressions:CallSet" begin="2937" end="2956">
            <calls begin="2937" end="2951" name="ownedParameter" prefix=""/>
            <calls begin="2952" end="2956" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2958" end="3004" value=" Element to create.&#xD;&#xA;     */&#xD;&#xA;    public void "/>
        <statements xsi:type="statements:Feature" begin="3006" end="3010">
          <expression xsi:type="expressions:CallSet" begin="3006" end="3010">
            <calls begin="3006" end="3010" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3012" end="3013" value="("/>
        <statements xsi:type="statements:Feature" begin="3015" end="3033">
          <expression xsi:type="expressions:CallSet" begin="3015" end="3033">
            <calls begin="3015" end="3033" name="generateParameters" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3035" end="3063" value=") throws DaoException;&#xD;&#xA;    "/>
      </scripts>
      <scripts begin="3110" end="3339">
        <descriptor begin="3076" end="3106" name="update" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3110" end="3170" value="    /**&#xD;&#xA;     * Updates an existing element.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="3172" end="3191">
          <expression xsi:type="expressions:CallSet" begin="3172" end="3191">
            <calls begin="3172" end="3186" name="ownedParameter" prefix=""/>
            <calls begin="3187" end="3191" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3193" end="3280" value=" Element to update. If the element has an id, it may use it.&#xD;&#xA;     */&#xD;&#xA;    public void "/>
        <statements xsi:type="statements:Feature" begin="3282" end="3286">
          <expression xsi:type="expressions:CallSet" begin="3282" end="3286">
            <calls begin="3282" end="3286" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3288" end="3289" value="("/>
        <statements xsi:type="statements:Feature" begin="3291" end="3309">
          <expression xsi:type="expressions:CallSet" begin="3291" end="3309">
            <calls begin="3291" end="3309" name="generateParameters" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3311" end="3339" value=") throws DaoException;&#xD;&#xA;    "/>
      </scripts>
      <scripts begin="3386" end="3576">
        <descriptor begin="3352" end="3382" name="delete" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3386" end="3437" value="    /**&#xD;&#xA;     * Deletes an element.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="3439" end="3458">
          <expression xsi:type="expressions:CallSet" begin="3439" end="3458">
            <calls begin="3439" end="3453" name="ownedParameter" prefix=""/>
            <calls begin="3454" end="3458" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3460" end="3517" value=" Element which will be delete.&#xD;&#xA;     */&#xD;&#xA;    public void "/>
        <statements xsi:type="statements:Feature" begin="3519" end="3523">
          <expression xsi:type="expressions:CallSet" begin="3519" end="3523">
            <calls begin="3519" end="3523" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3525" end="3526" value="("/>
        <statements xsi:type="statements:Feature" begin="3528" end="3546">
          <expression xsi:type="expressions:CallSet" begin="3528" end="3546">
            <calls begin="3528" end="3546" name="generateParameters" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3548" end="3576" value=") throws DaoException;&#xD;&#xA;    "/>
      </scripts>
      <scripts begin="3625" end="3746">
        <descriptor begin="3589" end="3617" name="find" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3625" end="3629" value="    "/>
        <statements xsi:type="statements:Feature" begin="3631" end="3646">
          <expression xsi:type="expressions:CallSet" begin="3631" end="3646">
            <calls begin="3631" end="3646" name="generateJavadoc" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3648" end="3661" value="&#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="3663" end="3672">
          <expression xsi:type="expressions:CallSet" begin="3663" end="3672">
            <calls begin="3663" end="3667" name="type" prefix=""/>
            <calls begin="3668" end="3672" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="3676" end="3688">
          <expression xsi:type="expressions:CallSet" begin="3676" end="3688">
            <calls begin="3676" end="3680" name="type" prefix=""/>
            <calls begin="3681" end="3688" name="suffixe" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3690" end="3691" value=" "/>
        <statements xsi:type="statements:Feature" begin="3693" end="3697">
          <expression xsi:type="expressions:CallSet" begin="3693" end="3697">
            <calls begin="3693" end="3697" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3699" end="3700" value="("/>
        <statements xsi:type="statements:Feature" begin="3702" end="3720">
          <expression xsi:type="expressions:CallSet" begin="3702" end="3720">
            <calls begin="3702" end="3720" name="generateParameters" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3722" end="3746" value=") throws DaoException;&#xD;&#xA;"/>
      </scripts>
      <scripts begin="3797" end="3835">
        <descriptor begin="3759" end="3793" name="genDeclare" type="Parameter">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3799" end="3808">
          <expression xsi:type="expressions:CallSet" begin="3799" end="3808">
            <calls begin="3799" end="3803" name="type" prefix=""/>
            <calls begin="3804" end="3808" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Feature" begin="3812" end="3824">
          <expression xsi:type="expressions:CallSet" begin="3812" end="3824">
            <calls begin="3812" end="3816" name="type" prefix=""/>
            <calls begin="3817" end="3824" name="suffixe" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3826" end="3827" value=" "/>
        <statements xsi:type="statements:Feature" begin="3829" end="3833">
          <expression xsi:type="expressions:CallSet" begin="3829" end="3833">
            <calls begin="3829" end="3833" name="name" prefix=""/>
          </expression>
        </statements>
      </scripts>
      <scripts begin="3892" end="3892">
        <descriptor begin="3848" end="3874" name="suffixe" type="Type">
          <file/>
        </descriptor>
      </scripts>
      <scripts begin="3946" end="4043">
        <descriptor begin="3903" end="3942" name="suffixe" type="Class">
          <file/>
          <post xsi:type="expressions:CallSet" begin="3937" end="3941">
            <calls begin="3937" end="3941" name="trim" prefix=""/>
          </post>
        </descriptor>
        <statements xsi:type="statements:If" begin="3951" end="4038">
          <condition xsi:type="expressions:Parenthesis" begin="3951" end="3986">
            <expression xsi:type="expressions:CallSet" begin="3952" end="3985">
              <calls begin="3952" end="3985" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="3966" end="3984">
                  <calls begin="3966" end="3984" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="3978" end="3983" value="Dto"/>
                  </calls>
                </arguments>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3991" end="4000" value="    Dto&#xD;&#xA;"/>
          <elseIf>
            <condition xsi:type="expressions:Parenthesis" begin="4011" end="4021">
              <expression xsi:type="expressions:CallSet" begin="4012" end="4020">
                <calls begin="4012" end="4020" name="isEntity" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4026" end="4038" value="    Entity&#xD;&#xA;"/>
          </elseIf>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.api.dao-interface-direct" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.0" beginTag="&lt;%" endTag="%>">
      <scripts begin="1097" end="1202">
        <descriptor begin="1061" end="1093" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1102" end="1197">
          <condition xsi:type="expressions:Parenthesis" begin="1102" end="1112">
            <expression xsi:type="expressions:CallSet" begin="1103" end="1111">
              <calls begin="1103" end="1111" name="isEntity" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="1120" end="1134">
            <expression xsi:type="expressions:CallSet" begin="1120" end="1134">
              <calls begin="1120" end="1134" name="pathToMainJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1136" end="1137" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1139" end="1167">
            <expression xsi:type="expressions:CallSet" begin="1139" end="1167">
              <calls begin="1139" end="1158" name="daoInterfacePackage" prefix=""/>
              <calls begin="1159" end="1167" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1169" end="1170" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1172" end="1188">
            <expression xsi:type="expressions:CallSet" begin="1172" end="1188">
              <calls begin="1172" end="1188" name="daoInterfaceName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1190" end="1197" value=".java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1310" end="3555">
        <descriptor begin="1215" end="1270" name="generateDao" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1255" end="1267">
              <expression xsi:type="expressions:CallSet" begin="1255" end="1267">
                <calls begin="1255" end="1267" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1310" end="1318" value="package "/>
        <statements xsi:type="statements:Feature" begin="1320" end="1339">
          <expression xsi:type="expressions:CallSet" begin="1320" end="1339">
            <calls begin="1320" end="1339" name="daoInterfacePackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1341" end="1349" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1351" end="1364">
          <expression xsi:type="expressions:CallSet" begin="1351" end="1364">
            <calls begin="1351" end="1364" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1366" end="1411" value=" for import&#xD;&#xA;import java.util.Collection;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1413" end="1431">
          <expression xsi:type="expressions:CallSet" begin="1413" end="1431">
            <calls begin="1413" end="1431" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1433" end="1442" value="&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1444" end="1463">
          <expression xsi:type="expressions:CallSet" begin="1444" end="1463">
            <calls begin="1444" end="1463" name="entityQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1465" end="1473" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1475" end="1486">
          <expression xsi:type="expressions:CallSet" begin="1475" end="1486">
            <calls begin="1475" end="1486" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1488" end="1560" value=" for import&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA; * This class provides the data access layer to the "/>
        <statements xsi:type="statements:Feature" begin="1562" end="1566">
          <expression xsi:type="expressions:CallSet" begin="1562" end="1566">
            <calls begin="1562" end="1566" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1568" end="1686" value=" entity class.&lt;br/>&#xD;&#xA; * This is the interface which represents the contract of the DAO access.&#xD;&#xA; */&#xD;&#xA;public interface "/>
        <statements xsi:type="statements:Feature" begin="1688" end="1704">
          <expression xsi:type="expressions:CallSet" begin="1688" end="1704">
            <calls begin="1688" end="1704" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1706" end="1766" value=" {&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Creates a new element.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="1768" end="1783">
          <expression xsi:type="expressions:CallSet" begin="1768" end="1783">
            <calls begin="1768" end="1772" name="name" prefix=""/>
            <calls begin="1773" end="1783" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1785" end="1884" value=" Element to create.&#xD;&#xA;     * @throws DaoException If a Dao problem occurs.&#xD;&#xA;     */&#xD;&#xA;    void create"/>
        <statements xsi:type="statements:Feature" begin="1886" end="1890">
          <expression xsi:type="expressions:CallSet" begin="1886" end="1890">
            <calls begin="1886" end="1890" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1892" end="1893" value="("/>
        <statements xsi:type="statements:Feature" begin="1895" end="1899">
          <expression xsi:type="expressions:CallSet" begin="1895" end="1899">
            <calls begin="1895" end="1899" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1901" end="1902" value=" "/>
        <statements xsi:type="statements:Feature" begin="1904" end="1919">
          <expression xsi:type="expressions:CallSet" begin="1904" end="1919">
            <calls begin="1904" end="1908" name="name" prefix=""/>
            <calls begin="1909" end="1919" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1921" end="2007" value=") throws DaoException;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Updates an existing element.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="2009" end="2024">
          <expression xsi:type="expressions:CallSet" begin="2009" end="2024">
            <calls begin="2009" end="2013" name="name" prefix=""/>
            <calls begin="2014" end="2024" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2026" end="2185" value=" Element to update.&#xD;&#xA;     *            If the element has an id, it may use it.&#xD;&#xA;     * @throws DaoException If a Dao problem occurs.&#xD;&#xA;     */&#xD;&#xA;    void update"/>
        <statements xsi:type="statements:Feature" begin="2187" end="2191">
          <expression xsi:type="expressions:CallSet" begin="2187" end="2191">
            <calls begin="2187" end="2191" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2193" end="2194" value="("/>
        <statements xsi:type="statements:Feature" begin="2196" end="2200">
          <expression xsi:type="expressions:CallSet" begin="2196" end="2200">
            <calls begin="2196" end="2200" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2202" end="2203" value=" "/>
        <statements xsi:type="statements:Feature" begin="2205" end="2220">
          <expression xsi:type="expressions:CallSet" begin="2205" end="2220">
            <calls begin="2205" end="2209" name="name" prefix=""/>
            <calls begin="2210" end="2220" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2222" end="2366" value=") throws DaoException;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Deletes an element.&#xD;&#xA;     * Only id can be used to find which element must be deleted.&#xD;&#xA;     * @param "/>
        <statements xsi:type="statements:Feature" begin="2368" end="2383">
          <expression xsi:type="expressions:CallSet" begin="2368" end="2383">
            <calls begin="2368" end="2372" name="name" prefix=""/>
            <calls begin="2373" end="2383" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2385" end="2496" value=" Element which will be deleted.&#xD;&#xA;     * @throws DaoException If a Dao problem occurs.&#xD;&#xA;     */&#xD;&#xA;    void delete"/>
        <statements xsi:type="statements:Feature" begin="2498" end="2502">
          <expression xsi:type="expressions:CallSet" begin="2498" end="2502">
            <calls begin="2498" end="2502" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2504" end="2505" value="("/>
        <statements xsi:type="statements:Feature" begin="2507" end="2511">
          <expression xsi:type="expressions:CallSet" begin="2507" end="2511">
            <calls begin="2507" end="2511" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2513" end="2514" value=" "/>
        <statements xsi:type="statements:Feature" begin="2516" end="2531">
          <expression xsi:type="expressions:CallSet" begin="2516" end="2531">
            <calls begin="2516" end="2520" name="name" prefix=""/>
            <calls begin="2521" end="2531" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2533" end="2736" value=") throws DaoException;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Finds all elements.&#xD;&#xA;     * @return A list with all elements, without any filter.&#xD;&#xA;     * @throws DaoException If a Dao problem occurs.&#xD;&#xA;     */&#xD;&#xA;    Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="2738" end="2742">
          <expression xsi:type="expressions:CallSet" begin="2738" end="2742">
            <calls begin="2738" end="2742" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2744" end="2753" value="> findAll"/>
        <statements xsi:type="statements:Feature" begin="2755" end="2759">
          <expression xsi:type="expressions:CallSet" begin="2755" end="2759">
            <calls begin="2755" end="2759" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2761" end="2861" value="s() throws DaoException;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Finds one entity by its primary key.&#xD;&#xA;     * @param some"/>
        <statements xsi:type="statements:Feature" begin="2863" end="2883">
          <expression xsi:type="expressions:CallSet" begin="2863" end="2883">
            <calls begin="2863" end="2872" name="getPKName" prefix=""/>
            <calls begin="2873" end="2883" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2885" end="3009" value=" The PK of the entity&#xD;&#xA;     * @return The entity found.&#xD;&#xA;     * @throws DaoException If a Dao problem occurs.&#xD;&#xA;     */&#xD;&#xA;    "/>
        <statements xsi:type="statements:Feature" begin="3011" end="3031">
          <expression xsi:type="expressions:CallSet" begin="3011" end="3031">
            <calls begin="3011" end="3031" name="findByPKItfSignature" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3033" end="3038" value=";&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="3042" end="3083" value=" Generate additional methods declaration "/>
        <statements xsi:type="statements:For" begin="3095" end="3348">
          <iterator xsi:type="expressions:Parenthesis" begin="3095" end="3111">
            <expression xsi:type="expressions:CallSet" begin="3096" end="3110">
              <calls begin="3096" end="3110" name="ownedOperation" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3116" end="3116" value=""/>
          <statements xsi:type="statements:Comment" begin="3124" end="3164" value=" Generate methods with find stereotypes "/>
          <statements xsi:type="statements:Text" begin="3170" end="3170" value=""/>
          <statements xsi:type="statements:If" begin="3179" end="3341">
            <condition xsi:type="expressions:Parenthesis" begin="3179" end="3215">
              <expression xsi:type="expressions:CallSet" begin="3180" end="3214">
                <calls begin="3180" end="3214" name="hasStereotype" prefix="">
                  <arguments xsi:type="expressions:CallSet" begin="3194" end="3213">
                    <calls begin="3194" end="3213" name="getProperty" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="3206" end="3212" value="find"/>
                    </calls>
                  </arguments>
                </calls>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Feature" begin="3222" end="3237">
              <expression xsi:type="expressions:CallSet" begin="3222" end="3237">
                <calls begin="3222" end="3237" name="generateJavadoc" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3239" end="3245" value="&#xD;&#xA;    "/>
            <thenStatements xsi:type="statements:Feature" begin="3247" end="3277">
              <expression xsi:type="expressions:CallSet" begin="3247" end="3277">
                <calls begin="3247" end="3259" name="returnResult" prefix=""/>
                <calls begin="3260" end="3277" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3279" end="3280" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="3282" end="3286">
              <expression xsi:type="expressions:CallSet" begin="3282" end="3286">
                <calls begin="3282" end="3286" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3288" end="3289" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="3291" end="3309">
              <expression xsi:type="expressions:CallSet" begin="3291" end="3309">
                <calls begin="3291" end="3309" name="generateParameters" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3311" end="3337" value=") throws DaoException;&#xD;&#xA;&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Comment" begin="3357" end="3434" value=" N.B. It is mandatory to have identical lines for start and end user code !!!"/>
        <statements xsi:type="statements:Text" begin="3438" end="3446" value="&#xD;&#xA;    //"/>
        <statements xsi:type="statements:Feature" begin="3448" end="3461">
          <expression xsi:type="expressions:CallSet" begin="3448" end="3461">
            <calls begin="3448" end="3461" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3463" end="3500" value=" for technical dao access api&#xD;&#xA;    //"/>
        <statements xsi:type="statements:Feature" begin="3502" end="3513">
          <expression xsi:type="expressions:CallSet" begin="3502" end="3513">
            <calls begin="3502" end="3513" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3515" end="3547" value=" for technical dao access api&#xD;&#xA;}"/>
        <statements xsi:type="statements:Feature" begin="3549" end="3553">
          <expression xsi:type="expressions:StringLiteral" begin="3549" end="3553" value="&#xA;"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.jdbc.dao-jdbc-connection" imports="/0/@resources.17 /0/@resources.0 /0/@resources.18 /0/@resources.19 /0/@resources.20" beginTag="&lt;%" endTag="%>">
      <scripts begin="1074" end="1166">
        <descriptor begin="1038" end="1070" name="fullFilePath" type="Model">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="1076" end="1090">
          <expression xsi:type="expressions:CallSet" begin="1076" end="1090">
            <calls begin="1076" end="1090" name="pathToMainJava" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1092" end="1093" value="/"/>
        <statements xsi:type="statements:Feature" begin="1095" end="1115">
          <expression xsi:type="expressions:CallSet" begin="1095" end="1115">
            <calls begin="1095" end="1106" name="utilPackage" prefix=""/>
            <calls begin="1107" end="1115" name="toPath" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1117" end="1118" value="/"/>
        <statements xsi:type="statements:Feature" begin="1120" end="1144">
          <expression xsi:type="expressions:CallSet" begin="1120" end="1144">
            <calls begin="1120" end="1131" name="projectName" prefix=""/>
            <calls begin="1132" end="1144" name="firstUpper" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1146" end="1166" value="ConnectionUtils.java"/>
      </scripts>
      <scripts begin="1238" end="6200">
        <descriptor begin="1179" end="1234" name="generateCnt" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="1219" end="1231">
              <expression xsi:type="expressions:CallSet" begin="1219" end="1231">
                <calls begin="1219" end="1231" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1238" end="1246" value="package "/>
        <statements xsi:type="statements:Feature" begin="1248" end="1259">
          <expression xsi:type="expressions:CallSet" begin="1248" end="1259">
            <calls begin="1248" end="1259" name="utilPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1261" end="1531" value=";&#xD;&#xA;&#xD;&#xA;import java.sql.Connection;&#xD;&#xA;import java.sql.DriverManager;&#xD;&#xA;import java.sql.SQLException;&#xD;&#xA;import java.util.ResourceBundle;&#xD;&#xA;&#xD;&#xA;import javax.naming.Context;&#xD;&#xA;import javax.naming.InitialContext;&#xD;&#xA;import javax.naming.NamingException;&#xD;&#xA;import javax.sql.DataSource;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1533" end="1551">
          <expression xsi:type="expressions:CallSet" begin="1533" end="1551">
            <calls begin="1533" end="1551" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1553" end="1628" value="&#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA; * Utility class to find a Database connection&#xD;&#xA; */&#xD;&#xA;public class "/>
        <statements xsi:type="statements:Feature" begin="1630" end="1654">
          <expression xsi:type="expressions:CallSet" begin="1630" end="1654">
            <calls begin="1630" end="1641" name="projectName" prefix=""/>
            <calls begin="1642" end="1654" name="firstUpper" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1656" end="2090" value="ConnectionUtils {&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Prefix key used inside properties file&#xD;&#xA;     */&#xD;&#xA;    private static final String APP_NAME = &quot;fr.obeo.sample&quot;;&#xD;&#xA;    private static final String KEY_PREFIX = APP_NAME + &quot;.dao.jdbc&quot;;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Properties file&#xD;&#xA;     */&#xD;&#xA;    private static final String FILE_DAO_MAPPING = &quot;dao&quot;;&#xD;&#xA;    private static ResourceBundle bundle = ResourceBundle.getBundle(FILE_DAO_MAPPING);&#xD;&#xA;&#xD;&#xA;    private static "/>
        <statements xsi:type="statements:Feature" begin="2092" end="2116">
          <expression xsi:type="expressions:CallSet" begin="2092" end="2116">
            <calls begin="2092" end="2103" name="projectName" prefix=""/>
            <calls begin="2104" end="2116" name="firstUpper" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2118" end="2452" value="ConnectionUtils instance;&#xD;&#xA;    private DataSource dataSource = null;&#xD;&#xA;&#xD;&#xA;    /** &#xD;&#xA;     * Lock to manage concurrency access&#xD;&#xA;     */&#xD;&#xA;    private static Boolean initializationLock = new Boolean(true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Initialise the connection.&#xD;&#xA;     * @return a singleton &#xD;&#xA;     * @throws DaoException&#xD;&#xA;     */&#xD;&#xA;    public static "/>
        <statements xsi:type="statements:Feature" begin="2454" end="2478">
          <expression xsi:type="expressions:CallSet" begin="2454" end="2478">
            <calls begin="2454" end="2465" name="projectName" prefix=""/>
            <calls begin="2466" end="2478" name="firstUpper" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2480" end="2714" value="ConnectionUtils getInstance() throws DaoException {&#xD;&#xA;        if (instance == null) {&#xD;&#xA;            synchronized (initializationLock) {&#xD;&#xA;                if (initializationLock.equals(Boolean.TRUE)) {&#xD;&#xA;                    instance = new "/>
        <statements xsi:type="statements:Feature" begin="2716" end="2740">
          <expression xsi:type="expressions:CallSet" begin="2716" end="2740">
            <calls begin="2716" end="2727" name="projectName" prefix=""/>
            <calls begin="2728" end="2740" name="firstUpper" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2742" end="3289" value="ConnectionUtils();&#xD;&#xA;                    initializationLock = new Boolean(false);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        return instance;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Give a connection to the database.&#xD;&#xA;     * @return&#xD;&#xA;     * @throws DaoException&#xD;&#xA;     */&#xD;&#xA;    public Connection getConnection() throws DaoException {&#xD;&#xA;        return getConnectionJDBC();&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // ----    Privates methods ----&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * This constructor is private to conform singleton pattern&#xD;&#xA;     * @throws DaoException&#xD;&#xA;     */&#xD;&#xA;    private "/>
        <statements xsi:type="statements:Feature" begin="3291" end="3315">
          <expression xsi:type="expressions:CallSet" begin="3291" end="3315">
            <calls begin="3291" end="3302" name="projectName" prefix=""/>
            <calls begin="3303" end="3315" name="firstUpper" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3317" end="6200" value="ConnectionUtils() throws DaoException {&#xD;&#xA;        initConnectionJDBC();&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Initialisation throw JNDI (with a container).&#xD;&#xA;     * The JNDI key search is java:comp/env/jdbc/ + APP_NAME&#xD;&#xA;     * @throws DaoException&#xD;&#xA;     */&#xD;&#xA;    private void initConnectionJNDI() throws DaoException {&#xD;&#xA;        try {&#xD;&#xA;            Context initialContext;&#xD;&#xA;            initialContext = new InitialContext();&#xD;&#xA;            if (initialContext == null) {&#xD;&#xA;                throw new DaoException(&quot;getPooledConnection: Cannot get Initial Context&quot;);&#xD;&#xA;            }&#xD;&#xA;            String dsKey = bundle.getString(KEY_PREFIX + &quot;.dataSource&quot;);&#xD;&#xA;            dataSource = (DataSource) initialContext.lookup( dsKey );&#xD;&#xA;&#xD;&#xA;            if (dataSource == null) {&#xD;&#xA;                throw new DaoException(&quot;Init: Cannot lookup datasource&quot;);&#xD;&#xA;            }&#xD;&#xA;        } catch (NamingException e) {&#xD;&#xA;            throw new DaoException(&quot;Init: Cannot get connection &quot; + e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Initialisation throw JDBC.&lt;br/>&#xD;&#xA;     * Specify KEY_PREFIX + .driver inside properties file.&lt;br/>&#xD;&#xA;     * Exemple : fr.obeo.sample.dao.jdbc.driver=com.mysql.jdbc.Driver&#xD;&#xA;     * @throws DaoException&#xD;&#xA;     */&#xD;&#xA;    private void initConnectionJDBC() throws DaoException {&#xD;&#xA;        try {&#xD;&#xA;            // Driver&#xD;&#xA;            // DriverManager.setLogWriter(new PrintWriter(System.out));&#xD;&#xA;            String driverName = bundle.getString(KEY_PREFIX + &quot;.driver&quot;);&#xD;&#xA;            Class.forName(driverName);&#xD;&#xA;                        &#xD;&#xA;        } catch (ClassNotFoundException e) {&#xD;&#xA;            throw new DaoException(&quot;Init: Cannot init jdbc driver class &quot; + e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Use JNDI and its container to create a connection. &#xD;&#xA;     * The pool strategy depends on DataSource implementation.&#xD;&#xA;     * @return&#xD;&#xA;     * @throws DaoException&#xD;&#xA;     */&#xD;&#xA;    private Connection getConnectionJNDI() throws DaoException {&#xD;&#xA;        try {&#xD;&#xA;            Connection connection = dataSource.getConnection();&#xD;&#xA;            return connection;&#xD;&#xA;            &#xD;&#xA;        } catch (SQLException e) {&#xD;&#xA;            throw new DaoException(&quot;Cannot get connection from datasource.&quot; + e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Use direct JDBC API to create the connection.&#xD;&#xA;     * @return&#xD;&#xA;     * @throws DaoException&#xD;&#xA;     */&#xD;&#xA;    private Connection getConnectionJDBC() throws DaoException {&#xD;&#xA;        String url         = bundle.getString(KEY_PREFIX + &quot;.url&quot;);&#xD;&#xA;        String login     = bundle.getString(KEY_PREFIX + &quot;.login&quot;);&#xD;&#xA;        String password = bundle.getString(KEY_PREFIX + &quot;.password&quot;);&#xD;&#xA;        &#xD;&#xA;        try {            &#xD;&#xA;            Connection connection = DriverManager.getConnection(url, login, password);&#xD;&#xA;            return connection;            &#xD;&#xA;        } catch (SQLException e) {&#xD;&#xA;            throw new DaoException(&quot;Cannot get connection from DriverManager.&quot; + e);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}"/>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.jdbc.dao-jdbc-dao.properties" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.0" beginTag="&lt;%" endTag="%>">
      <scripts begin="1062" end="1675">
        <descriptor begin="974" end="1058" name="generateProperties" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="1021" end="1040">
              <expression xsi:type="expressions:CallSet" begin="1021" end="1040">
                <calls begin="1021" end="1040" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1042" end="1057" value="/dao.properties"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:For" begin="1068" end="1226">
          <iterator xsi:type="expressions:Parenthesis" begin="1068" end="1110">
            <expression xsi:type="expressions:CallSet" begin="1069" end="1109">
              <calls begin="1069" end="1093" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1085" end="1092" value="Class"/>
              </calls>
              <calls begin="1094" end="1109" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1101" end="1108" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1115" end="1115" value=""/>
          <statements xsi:type="statements:If" begin="1124" end="1219">
            <condition xsi:type="expressions:Parenthesis" begin="1124" end="1143">
              <expression xsi:type="expressions:Operator" begin="1125" end="1142" operator="||">
                <operands xsi:type="expressions:CallSet" begin="1125" end="1133">
                  <calls begin="1125" end="1133" name="isEntity" prefix=""/>
                </operands>
                <operands xsi:type="expressions:CallSet" begin="1137" end="1142">
                  <calls begin="1137" end="1142" name="isDao" prefix=""/>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Feature" begin="1150" end="1175">
              <expression xsi:type="expressions:CallSet" begin="1150" end="1175">
                <calls begin="1150" end="1175" name="daoInterfaceQualifiedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1177" end="1178" value="="/>
            <thenStatements xsi:type="statements:Feature" begin="1180" end="1190">
              <expression xsi:type="expressions:CallSet" begin="1180" end="1190">
                <calls begin="1180" end="1190" name="daoPackage" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1192" end="1202" value=".jdbc.Jdbc"/>
            <thenStatements xsi:type="statements:Feature" begin="1204" end="1208">
              <expression xsi:type="expressions:CallSet" begin="1204" end="1208">
                <calls begin="1204" end="1208" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1210" end="1215" value="Dao&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="1233" end="1235" value="# "/>
        <statements xsi:type="statements:Feature" begin="1237" end="1250">
          <expression xsi:type="expressions:CallSet" begin="1237" end="1250">
            <calls begin="1237" end="1250" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1252" end="1274" value=" for SGBD datasource&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1276" end="1287">
          <expression xsi:type="expressions:CallSet" begin="1276" end="1287">
            <calls begin="1276" end="1287" name="baseImports" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1289" end="1290" value="."/>
        <statements xsi:type="statements:Feature" begin="1292" end="1303">
          <expression xsi:type="expressions:CallSet" begin="1292" end="1303">
            <calls begin="1292" end="1303" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1305" end="1345" value=".dao.jdbc.dataSource=java:comp/env/jdbc/"/>
        <statements xsi:type="statements:Feature" begin="1347" end="1358">
          <expression xsi:type="expressions:CallSet" begin="1347" end="1358">
            <calls begin="1347" end="1358" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1360" end="1362" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1364" end="1375">
          <expression xsi:type="expressions:CallSet" begin="1364" end="1375">
            <calls begin="1364" end="1375" name="baseImports" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1377" end="1378" value="."/>
        <statements xsi:type="statements:Feature" begin="1380" end="1391">
          <expression xsi:type="expressions:CallSet" begin="1380" end="1391">
            <calls begin="1380" end="1391" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1393" end="1433" value=".dao.jdbc.driver=com.mysql.jdbc.Driver&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1435" end="1446">
          <expression xsi:type="expressions:CallSet" begin="1435" end="1446">
            <calls begin="1435" end="1446" name="baseImports" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1448" end="1449" value="."/>
        <statements xsi:type="statements:Feature" begin="1451" end="1462">
          <expression xsi:type="expressions:CallSet" begin="1451" end="1462">
            <calls begin="1451" end="1462" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1464" end="1501" value=".dao.jdbc.url=jdbc:mysql://localhost/"/>
        <statements xsi:type="statements:Feature" begin="1503" end="1514">
          <expression xsi:type="expressions:CallSet" begin="1503" end="1514">
            <calls begin="1503" end="1514" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1516" end="1518" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1520" end="1531">
          <expression xsi:type="expressions:CallSet" begin="1520" end="1531">
            <calls begin="1520" end="1531" name="baseImports" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1533" end="1534" value="."/>
        <statements xsi:type="statements:Feature" begin="1536" end="1547">
          <expression xsi:type="expressions:CallSet" begin="1536" end="1547">
            <calls begin="1536" end="1547" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1549" end="1565" value=".dao.jdbc.login="/>
        <statements xsi:type="statements:Feature" begin="1567" end="1578">
          <expression xsi:type="expressions:CallSet" begin="1567" end="1578">
            <calls begin="1567" end="1578" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1580" end="1582" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1584" end="1595">
          <expression xsi:type="expressions:CallSet" begin="1584" end="1595">
            <calls begin="1584" end="1595" name="baseImports" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1597" end="1598" value="."/>
        <statements xsi:type="statements:Feature" begin="1600" end="1611">
          <expression xsi:type="expressions:CallSet" begin="1600" end="1611">
            <calls begin="1600" end="1611" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1613" end="1640" value=".dao.jdbc.password=test&#xD;&#xA;# "/>
        <statements xsi:type="statements:Feature" begin="1642" end="1653">
          <expression xsi:type="expressions:CallSet" begin="1642" end="1653">
            <calls begin="1642" end="1653" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1655" end="1675" value=" for SGBD datasource"/>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.jdbc.dao-jdbc-direct" imports="/0/@resources.17 /0/@resources.0 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.21 /0/@resources.5" beginTag="&lt;%" endTag="%>">
      <scripts begin="1246" end="1338">
        <descriptor begin="1210" end="1242" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="1251" end="1333">
          <condition xsi:type="expressions:Parenthesis" begin="1251" end="1261">
            <expression xsi:type="expressions:CallSet" begin="1252" end="1260">
              <calls begin="1252" end="1260" name="isEntity" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="1269" end="1283">
            <expression xsi:type="expressions:CallSet" begin="1269" end="1283">
              <calls begin="1269" end="1283" name="pathToMainJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1285" end="1286" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="1288" end="1308">
            <expression xsi:type="expressions:CallSet" begin="1288" end="1308">
              <calls begin="1288" end="1299" name="jdbcPackage" prefix=""/>
              <calls begin="1300" end="1308" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1310" end="1315" value="/Jdbc"/>
          <thenStatements xsi:type="statements:Feature" begin="1317" end="1321">
            <expression xsi:type="expressions:CallSet" begin="1317" end="1321">
              <calls begin="1317" end="1321" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1323" end="1333" value="Dao.java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1448" end="13431">
        <descriptor begin="1351" end="1403" name="generate" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1388" end="1400">
              <expression xsi:type="expressions:CallSet" begin="1388" end="1400">
                <calls begin="1388" end="1400" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1448" end="1456" value="package "/>
        <statements xsi:type="statements:Feature" begin="1458" end="1469">
          <expression xsi:type="expressions:CallSet" begin="1458" end="1469">
            <calls begin="1458" end="1469" name="jdbcPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1471" end="1479" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1481" end="1494">
          <expression xsi:type="expressions:CallSet" begin="1481" end="1494">
            <calls begin="1481" end="1494" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1496" end="1746" value=" for import &#xD;&#xA;import java.sql.Connection;&#xD;&#xA;import java.sql.Date;&#xD;&#xA;import java.sql.PreparedStatement;&#xD;&#xA;import java.sql.ResultSet;&#xD;&#xA;import java.sql.SQLException;&#xD;&#xA;import java.sql.Statement;&#xD;&#xA;import java.util.ArrayList;&#xD;&#xA;import java.util.Collection;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1748" end="1766">
          <expression xsi:type="expressions:CallSet" begin="1748" end="1766">
            <calls begin="1748" end="1766" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1768" end="1777" value="&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1779" end="1790">
          <expression xsi:type="expressions:CallSet" begin="1779" end="1790">
            <calls begin="1779" end="1790" name="utilPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1792" end="1793" value="."/>
        <statements xsi:type="statements:Feature" begin="1795" end="1817">
          <expression xsi:type="expressions:CallSet" begin="1795" end="1817">
            <calls begin="1795" end="1806" name="projectName" prefix=""/>
            <calls begin="1807" end="1817" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1819" end="1844" value="ConnectionUtils;&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1846" end="1865">
          <expression xsi:type="expressions:CallSet" begin="1846" end="1865">
            <calls begin="1846" end="1865" name="entityQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1867" end="1870" value=";&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1876" end="2011">
          <iterator xsi:type="expressions:Parenthesis" begin="1876" end="1968">
            <expression xsi:type="expressions:CallSet" begin="1877" end="1967">
              <calls begin="1877" end="1894" name="getAssociations" prefix=""/>
              <calls begin="1895" end="1916" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1902" end="1915" value="Association"/>
              </calls>
              <calls begin="1917" end="1954" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="1937" end="1953">
                  <calls begin="1937" end="1953" name="current" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1945" end="1952" value="Class"/>
                  </calls>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="1955" end="1966">
                  <calls begin="1955" end="1966" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1973" end="1980" value="import "/>
          <statements xsi:type="statements:Feature" begin="1982" end="2006">
            <expression xsi:type="expressions:CallSet" begin="1982" end="2006">
              <calls begin="1982" end="1986" name="type" prefix=""/>
              <calls begin="1987" end="2006" name="entityQualifiedName" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2008" end="2011" value=";&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2018" end="2027" value="&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="2029" end="2054">
          <expression xsi:type="expressions:CallSet" begin="2029" end="2054">
            <calls begin="2029" end="2054" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2056" end="2064" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="2066" end="2077">
          <expression xsi:type="expressions:CallSet" begin="2066" end="2077">
            <calls begin="2066" end="2077" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2079" end="2152" value=" for import &#xD;&#xA;&#xD;&#xA;/**&#xD;&#xA; * This class provides the data access layer to the "/>
        <statements xsi:type="statements:Feature" begin="2154" end="2158">
          <expression xsi:type="expressions:CallSet" begin="2154" end="2158">
            <calls begin="2154" end="2158" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2160" end="2235" value=" entity class.&#xD;&#xA; * This is the JDBC implementation.&#xD;&#xA; */&#xD;&#xA;public class Jdbc"/>
        <statements xsi:type="statements:Feature" begin="2237" end="2241">
          <expression xsi:type="expressions:CallSet" begin="2237" end="2241">
            <calls begin="2237" end="2241" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2243" end="2258" value="Dao implements "/>
        <statements xsi:type="statements:Feature" begin="2260" end="2276">
          <expression xsi:type="expressions:CallSet" begin="2260" end="2276">
            <calls begin="2260" end="2276" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2278" end="2284" value=" {&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="2288" end="2338" value=" Generates static declaration for database fields "/>
        <statements xsi:type="statements:Text" begin="2344" end="2392" value="    protected static final String TABLE_NAME = &quot;"/>
        <statements xsi:type="statements:Feature" begin="2394" end="2414">
          <expression xsi:type="expressions:CallSet" begin="2394" end="2414">
            <calls begin="2394" end="2398" name="name" prefix=""/>
            <calls begin="2399" end="2414" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2416" end="2422" value="&quot;;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="2428" end="2611">
          <iterator xsi:type="expressions:Parenthesis" begin="2428" end="2481">
            <expression xsi:type="expressions:CallSet" begin="2429" end="2480">
              <calls begin="2429" end="2438" name="attribute" prefix=""/>
              <calls begin="2439" end="2480" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2459" end="2472" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="2474" end="2479"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="2486" end="2486" value=""/>
          <statements xsi:type="statements:If" begin="2495" end="2604">
            <condition xsi:type="expressions:Parenthesis" begin="2495" end="2507">
              <expression xsi:type="expressions:Not" begin="2496" end="2506">
                <expression xsi:type="expressions:CallSet" begin="2497" end="2506">
                  <calls begin="2497" end="2506" name="isDerived" prefix=""/>
                </expression>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2512" end="2546" value="    protected static final String "/>
            <thenStatements xsi:type="statements:Feature" begin="2548" end="2566">
              <expression xsi:type="expressions:CallSet" begin="2548" end="2566">
                <calls begin="2548" end="2552" name="name" prefix=""/>
                <calls begin="2553" end="2566" name="toUpperCase" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2568" end="2572" value=" = &quot;"/>
            <thenStatements xsi:type="statements:Feature" begin="2574" end="2594">
              <expression xsi:type="expressions:CallSet" begin="2574" end="2594">
                <calls begin="2574" end="2578" name="name" prefix=""/>
                <calls begin="2579" end="2594" name="toSqlNotation" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2596" end="2600" value="&quot;;&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:For" begin="2624" end="2814">
          <iterator xsi:type="expressions:Parenthesis" begin="2624" end="2718">
            <expression xsi:type="expressions:CallSet" begin="2625" end="2717">
              <calls begin="2625" end="2642" name="getAssociations" prefix=""/>
              <calls begin="2643" end="2664" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="2650" end="2663" value="Association"/>
              </calls>
              <calls begin="2665" end="2702" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="2685" end="2701">
                  <calls begin="2685" end="2701" name="current" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="2693" end="2700" value="Class"/>
                  </calls>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="2703" end="2716">
                  <calls begin="2703" end="2716" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="2723" end="2757" value="    protected static final String "/>
          <statements xsi:type="statements:Feature" begin="2759" end="2777">
            <expression xsi:type="expressions:CallSet" begin="2759" end="2777">
              <calls begin="2759" end="2763" name="name" prefix=""/>
              <calls begin="2764" end="2777" name="toUpperCase" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2779" end="2783" value=" = &quot;"/>
          <statements xsi:type="statements:Feature" begin="2785" end="2805">
            <expression xsi:type="expressions:CallSet" begin="2785" end="2805">
              <calls begin="2785" end="2789" name="name" prefix=""/>
              <calls begin="2790" end="2805" name="toSqlNotation" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="2807" end="2814" value="_ID&quot;;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="2821" end="2834" value="    &#xD;&#xA;    // "/>
        <statements xsi:type="statements:Feature" begin="2836" end="2849">
          <expression xsi:type="expressions:CallSet" begin="2836" end="2849">
            <calls begin="2836" end="2849" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2851" end="2973" value=" specifics queries&#xD;&#xA;    protected static final String CREATE_QUERY = &#xD;&#xA;        &quot;INSERT INTO &quot; + TABLE_NAME + &#xD;&#xA;        &quot; ("/>
        <statements xsi:type="statements:Feature" begin="2975" end="3015">
          <expression xsi:type="expressions:CallSet" begin="2975" end="3015">
            <calls begin="2975" end="2984" name="attribute" prefix=""/>
            <calls begin="2985" end="2989" name="name" prefix=""/>
            <calls begin="2990" end="3005" name="toSqlNotation" prefix=""/>
            <calls begin="3006" end="3015" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3010" end="3014" value=", "/>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3017" end="3028" value=") VALUES ( "/>
        <statements xsi:type="statements:For" begin="3034" end="3050">
          <iterator xsi:type="expressions:Parenthesis" begin="3034" end="3045">
            <expression xsi:type="expressions:CallSet" begin="3035" end="3044">
              <calls begin="3035" end="3044" name="attribute" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3048" end="3050" value="? "/>
        </statements>
        <statements xsi:type="statements:Text" begin="3055" end="3171" value=")&quot;;&#xD;&#xA;        &#xD;&#xA;    protected static final String UPDATE_QUERY = &#xD;&#xA;        &quot;UPDATE &quot; + TABLE_NAME + &#xD;&#xA;        &quot; SET  "/>
        <statements xsi:type="statements:Feature" begin="3173" end="3236">
          <expression xsi:type="expressions:CallSet" begin="3173" end="3236">
            <calls begin="3173" end="3182" name="attribute" prefix=""/>
            <calls begin="3183" end="3212" name="filterWithOutStereotype" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3207" end="3211" value="id"/>
            </calls>
            <calls begin="3213" end="3226" name="genComparator" prefix=""/>
            <calls begin="3227" end="3236" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3231" end="3235" value=", "/>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3238" end="3259" value="&quot; +&#xD;&#xA;        &quot; WHERE "/>
        <statements xsi:type="statements:Feature" begin="3261" end="3324">
          <expression xsi:type="expressions:CallSet" begin="3261" end="3324">
            <calls begin="3261" end="3270" name="attribute" prefix=""/>
            <calls begin="3271" end="3297" name="filterWithStereotype" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3292" end="3296" value="id"/>
            </calls>
            <calls begin="3298" end="3311" name="genComparator" prefix=""/>
            <calls begin="3312" end="3324" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3316" end="3323" value=" and "/>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3326" end="3443" value="&quot;;&#xD;&#xA;    &#xD;&#xA;    protected static final String DELETE_QUERY = &#xD;&#xA;        &quot;DELETE FROM &quot; + TABLE_NAME + &#xD;&#xA;        &quot; WHERE "/>
        <statements xsi:type="statements:Feature" begin="3445" end="3508">
          <expression xsi:type="expressions:CallSet" begin="3445" end="3508">
            <calls begin="3445" end="3454" name="attribute" prefix=""/>
            <calls begin="3455" end="3481" name="filterWithStereotype" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3476" end="3480" value="id"/>
            </calls>
            <calls begin="3482" end="3495" name="genComparator" prefix=""/>
            <calls begin="3496" end="3508" name="sep" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="3500" end="3507" value=" and "/>
            </calls>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3510" end="3753" value="&quot;;&#xD;&#xA;        &#xD;&#xA;    protected static final String FIND_ALL_QUERY = &#xD;&#xA;        &quot;SELECT * FROM &quot; + TABLE_NAME;&#xD;&#xA;        &#xD;&#xA;    protected static final String FIND_BY_ID = &#xD;&#xA;        &quot;SELECT * FROM &quot; + TABLE_NAME +&#xD;&#xA;        &quot; WHERE ID = ?&quot;;&#xD;&#xA;        &#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="3762" end="4072">
          <condition xsi:type="expressions:Parenthesis" begin="3762" end="3812">
            <expression xsi:type="expressions:Operator" begin="3763" end="3811" operator=">">
              <operands xsi:type="expressions:CallSet" begin="3763" end="3807">
                <calls begin="3763" end="3772" name="attribute" prefix=""/>
                <calls begin="3773" end="3799" name="filterWithStereotype" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="3794" end="3798" value="id"/>
                </calls>
                <calls begin="3800" end="3807" name="nSize" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="3810" end="3811" value="1"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3817" end="3817" value=""/>
          <thenStatements xsi:type="statements:For" begin="3831" end="4061">
            <iterator xsi:type="expressions:Parenthesis" begin="3831" end="3888">
              <expression xsi:type="expressions:CallSet" begin="3832" end="3887">
                <calls begin="3832" end="3841" name="attribute" prefix=""/>
                <calls begin="3842" end="3868" name="filterWithStereotype" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="3863" end="3867" value="id"/>
                </calls>
                <calls begin="3869" end="3887" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="3876" end="3886" value="Property"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="3893" end="3935" value="    protected static final String FIND_BY_"/>
            <statements xsi:type="statements:Feature" begin="3937" end="3957">
              <expression xsi:type="expressions:CallSet" begin="3937" end="3957">
                <calls begin="3937" end="3941" name="name" prefix=""/>
                <calls begin="3942" end="3957" name="toSqlNotation" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="3959" end="4021" value=" = &#xD;&#xA;        &quot;SELECT * FROM &quot; + TABLE_NAME +&#xD;&#xA;        &quot; WHERE "/>
            <statements xsi:type="statements:Feature" begin="4023" end="4043">
              <expression xsi:type="expressions:CallSet" begin="4023" end="4043">
                <calls begin="4023" end="4027" name="name" prefix=""/>
                <calls begin="4028" end="4043" name="toSqlNotation" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="4045" end="4053" value=" = ?&quot;;&#xD;&#xA;"/>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="4079" end="4086" value="    // "/>
        <statements xsi:type="statements:Feature" begin="4088" end="4099">
          <expression xsi:type="expressions:CallSet" begin="4088" end="4099">
            <calls begin="4088" end="4099" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4101" end="4130" value="&#xD;&#xA;&#xD;&#xA;    protected Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="4132" end="4136">
          <expression xsi:type="expressions:CallSet" begin="4132" end="4136">
            <calls begin="4132" end="4136" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4138" end="4207" value="> createList(ResultSet rs) throws SQLException {&#xD;&#xA;        Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="4209" end="4213">
          <expression xsi:type="expressions:CallSet" begin="4209" end="4213">
            <calls begin="4209" end="4213" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4215" end="4240" value="> result = new ArrayList&lt;"/>
        <statements xsi:type="statements:Feature" begin="4242" end="4246">
          <expression xsi:type="expressions:CallSet" begin="4242" end="4246">
            <calls begin="4242" end="4246" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4248" end="4262" value=">();&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="4264" end="4268">
          <expression xsi:type="expressions:CallSet" begin="4264" end="4268">
            <calls begin="4264" end="4268" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4270" end="4271" value=" "/>
        <statements xsi:type="statements:Feature" begin="4273" end="4288">
          <expression xsi:type="expressions:CallSet" begin="4273" end="4288">
            <calls begin="4273" end="4277" name="name" prefix=""/>
            <calls begin="4278" end="4288" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4290" end="4341" value=" = null;&#xD;&#xA;        while (rs.next()) {&#xD;&#xA;            "/>
        <statements xsi:type="statements:Feature" begin="4343" end="4358">
          <expression xsi:type="expressions:CallSet" begin="4343" end="4358">
            <calls begin="4343" end="4347" name="name" prefix=""/>
            <calls begin="4348" end="4358" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4360" end="4367" value=" = new "/>
        <statements xsi:type="statements:Feature" begin="4369" end="4373">
          <expression xsi:type="expressions:CallSet" begin="4369" end="4373">
            <calls begin="4369" end="4373" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4375" end="4380" value="();&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="4386" end="4636">
          <iterator xsi:type="expressions:Parenthesis" begin="4386" end="4439">
            <expression xsi:type="expressions:CallSet" begin="4387" end="4438">
              <calls begin="4387" end="4396" name="attribute" prefix=""/>
              <calls begin="4397" end="4438" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="4417" end="4430" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="4432" end="4437"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="4444" end="4444" value=""/>
          <statements xsi:type="statements:If" begin="4453" end="4629">
            <condition xsi:type="expressions:Parenthesis" begin="4453" end="4465">
              <expression xsi:type="expressions:Not" begin="4454" end="4464">
                <expression xsi:type="expressions:CallSet" begin="4455" end="4464">
                  <calls begin="4455" end="4464" name="isDerived" prefix=""/>
                </expression>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4470" end="4470" value=""/>
            <thenStatements xsi:type="statements:If" begin="4483" end="4618">
              <condition xsi:type="expressions:Parenthesis" begin="4483" end="4495">
                <expression xsi:type="expressions:Operator" begin="4484" end="4494" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="4484" end="4489">
                    <calls begin="4484" end="4489" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="4493" end="4494" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="4500" end="4512" value="            "/>
              <thenStatements xsi:type="statements:Feature" begin="4514" end="4535">
                <expression xsi:type="expressions:CallSet" begin="4514" end="4535">
                  <calls begin="4514" end="4519" name="class" prefix=""/>
                  <calls begin="4520" end="4524" name="name" prefix=""/>
                  <calls begin="4525" end="4535" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="4537" end="4541" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="4543" end="4558">
                <expression xsi:type="expressions:CallSet" begin="4543" end="4558">
                  <calls begin="4543" end="4547" name="name" prefix=""/>
                  <calls begin="4548" end="4558" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="4560" end="4568" value="( rs.get"/>
              <thenStatements xsi:type="statements:Feature" begin="4570" end="4579">
                <expression xsi:type="expressions:CallSet" begin="4570" end="4579">
                  <calls begin="4570" end="4579" name="genRsType" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="4581" end="4582" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="4584" end="4602">
                <expression xsi:type="expressions:CallSet" begin="4584" end="4602">
                  <calls begin="4584" end="4588" name="name" prefix=""/>
                  <calls begin="4589" end="4602" name="toUpperCase" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="4604" end="4610" value=") );&#xD;&#xA;"/>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:For" begin="4649" end="5209">
          <iterator xsi:type="expressions:Parenthesis" begin="4649" end="4743">
            <expression xsi:type="expressions:CallSet" begin="4650" end="4742">
              <calls begin="4650" end="4667" name="getAssociations" prefix=""/>
              <calls begin="4668" end="4689" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="4675" end="4688" value="Association"/>
              </calls>
              <calls begin="4690" end="4727" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="4710" end="4726">
                  <calls begin="4710" end="4726" name="current" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="4718" end="4725" value="Class"/>
                  </calls>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="4728" end="4741">
                  <calls begin="4728" end="4741" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="4748" end="4762" value="&#xD;&#xA;            "/>
          <statements xsi:type="statements:Feature" begin="4764" end="4773">
            <expression xsi:type="expressions:CallSet" begin="4764" end="4773">
              <calls begin="4764" end="4768" name="type" prefix=""/>
              <calls begin="4769" end="4773" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="4775" end="4776" value=" "/>
          <statements xsi:type="statements:Feature" begin="4778" end="4782">
            <expression xsi:type="expressions:CallSet" begin="4778" end="4782">
              <calls begin="4778" end="4782" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="4784" end="4791" value=" = new "/>
          <statements xsi:type="statements:Feature" begin="4793" end="4802">
            <expression xsi:type="expressions:CallSet" begin="4793" end="4802">
              <calls begin="4793" end="4797" name="type" prefix=""/>
              <calls begin="4798" end="4802" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="4804" end="4821" value="();&#xD;&#xA;            "/>
          <statements xsi:type="statements:Feature" begin="4823" end="4827">
            <expression xsi:type="expressions:CallSet" begin="4823" end="4827">
              <calls begin="4823" end="4827" name="name" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="4829" end="4850" value=".setId( rs.getString("/>
          <statements xsi:type="statements:Feature" begin="4852" end="4870">
            <expression xsi:type="expressions:CallSet" begin="4852" end="4870">
              <calls begin="4852" end="4856" name="name" prefix=""/>
              <calls begin="4857" end="4870" name="toUpperCase" prefix=""/>
            </expression>
          </statements>
          <statements xsi:type="statements:Text" begin="4872" end="4878" value=") );&#xD;&#xA;"/>
          <statements xsi:type="statements:If" begin="4887" end="5202">
            <condition xsi:type="expressions:Parenthesis" begin="4887" end="4899">
              <expression xsi:type="expressions:Operator" begin="4888" end="4898" operator="==">
                <operands xsi:type="expressions:CallSet" begin="4888" end="4893">
                  <calls begin="4888" end="4893" name="upper" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="4897" end="4898" value="1"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4908" end="4920" value="            "/>
            <thenStatements xsi:type="statements:Feature" begin="4922" end="5000">
              <expression xsi:type="expressions:CallSet" begin="4922" end="5000">
                <calls begin="4922" end="4933" name="association" prefix=""/>
                <calls begin="4934" end="4979" name="oppositeAttributeOf" prefix="">
                  <arguments xsi:type="expressions:CallSet" begin="4954" end="4978">
                    <calls begin="4954" end="4973" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="4962" end="4972" value="Property"/>
                    </calls>
                    <calls begin="4974" end="4978" name="type" prefix=""/>
                  </arguments>
                </calls>
                <calls begin="4980" end="4984" name="type" prefix=""/>
                <calls begin="4985" end="4989" name="name" prefix=""/>
                <calls begin="4990" end="5000" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5002" end="5006" value=".set"/>
            <thenStatements xsi:type="statements:Feature" begin="5008" end="5023">
              <expression xsi:type="expressions:CallSet" begin="5008" end="5023">
                <calls begin="5008" end="5012" name="name" prefix=""/>
                <calls begin="5013" end="5023" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5025" end="5027" value="( "/>
            <thenStatements xsi:type="statements:Feature" begin="5029" end="5033">
              <expression xsi:type="expressions:CallSet" begin="5029" end="5033">
                <calls begin="5029" end="5033" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="5035" end="5040" value=" );&#xD;&#xA;"/>
            <elseStatements xsi:type="statements:Text" begin="5060" end="5072" value="            "/>
            <elseStatements xsi:type="statements:Feature" begin="5074" end="5152">
              <expression xsi:type="expressions:CallSet" begin="5074" end="5152">
                <calls begin="5074" end="5085" name="association" prefix=""/>
                <calls begin="5086" end="5131" name="oppositeAttributeOf" prefix="">
                  <arguments xsi:type="expressions:CallSet" begin="5106" end="5130">
                    <calls begin="5106" end="5125" name="current" prefix="">
                      <arguments xsi:type="expressions:StringLiteral" begin="5114" end="5124" value="Property"/>
                    </calls>
                    <calls begin="5126" end="5130" name="type" prefix=""/>
                  </arguments>
                </calls>
                <calls begin="5132" end="5136" name="type" prefix=""/>
                <calls begin="5137" end="5141" name="name" prefix=""/>
                <calls begin="5142" end="5152" name="toL1Case" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="5154" end="5158" value=".get"/>
            <elseStatements xsi:type="statements:Feature" begin="5160" end="5175">
              <expression xsi:type="expressions:CallSet" begin="5160" end="5175">
                <calls begin="5160" end="5164" name="name" prefix=""/>
                <calls begin="5165" end="5175" name="toU1Case" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="5177" end="5185" value="().add( "/>
            <elseStatements xsi:type="statements:Feature" begin="5187" end="5191">
              <expression xsi:type="expressions:CallSet" begin="5187" end="5191">
                <calls begin="5187" end="5191" name="name" prefix=""/>
              </expression>
            </elseStatements>
            <elseStatements xsi:type="statements:Text" begin="5193" end="5198" value=" );&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="5216" end="5241" value="&#xD;&#xA;            result.add("/>
        <statements xsi:type="statements:Feature" begin="5243" end="5258">
          <expression xsi:type="expressions:CallSet" begin="5243" end="5258">
            <calls begin="5243" end="5247" name="name" prefix=""/>
            <calls begin="5248" end="5258" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5260" end="5330" value=");&#xD;&#xA;        }&#xD;&#xA;        return result;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    public void create"/>
        <statements xsi:type="statements:Feature" begin="5332" end="5336">
          <expression xsi:type="expressions:CallSet" begin="5332" end="5336">
            <calls begin="5332" end="5336" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5338" end="5339" value="("/>
        <statements xsi:type="statements:Feature" begin="5341" end="5345">
          <expression xsi:type="expressions:CallSet" begin="5341" end="5345">
            <calls begin="5341" end="5345" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5347" end="5492" value=" element) throws DaoException {&#xD;&#xA;        Connection cnx = null;&#xD;&#xA;        PreparedStatement statement = null;&#xD;&#xA;&#xD;&#xA;        try {&#xD;&#xA;            cnx = "/>
        <statements xsi:type="statements:Feature" begin="5494" end="5516">
          <expression xsi:type="expressions:CallSet" begin="5494" end="5516">
            <calls begin="5494" end="5505" name="projectName" prefix=""/>
            <calls begin="5506" end="5516" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5518" end="5644" value="ConnectionUtils.getInstance().getConnection();&#xD;&#xA;            statement = cnx.prepareStatement(CREATE_QUERY);&#xD;&#xA;&#xD;&#xA;            // "/>
        <statements xsi:type="statements:Feature" begin="5646" end="5659">
          <expression xsi:type="expressions:CallSet" begin="5646" end="5659">
            <calls begin="5646" end="5659" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5661" end="5670" value=" create&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="5688" end="6309">
          <iterator xsi:type="expressions:Parenthesis" begin="5688" end="5699">
            <expression xsi:type="expressions:CallSet" begin="5689" end="5698">
              <calls begin="5689" end="5698" name="attribute" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="5704" end="5704" value=""/>
          <statements xsi:type="statements:If" begin="5725" end="6290">
            <condition xsi:type="expressions:Parenthesis" begin="5725" end="5737">
              <expression xsi:type="expressions:Not" begin="5726" end="5736">
                <expression xsi:type="expressions:CallSet" begin="5727" end="5736">
                  <calls begin="5727" end="5736" name="isDerived" prefix=""/>
                </expression>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="5742" end="5742" value=""/>
            <thenStatements xsi:type="statements:If" begin="5767" end="6267">
              <condition xsi:type="expressions:Parenthesis" begin="5767" end="5779">
                <expression xsi:type="expressions:Operator" begin="5768" end="5778" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="5768" end="5773">
                    <calls begin="5768" end="5773" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="5777" end="5778" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="5784" end="5784" value=""/>
              <thenStatements xsi:type="statements:If" begin="5813" end="6240">
                <condition xsi:type="expressions:Parenthesis" begin="5813" end="5836">
                  <expression xsi:type="expressions:Operator" begin="5814" end="5835" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="5814" end="5823">
                      <calls begin="5814" end="5818" name="type" prefix=""/>
                      <calls begin="5819" end="5823" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="5827" end="5835" value="String"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="5841" end="5873" value="            statement.setString("/>
                <thenStatements xsi:type="statements:Feature" begin="5875" end="5880">
                  <expression xsi:type="expressions:Operator" begin="5875" end="5880" operator="+">
                    <operands xsi:type="expressions:CallSet" begin="5875" end="5878">
                      <calls begin="5875" end="5878" name="i" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="5879" end="5880" value="1"/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5882" end="5895" value=", element.get"/>
                <thenStatements xsi:type="statements:Feature" begin="5897" end="5912">
                  <expression xsi:type="expressions:CallSet" begin="5897" end="5912">
                    <calls begin="5897" end="5901" name="name" prefix=""/>
                    <calls begin="5902" end="5912" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="5914" end="5920" value="());&#xD;&#xA;"/>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="5954" end="5975">
                    <expression xsi:type="expressions:Operator" begin="5955" end="5974" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="5955" end="5964">
                        <calls begin="5955" end="5959" name="type" prefix=""/>
                        <calls begin="5960" end="5964" name="name" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="5968" end="5974" value="Date"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="5980" end="6010" value="            statement.setDate("/>
                  <thenStatements xsi:type="statements:Feature" begin="6012" end="6017">
                    <expression xsi:type="expressions:Operator" begin="6012" end="6017" operator="+">
                      <operands xsi:type="expressions:CallSet" begin="6012" end="6015">
                        <calls begin="6012" end="6015" name="i" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="6016" end="6017" value="1"/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="6019" end="6041" value=", new Date(element.get"/>
                  <thenStatements xsi:type="statements:Feature" begin="6043" end="6058">
                    <expression xsi:type="expressions:CallSet" begin="6043" end="6058">
                      <calls begin="6043" end="6047" name="name" prefix=""/>
                      <calls begin="6048" end="6058" name="toU1Case" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="6060" end="6077" value="().getTime()));&#xD;&#xA;"/>
                </elseIf>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="6111" end="6135">
                    <expression xsi:type="expressions:Operator" begin="6112" end="6134" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="6112" end="6121">
                        <calls begin="6112" end="6116" name="type" prefix=""/>
                        <calls begin="6117" end="6121" name="name" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="6125" end="6134" value="Integer"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="6140" end="6169" value="            statement.setInt("/>
                  <thenStatements xsi:type="statements:Feature" begin="6171" end="6176">
                    <expression xsi:type="expressions:Operator" begin="6171" end="6176" operator="+">
                      <operands xsi:type="expressions:CallSet" begin="6171" end="6174">
                        <calls begin="6171" end="6174" name="i" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="6175" end="6176" value="1"/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="6178" end="6191" value=", element.get"/>
                  <thenStatements xsi:type="statements:Feature" begin="6193" end="6208">
                    <expression xsi:type="expressions:CallSet" begin="6193" end="6208">
                      <calls begin="6193" end="6197" name="name" prefix=""/>
                      <calls begin="6198" end="6208" name="toU1Case" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="6210" end="6216" value="());&#xD;&#xA;"/>
                </elseIf>
              </thenStatements>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="6316" end="6331" value="            // "/>
        <statements xsi:type="statements:Feature" begin="6333" end="6344">
          <expression xsi:type="expressions:CallSet" begin="6333" end="6344">
            <calls begin="6333" end="6344" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6346" end="6799" value="&#xD;&#xA;&#xD;&#xA;            statement.executeUpdate();&#xD;&#xA;        } catch (SQLException e) {&#xD;&#xA;            throw new DaoException(&quot;Erreur requete&quot;, e);&#xD;&#xA;        } finally {&#xD;&#xA;            try {&#xD;&#xA;                if(statement!=null){statement.close();}&#xD;&#xA;                if(cnx!=null){cnx.close();}&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                throw new DaoException(&quot;Erreur de fermeture JDBC&quot;, e);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public void update"/>
        <statements xsi:type="statements:Feature" begin="6801" end="6805">
          <expression xsi:type="expressions:CallSet" begin="6801" end="6805">
            <calls begin="6801" end="6805" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6807" end="6808" value="("/>
        <statements xsi:type="statements:Feature" begin="6810" end="6814">
          <expression xsi:type="expressions:CallSet" begin="6810" end="6814">
            <calls begin="6810" end="6814" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6816" end="6961" value=" element) throws DaoException {&#xD;&#xA;        Connection cnx = null;&#xD;&#xA;        PreparedStatement statement = null;&#xD;&#xA;&#xD;&#xA;        try {&#xD;&#xA;            cnx = "/>
        <statements xsi:type="statements:Feature" begin="6963" end="6985">
          <expression xsi:type="expressions:CallSet" begin="6963" end="6985">
            <calls begin="6963" end="6974" name="projectName" prefix=""/>
            <calls begin="6975" end="6985" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6987" end="7111" value="ConnectionUtils.getInstance().getConnection();&#xD;&#xA;            statement = cnx.prepareStatement(UPDATE_QUERY);&#xD;&#xA;            // "/>
        <statements xsi:type="statements:Feature" begin="7113" end="7126">
          <expression xsi:type="expressions:CallSet" begin="7113" end="7126">
            <calls begin="7113" end="7126" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7128" end="7137" value=" update&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="7155" end="7776">
          <iterator xsi:type="expressions:Parenthesis" begin="7155" end="7166">
            <expression xsi:type="expressions:CallSet" begin="7156" end="7165">
              <calls begin="7156" end="7165" name="attribute" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="7171" end="7171" value=""/>
          <statements xsi:type="statements:If" begin="7192" end="7757">
            <condition xsi:type="expressions:Parenthesis" begin="7192" end="7204">
              <expression xsi:type="expressions:Not" begin="7193" end="7203">
                <expression xsi:type="expressions:CallSet" begin="7194" end="7203">
                  <calls begin="7194" end="7203" name="isDerived" prefix=""/>
                </expression>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="7209" end="7209" value=""/>
            <thenStatements xsi:type="statements:If" begin="7234" end="7734">
              <condition xsi:type="expressions:Parenthesis" begin="7234" end="7246">
                <expression xsi:type="expressions:Operator" begin="7235" end="7245" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="7235" end="7240">
                    <calls begin="7235" end="7240" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="7244" end="7245" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="7251" end="7251" value=""/>
              <thenStatements xsi:type="statements:If" begin="7280" end="7707">
                <condition xsi:type="expressions:Parenthesis" begin="7280" end="7303">
                  <expression xsi:type="expressions:Operator" begin="7281" end="7302" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="7281" end="7290">
                      <calls begin="7281" end="7285" name="type" prefix=""/>
                      <calls begin="7286" end="7290" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="7294" end="7302" value="String"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="7308" end="7340" value="            statement.setString("/>
                <thenStatements xsi:type="statements:Feature" begin="7342" end="7347">
                  <expression xsi:type="expressions:Operator" begin="7342" end="7347" operator="+">
                    <operands xsi:type="expressions:CallSet" begin="7342" end="7345">
                      <calls begin="7342" end="7345" name="i" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="7346" end="7347" value="1"/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7349" end="7362" value=", element.get"/>
                <thenStatements xsi:type="statements:Feature" begin="7364" end="7379">
                  <expression xsi:type="expressions:CallSet" begin="7364" end="7379">
                    <calls begin="7364" end="7368" name="name" prefix=""/>
                    <calls begin="7369" end="7379" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="7381" end="7387" value="());&#xD;&#xA;"/>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="7421" end="7442">
                    <expression xsi:type="expressions:Operator" begin="7422" end="7441" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="7422" end="7431">
                        <calls begin="7422" end="7426" name="type" prefix=""/>
                        <calls begin="7427" end="7431" name="name" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="7435" end="7441" value="Date"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="7447" end="7477" value="            statement.setDate("/>
                  <thenStatements xsi:type="statements:Feature" begin="7479" end="7484">
                    <expression xsi:type="expressions:Operator" begin="7479" end="7484" operator="+">
                      <operands xsi:type="expressions:CallSet" begin="7479" end="7482">
                        <calls begin="7479" end="7482" name="i" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="7483" end="7484" value="1"/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="7486" end="7508" value=", new Date(element.get"/>
                  <thenStatements xsi:type="statements:Feature" begin="7510" end="7525">
                    <expression xsi:type="expressions:CallSet" begin="7510" end="7525">
                      <calls begin="7510" end="7514" name="name" prefix=""/>
                      <calls begin="7515" end="7525" name="toU1Case" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="7527" end="7544" value="().getTime()));&#xD;&#xA;"/>
                </elseIf>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="7578" end="7602">
                    <expression xsi:type="expressions:Operator" begin="7579" end="7601" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="7579" end="7588">
                        <calls begin="7579" end="7583" name="type" prefix=""/>
                        <calls begin="7584" end="7588" name="name" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="7592" end="7601" value="Integer"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="7607" end="7636" value="            statement.setInt("/>
                  <thenStatements xsi:type="statements:Feature" begin="7638" end="7643">
                    <expression xsi:type="expressions:Operator" begin="7638" end="7643" operator="+">
                      <operands xsi:type="expressions:CallSet" begin="7638" end="7641">
                        <calls begin="7638" end="7641" name="i" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="7642" end="7643" value="1"/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="7645" end="7658" value=", element.get"/>
                  <thenStatements xsi:type="statements:Feature" begin="7660" end="7675">
                    <expression xsi:type="expressions:CallSet" begin="7660" end="7675">
                      <calls begin="7660" end="7664" name="name" prefix=""/>
                      <calls begin="7665" end="7675" name="toU1Case" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="7677" end="7683" value="());&#xD;&#xA;"/>
                </elseIf>
              </thenStatements>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="7783" end="7798" value="            // "/>
        <statements xsi:type="statements:Feature" begin="7800" end="7811">
          <expression xsi:type="expressions:CallSet" begin="7800" end="7811">
            <calls begin="7800" end="7811" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="7813" end="8266" value="&#xD;&#xA;&#xD;&#xA;            statement.executeUpdate();&#xD;&#xA;        } catch (SQLException e) {&#xD;&#xA;            throw new DaoException(&quot;Erreur requete&quot;, e);&#xD;&#xA;        } finally {&#xD;&#xA;            try {&#xD;&#xA;                if(statement!=null){statement.close();}&#xD;&#xA;                if(cnx!=null){cnx.close();}&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                throw new DaoException(&quot;Erreur de fermeture JDBC&quot;, e);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public void delete"/>
        <statements xsi:type="statements:Feature" begin="8268" end="8272">
          <expression xsi:type="expressions:CallSet" begin="8268" end="8272">
            <calls begin="8268" end="8272" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8274" end="8275" value="("/>
        <statements xsi:type="statements:Feature" begin="8277" end="8281">
          <expression xsi:type="expressions:CallSet" begin="8277" end="8281">
            <calls begin="8277" end="8281" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8283" end="8428" value=" element) throws DaoException {&#xD;&#xA;        Connection cnx = null;&#xD;&#xA;        PreparedStatement statement = null;&#xD;&#xA;&#xD;&#xA;        try {&#xD;&#xA;            cnx = "/>
        <statements xsi:type="statements:Feature" begin="8430" end="8452">
          <expression xsi:type="expressions:CallSet" begin="8430" end="8452">
            <calls begin="8430" end="8441" name="projectName" prefix=""/>
            <calls begin="8442" end="8452" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8454" end="8578" value="ConnectionUtils.getInstance().getConnection();&#xD;&#xA;            statement = cnx.prepareStatement(DELETE_QUERY);&#xD;&#xA;            // "/>
        <statements xsi:type="statements:Feature" begin="8580" end="8593">
          <expression xsi:type="expressions:CallSet" begin="8580" end="8593">
            <calls begin="8580" end="8593" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8595" end="8604" value=" delete&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="8622" end="9258">
          <iterator xsi:type="expressions:Parenthesis" begin="8622" end="8660">
            <expression xsi:type="expressions:CallSet" begin="8623" end="8659">
              <calls begin="8623" end="8632" name="attribute" prefix=""/>
              <calls begin="8633" end="8659" name="filterWithStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="8654" end="8658" value="id"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="8665" end="8665" value=""/>
          <statements xsi:type="statements:If" begin="8686" end="9239">
            <condition xsi:type="expressions:Parenthesis" begin="8686" end="8698">
              <expression xsi:type="expressions:Not" begin="8687" end="8697">
                <expression xsi:type="expressions:CallSet" begin="8688" end="8697">
                  <calls begin="8688" end="8697" name="isDerived" prefix=""/>
                </expression>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="8703" end="8703" value=""/>
            <thenStatements xsi:type="statements:If" begin="8728" end="9216">
              <condition xsi:type="expressions:Parenthesis" begin="8728" end="8740">
                <expression xsi:type="expressions:Operator" begin="8729" end="8739" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="8729" end="8734">
                    <calls begin="8729" end="8734" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="8738" end="8739" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="8745" end="8745" value=""/>
              <thenStatements xsi:type="statements:If" begin="8774" end="9189">
                <condition xsi:type="expressions:Parenthesis" begin="8774" end="8797">
                  <expression xsi:type="expressions:Operator" begin="8775" end="8796" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="8775" end="8784">
                      <calls begin="8775" end="8779" name="type" prefix=""/>
                      <calls begin="8780" end="8784" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="8788" end="8796" value="String"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="8802" end="8830" value="        statement.setString("/>
                <thenStatements xsi:type="statements:Feature" begin="8832" end="8837">
                  <expression xsi:type="expressions:Operator" begin="8832" end="8837" operator="+">
                    <operands xsi:type="expressions:CallSet" begin="8832" end="8835">
                      <calls begin="8832" end="8835" name="i" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="8836" end="8837" value="1"/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8839" end="8852" value=", element.get"/>
                <thenStatements xsi:type="statements:Feature" begin="8854" end="8869">
                  <expression xsi:type="expressions:CallSet" begin="8854" end="8869">
                    <calls begin="8854" end="8858" name="name" prefix=""/>
                    <calls begin="8859" end="8869" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8871" end="8877" value="());&#xD;&#xA;"/>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="8911" end="8932">
                    <expression xsi:type="expressions:Operator" begin="8912" end="8931" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="8912" end="8921">
                        <calls begin="8912" end="8916" name="type" prefix=""/>
                        <calls begin="8917" end="8921" name="name" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="8925" end="8931" value="Date"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="8937" end="8963" value="        statement.setDate("/>
                  <thenStatements xsi:type="statements:Feature" begin="8965" end="8970">
                    <expression xsi:type="expressions:Operator" begin="8965" end="8970" operator="+">
                      <operands xsi:type="expressions:CallSet" begin="8965" end="8968">
                        <calls begin="8965" end="8968" name="i" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="8969" end="8970" value="1"/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="8972" end="8994" value=", new Date(element.get"/>
                  <thenStatements xsi:type="statements:Feature" begin="8996" end="9011">
                    <expression xsi:type="expressions:CallSet" begin="8996" end="9011">
                      <calls begin="8996" end="9000" name="name" prefix=""/>
                      <calls begin="9001" end="9011" name="toU1Case" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="9013" end="9030" value="().getTime()));&#xD;&#xA;"/>
                </elseIf>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="9064" end="9088">
                    <expression xsi:type="expressions:Operator" begin="9065" end="9087" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="9065" end="9074">
                        <calls begin="9065" end="9069" name="type" prefix=""/>
                        <calls begin="9070" end="9074" name="name" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="9078" end="9087" value="Integer"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="9093" end="9118" value="        statement.setInt("/>
                  <thenStatements xsi:type="statements:Feature" begin="9120" end="9125">
                    <expression xsi:type="expressions:Operator" begin="9120" end="9125" operator="+">
                      <operands xsi:type="expressions:CallSet" begin="9120" end="9123">
                        <calls begin="9120" end="9123" name="i" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="9124" end="9125" value="1"/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="9127" end="9140" value=", element.get"/>
                  <thenStatements xsi:type="statements:Feature" begin="9142" end="9157">
                    <expression xsi:type="expressions:CallSet" begin="9142" end="9157">
                      <calls begin="9142" end="9146" name="name" prefix=""/>
                      <calls begin="9147" end="9157" name="toU1Case" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="9159" end="9165" value="());&#xD;&#xA;"/>
                </elseIf>
              </thenStatements>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="9265" end="9280" value="            // "/>
        <statements xsi:type="statements:Feature" begin="9282" end="9293">
          <expression xsi:type="expressions:CallSet" begin="9282" end="9293">
            <calls begin="9282" end="9293" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9295" end="9750" value="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            statement.executeUpdate();&#xD;&#xA;        } catch (SQLException e) {&#xD;&#xA;            throw new DaoException(&quot;Erreur requete&quot;, e);&#xD;&#xA;        } finally {&#xD;&#xA;            try {&#xD;&#xA;                if(statement!=null){statement.close();}&#xD;&#xA;                if(cnx!=null){cnx.close();}&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                throw new DaoException(&quot;Erreur de fermeture JDBC&quot;, e);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="9752" end="9756">
          <expression xsi:type="expressions:CallSet" begin="9752" end="9756">
            <calls begin="9752" end="9756" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9758" end="9767" value="> findAll"/>
        <statements xsi:type="statements:Feature" begin="9769" end="9773">
          <expression xsi:type="expressions:CallSet" begin="9769" end="9773">
            <calls begin="9769" end="9773" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9775" end="9936" value="s() throws DaoException {&#xD;&#xA;        Connection cnx = null;&#xD;&#xA;        Statement statement = null;&#xD;&#xA;        ResultSet rs = null;&#xD;&#xA;&#xD;&#xA;        try {&#xD;&#xA;            cnx = "/>
        <statements xsi:type="statements:Feature" begin="9938" end="9960">
          <expression xsi:type="expressions:CallSet" begin="9938" end="9960">
            <calls begin="9938" end="9949" name="projectName" prefix=""/>
            <calls begin="9950" end="9960" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9962" end="10141" value="ConnectionUtils.getInstance().getConnection();&#xD;&#xA;            statement = cnx.createStatement();&#xD;&#xA;            rs = statement.executeQuery(FIND_ALL_QUERY);&#xD;&#xA;&#xD;&#xA;            Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="10143" end="10147">
          <expression xsi:type="expressions:CallSet" begin="10143" end="10147">
            <calls begin="10143" end="10147" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10149" end="10650" value="> result = createList(rs);&#xD;&#xA;            return result;&#xD;&#xA;        } catch (SQLException e) {&#xD;&#xA;            throw new DaoException(&quot;Erreur requete&quot;, e);&#xD;&#xA;        } finally {&#xD;&#xA;            try {&#xD;&#xA;                if(rs!=null){rs.close();}&#xD;&#xA;                if(statement!=null){statement.close();}&#xD;&#xA;                if(cnx!=null){cnx.close();}&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                throw new DaoException(&quot;Erreur de fermeture JDBC&quot;, e);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }    &#xD;&#xA;    &#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="10652" end="10656">
          <expression xsi:type="expressions:CallSet" begin="10652" end="10656">
            <calls begin="10652" end="10656" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10658" end="10663" value=" find"/>
        <statements xsi:type="statements:Feature" begin="10665" end="10669">
          <expression xsi:type="expressions:CallSet" begin="10665" end="10669">
            <calls begin="10665" end="10669" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10671" end="10844" value="ById(String id) throws DaoException {&#xD;&#xA;        Connection cnx = null;&#xD;&#xA;        Statement statement = null;&#xD;&#xA;        ResultSet rs = null;&#xD;&#xA;&#xD;&#xA;        try {&#xD;&#xA;            cnx = "/>
        <statements xsi:type="statements:Feature" begin="10846" end="10868">
          <expression xsi:type="expressions:CallSet" begin="10846" end="10868">
            <calls begin="10846" end="10857" name="projectName" prefix=""/>
            <calls begin="10858" end="10868" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10870" end="11034" value="ConnectionUtils.getInstance().getConnection();&#xD;&#xA;            statement = cnx.createStatement();&#xD;&#xA;            rs = statement.executeQuery(FIND_BY_ID);&#xD;&#xA;&#xD;&#xA;            "/>
        <statements xsi:type="statements:Feature" begin="11036" end="11040">
          <expression xsi:type="expressions:CallSet" begin="11036" end="11040">
            <calls begin="11036" end="11040" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11042" end="11056" value=" result = new "/>
        <statements xsi:type="statements:Feature" begin="11058" end="11062">
          <expression xsi:type="expressions:CallSet" begin="11058" end="11062">
            <calls begin="11058" end="11062" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11064" end="11069" value="();&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="11087" end="11378">
          <iterator xsi:type="expressions:Parenthesis" begin="11087" end="11140">
            <expression xsi:type="expressions:CallSet" begin="11088" end="11139">
              <calls begin="11088" end="11097" name="attribute" prefix=""/>
              <calls begin="11098" end="11139" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="11118" end="11131" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="11133" end="11138"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="11145" end="11145" value=""/>
          <statements xsi:type="statements:If" begin="11166" end="11359">
            <condition xsi:type="expressions:Parenthesis" begin="11166" end="11178">
              <expression xsi:type="expressions:Not" begin="11167" end="11177">
                <expression xsi:type="expressions:CallSet" begin="11168" end="11177">
                  <calls begin="11168" end="11177" name="isDerived" prefix=""/>
                </expression>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="11183" end="11183" value=""/>
            <thenStatements xsi:type="statements:If" begin="11208" end="11336">
              <condition xsi:type="expressions:Parenthesis" begin="11208" end="11220">
                <expression xsi:type="expressions:Operator" begin="11209" end="11219" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="11209" end="11214">
                    <calls begin="11209" end="11214" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="11218" end="11219" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="11225" end="11247" value="            result.set"/>
              <thenStatements xsi:type="statements:Feature" begin="11249" end="11264">
                <expression xsi:type="expressions:CallSet" begin="11249" end="11264">
                  <calls begin="11249" end="11253" name="name" prefix=""/>
                  <calls begin="11254" end="11264" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="11266" end="11274" value="( rs.get"/>
              <thenStatements xsi:type="statements:Feature" begin="11276" end="11285">
                <expression xsi:type="expressions:CallSet" begin="11276" end="11285">
                  <calls begin="11276" end="11285" name="genRsType" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="11287" end="11288" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="11290" end="11308">
                <expression xsi:type="expressions:CallSet" begin="11290" end="11308">
                  <calls begin="11290" end="11294" name="name" prefix=""/>
                  <calls begin="11295" end="11308" name="toUpperCase" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="11310" end="11316" value=") );&#xD;&#xA;"/>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="11385" end="11843" value="            return result;&#xD;&#xA;        } catch (SQLException e) {&#xD;&#xA;            throw new DaoException(&quot;Erreur requete&quot;, e);&#xD;&#xA;        } finally {&#xD;&#xA;            try {&#xD;&#xA;                if(rs!=null){rs.close();}&#xD;&#xA;                if(statement!=null){statement.close();}&#xD;&#xA;                if(cnx!=null){cnx.close();}&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                throw new DaoException(&quot;Erreur de fermeture JDBC&quot;, e);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="11852" end="12950">
          <condition xsi:type="expressions:Parenthesis" begin="11852" end="11902">
            <expression xsi:type="expressions:Operator" begin="11853" end="11901" operator=">">
              <operands xsi:type="expressions:CallSet" begin="11853" end="11897">
                <calls begin="11853" end="11862" name="attribute" prefix=""/>
                <calls begin="11863" end="11889" name="filterWithStereotype" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="11884" end="11888" value="id"/>
                </calls>
                <calls begin="11890" end="11897" name="nSize" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="11900" end="11901" value="1"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="11907" end="11907" value=""/>
          <thenStatements xsi:type="statements:For" begin="11921" end="12939">
            <iterator xsi:type="expressions:Parenthesis" begin="11921" end="11978">
              <expression xsi:type="expressions:CallSet" begin="11922" end="11977">
                <calls begin="11922" end="11931" name="attribute" prefix=""/>
                <calls begin="11932" end="11958" name="filterWithStereotype" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="11953" end="11957" value="id"/>
                </calls>
                <calls begin="11959" end="11977" name="filter" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="11966" end="11976" value="Property"/>
                </calls>
              </expression>
            </iterator>
            <statements xsi:type="statements:Text" begin="11983" end="12005" value="    public Collection&lt;"/>
            <statements xsi:type="statements:Feature" begin="12007" end="12011">
              <expression xsi:type="expressions:CallSet" begin="12007" end="12011">
                <calls begin="12007" end="12011" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12013" end="12019" value="> find"/>
            <statements xsi:type="statements:Feature" begin="12021" end="12025">
              <expression xsi:type="expressions:CallSet" begin="12021" end="12025">
                <calls begin="12021" end="12025" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12027" end="12030" value="sBy"/>
            <statements xsi:type="statements:Feature" begin="12032" end="12036">
              <expression xsi:type="expressions:CallSet" begin="12032" end="12036">
                <calls begin="12032" end="12036" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12038" end="12039" value="("/>
            <statements xsi:type="statements:Feature" begin="12041" end="12050">
              <expression xsi:type="expressions:CallSet" begin="12041" end="12050">
                <calls begin="12041" end="12045" name="type" prefix=""/>
                <calls begin="12046" end="12050" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12052" end="12053" value=" "/>
            <statements xsi:type="statements:Feature" begin="12055" end="12059">
              <expression xsi:type="expressions:CallSet" begin="12055" end="12059">
                <calls begin="12055" end="12059" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12061" end="12220" value=") throws DaoException {&#xD;&#xA;        Connection cnx = null;&#xD;&#xA;        Statement statement = null;&#xD;&#xA;        ResultSet rs = null;&#xD;&#xA;&#xD;&#xA;        try {&#xD;&#xA;            cnx = "/>
            <statements xsi:type="statements:Feature" begin="12222" end="12244">
              <expression xsi:type="expressions:CallSet" begin="12222" end="12244">
                <calls begin="12222" end="12233" name="projectName" prefix=""/>
                <calls begin="12234" end="12244" name="toU1Case" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12246" end="12390" value="ConnectionUtils.getInstance().getConnection();&#xD;&#xA;            statement = cnx.createStatement();&#xD;&#xA;            rs = statement.executeQuery(FIND_BY_"/>
            <statements xsi:type="statements:Feature" begin="12392" end="12412">
              <expression xsi:type="expressions:CallSet" begin="12392" end="12412">
                <calls begin="12392" end="12396" name="name" prefix=""/>
                <calls begin="12397" end="12412" name="toSqlNotation" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12414" end="12443" value=");&#xD;&#xA;&#xD;&#xA;            Collection&lt;"/>
            <statements xsi:type="statements:Feature" begin="12445" end="12449">
              <expression xsi:type="expressions:CallSet" begin="12445" end="12449">
                <calls begin="12445" end="12449" name="name" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="12451" end="12931" value="> result = createList(rs);&#xD;&#xA;            return result;&#xD;&#xA;        } catch (SQLException e) {&#xD;&#xA;            throw new DaoException(&quot;Erreur requete&quot;, e);&#xD;&#xA;        } finally {&#xD;&#xA;            try {&#xD;&#xA;                if(rs!=null){rs.close();}&#xD;&#xA;                if(statement!=null){statement.close();}&#xD;&#xA;                if(cnx!=null){cnx.close();}&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                throw new DaoException(&quot;Erreur de fermeture JDBC&quot;, e);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;"/>
          </thenStatements>
        </statements>
        <statements xsi:type="statements:Text" begin="12957" end="12965" value="&#xD;&#xA;    &#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="12969" end="13012" value=" Generate additional methods d�claration "/>
        <statements xsi:type="statements:For" begin="13024" end="13373">
          <iterator xsi:type="expressions:Parenthesis" begin="13024" end="13040">
            <expression xsi:type="expressions:CallSet" begin="13025" end="13039">
              <calls begin="13025" end="13039" name="ownedOperation" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="13045" end="13045" value=""/>
          <statements xsi:type="statements:Comment" begin="13053" end="13093" value=" Generate methods with find stereotypes "/>
          <statements xsi:type="statements:Text" begin="13099" end="13099" value=""/>
          <statements xsi:type="statements:If" begin="13108" end="13366">
            <condition xsi:type="expressions:Parenthesis" begin="13108" end="13131">
              <expression xsi:type="expressions:CallSet" begin="13109" end="13130">
                <calls begin="13109" end="13130" name="hasStereotype" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="13123" end="13129" value="find"/>
                </calls>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="13136" end="13140" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="13142" end="13157">
              <expression xsi:type="expressions:CallSet" begin="13142" end="13157">
                <calls begin="13142" end="13157" name="generateJavadoc" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="13159" end="13172" value="&#xD;&#xA;    public "/>
            <thenStatements xsi:type="statements:Feature" begin="13174" end="13204">
              <expression xsi:type="expressions:CallSet" begin="13174" end="13204">
                <calls begin="13174" end="13186" name="returnResult" prefix=""/>
                <calls begin="13187" end="13204" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="13206" end="13207" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="13209" end="13213">
              <expression xsi:type="expressions:CallSet" begin="13209" end="13213">
                <calls begin="13209" end="13213" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="13215" end="13216" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="13218" end="13236">
              <expression xsi:type="expressions:CallSet" begin="13218" end="13236">
                <calls begin="13218" end="13236" name="generateParameters" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="13238" end="13274" value=") throws DaoException {&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="13276" end="13289">
              <expression xsi:type="expressions:CallSet" begin="13276" end="13289">
                <calls begin="13276" end="13289" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="13291" end="13295" value=" of "/>
            <thenStatements xsi:type="statements:Feature" begin="13297" end="13301">
              <expression xsi:type="expressions:CallSet" begin="13297" end="13301">
                <calls begin="13297" end="13301" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="13303" end="13338" value="&#xD;&#xA;        return null;&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="13340" end="13351">
              <expression xsi:type="expressions:CallSet" begin="13340" end="13351">
                <calls begin="13340" end="13351" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="13353" end="13362" value="&#xD;&#xA;    }&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="13380" end="13388" value="&#xD;&#xA;    //"/>
        <statements xsi:type="statements:Feature" begin="13390" end="13403">
          <expression xsi:type="expressions:CallSet" begin="13390" end="13403">
            <calls begin="13390" end="13403" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13405" end="13413" value="&#xD;&#xA;    //"/>
        <statements xsi:type="statements:Feature" begin="13415" end="13426">
          <expression xsi:type="expressions:CallSet" begin="13415" end="13426">
            <calls begin="13415" end="13426" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13428" end="13431" value="&#xD;&#xA;}"/>
      </scripts>
      <scripts begin="13479" end="13498">
        <descriptor begin="13444" end="13475" name="jdbcPackage" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="13481" end="13491">
          <expression xsi:type="expressions:CallSet" begin="13481" end="13491">
            <calls begin="13481" end="13491" name="daoPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13493" end="13498" value=".jdbc"/>
      </scripts>
      <scripts begin="13551" end="13580">
        <descriptor begin="13511" end="13547" name="genComparator" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="13553" end="13573">
          <expression xsi:type="expressions:CallSet" begin="13553" end="13573">
            <calls begin="13553" end="13557" name="name" prefix=""/>
            <calls begin="13558" end="13573" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="13575" end="13580" value=" = ? "/>
      </scripts>
      <scripts begin="13629" end="13661">
        <descriptor begin="13593" end="13625" name="genRsType" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="13631" end="13659">
          <expression xsi:type="expressions:CallSet" begin="13631" end="13659">
            <calls begin="13631" end="13648" name="convertToJavaType" prefix=""/>
            <calls begin="13649" end="13659" name="toU1Case" prefix=""/>
          </expression>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.memcache.dao-memcache-dao.properties" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.0" beginTag="&lt;%" endTag="%>">
      <scripts begin="1000" end="1207">
        <descriptor begin="912" end="996" name="generateProperties" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="959" end="978">
              <expression xsi:type="expressions:CallSet" begin="959" end="978">
                <calls begin="959" end="978" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="980" end="995" value="/dao.properties"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:For" begin="1006" end="1202">
          <iterator xsi:type="expressions:Parenthesis" begin="1006" end="1048">
            <expression xsi:type="expressions:CallSet" begin="1007" end="1047">
              <calls begin="1007" end="1031" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1023" end="1030" value="Class"/>
              </calls>
              <calls begin="1032" end="1047" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1039" end="1046" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1053" end="1053" value=""/>
          <statements xsi:type="statements:If" begin="1062" end="1195">
            <condition xsi:type="expressions:Parenthesis" begin="1062" end="1111">
              <expression xsi:type="expressions:Operator" begin="1063" end="1110" operator="||">
                <operands xsi:type="expressions:CallSet" begin="1063" end="1086">
                  <calls begin="1063" end="1086" name="hasStereotype" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1077" end="1085" value="Entity"/>
                  </calls>
                </operands>
                <operands xsi:type="expressions:CallSet" begin="1090" end="1110">
                  <calls begin="1090" end="1110" name="hasStereotype" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1104" end="1109" value="Dao"/>
                  </calls>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Feature" begin="1118" end="1143">
              <expression xsi:type="expressions:CallSet" begin="1118" end="1143">
                <calls begin="1118" end="1143" name="daoInterfaceQualifiedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1145" end="1146" value="="/>
            <thenStatements xsi:type="statements:Feature" begin="1148" end="1158">
              <expression xsi:type="expressions:CallSet" begin="1148" end="1158">
                <calls begin="1148" end="1158" name="daoPackage" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1160" end="1178" value=".memcache.MemCache"/>
            <thenStatements xsi:type="statements:Feature" begin="1180" end="1184">
              <expression xsi:type="expressions:CallSet" begin="1180" end="1184">
                <calls begin="1180" end="1184" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1186" end="1191" value="Dao&#xD;&#xA;"/>
          </statements>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.memcache.dao-memcache-direct" imports="/0/@resources.17 /0/@resources.0 /0/@resources.18 /0/@resources.19 /0/@resources.20" beginTag="&lt;%" endTag="%>">
      <scripts begin="919" end="1033">
        <descriptor begin="883" end="915" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="924" end="1028">
          <condition xsi:type="expressions:Parenthesis" begin="924" end="949">
            <expression xsi:type="expressions:CallSet" begin="925" end="948">
              <calls begin="925" end="948" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="939" end="947" value="Entity"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="956" end="970">
            <expression xsi:type="expressions:CallSet" begin="956" end="970">
              <calls begin="956" end="970" name="pathToMainJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="972" end="973" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="975" end="999">
            <expression xsi:type="expressions:CallSet" begin="975" end="999">
              <calls begin="975" end="990" name="memcachePackage" prefix=""/>
              <calls begin="991" end="999" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1001" end="1010" value="/MemCache"/>
          <thenStatements xsi:type="statements:Feature" begin="1012" end="1016">
            <expression xsi:type="expressions:CallSet" begin="1012" end="1016">
              <calls begin="1012" end="1016" name="name" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1018" end="1028" value="Dao.java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1102" end="3039">
        <descriptor begin="1046" end="1098" name="generate" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1083" end="1095">
              <expression xsi:type="expressions:CallSet" begin="1083" end="1095">
                <calls begin="1083" end="1095" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1102" end="1110" value="package "/>
        <statements xsi:type="statements:Feature" begin="1112" end="1127">
          <expression xsi:type="expressions:CallSet" begin="1112" end="1127">
            <calls begin="1112" end="1127" name="memcachePackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1129" end="1137" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1139" end="1152">
          <expression xsi:type="expressions:CallSet" begin="1139" end="1152">
            <calls begin="1139" end="1152" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1154" end="1281" value=" for import &#xD;&#xA;import java.util.ArrayList;&#xD;&#xA;import java.util.Collection;&#xD;&#xA;import java.util.Hashtable;&#xD;&#xA;import java.util.Map;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1283" end="1301">
          <expression xsi:type="expressions:CallSet" begin="1283" end="1301">
            <calls begin="1283" end="1301" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1303" end="1312" value="&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1314" end="1333">
          <expression xsi:type="expressions:CallSet" begin="1314" end="1333">
            <calls begin="1314" end="1333" name="entityQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1335" end="1345" value=";&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1347" end="1372">
          <expression xsi:type="expressions:CallSet" begin="1347" end="1372">
            <calls begin="1347" end="1372" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1374" end="1382" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1384" end="1395">
          <expression xsi:type="expressions:CallSet" begin="1384" end="1395">
            <calls begin="1384" end="1395" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1397" end="1434" value=" for import &#xD;&#xA;&#xD;&#xA;public class MemCache"/>
        <statements xsi:type="statements:Feature" begin="1436" end="1440">
          <expression xsi:type="expressions:CallSet" begin="1436" end="1440">
            <calls begin="1436" end="1440" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1442" end="1457" value="Dao implements "/>
        <statements xsi:type="statements:Feature" begin="1459" end="1475">
          <expression xsi:type="expressions:CallSet" begin="1459" end="1475">
            <calls begin="1459" end="1475" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1477" end="1520" value=" {&#xD;&#xA;    &#xD;&#xA;    protected static Map&lt;String, "/>
        <statements xsi:type="statements:Feature" begin="1522" end="1526">
          <expression xsi:type="expressions:CallSet" begin="1522" end="1526">
            <calls begin="1522" end="1526" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1528" end="1530" value="> "/>
        <statements xsi:type="statements:Feature" begin="1532" end="1547">
          <expression xsi:type="expressions:CallSet" begin="1532" end="1547">
            <calls begin="1532" end="1536" name="name" prefix=""/>
            <calls begin="1537" end="1547" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1549" end="1580" value="sCache = new Hashtable&lt;String, "/>
        <statements xsi:type="statements:Feature" begin="1582" end="1586">
          <expression xsi:type="expressions:CallSet" begin="1582" end="1586">
            <calls begin="1582" end="1586" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1588" end="1622" value=">();&#xD;&#xA;    &#xD;&#xA;    public void create"/>
        <statements xsi:type="statements:Feature" begin="1624" end="1628">
          <expression xsi:type="expressions:CallSet" begin="1624" end="1628">
            <calls begin="1624" end="1628" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1630" end="1631" value="("/>
        <statements xsi:type="statements:Feature" begin="1633" end="1637">
          <expression xsi:type="expressions:CallSet" begin="1633" end="1637">
            <calls begin="1633" end="1637" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1639" end="1679" value=" entity) throws DaoException {&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="1681" end="1694">
          <expression xsi:type="expressions:CallSet" begin="1681" end="1694">
            <calls begin="1681" end="1685" name="name" prefix=""/>
            <calls begin="1686" end="1694" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1696" end="1768" value="sCache.put(entity.getId(), entity);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public void update"/>
        <statements xsi:type="statements:Feature" begin="1770" end="1774">
          <expression xsi:type="expressions:CallSet" begin="1770" end="1774">
            <calls begin="1770" end="1774" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1776" end="1777" value="("/>
        <statements xsi:type="statements:Feature" begin="1779" end="1783">
          <expression xsi:type="expressions:CallSet" begin="1779" end="1783">
            <calls begin="1779" end="1783" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1785" end="1830" value=" entity) throws DaoException {&#xD;&#xA;        if (!"/>
        <statements xsi:type="statements:Feature" begin="1832" end="1845">
          <expression xsi:type="expressions:CallSet" begin="1832" end="1845">
            <calls begin="1832" end="1836" name="name" prefix=""/>
            <calls begin="1837" end="1845" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1847" end="1922" value="sCache.containsKey(entity.getId())) {&#xD;&#xA;            throw new DaoException(&quot;"/>
        <statements xsi:type="statements:Feature" begin="1924" end="1928">
          <expression xsi:type="expressions:CallSet" begin="1924" end="1928">
            <calls begin="1924" end="1928" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1930" end="2009" value=" (id : &quot; + entity.getId() + &quot;) to update doesn't exist.&quot;);&#xD;&#xA;        }&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="2011" end="2024">
          <expression xsi:type="expressions:CallSet" begin="2011" end="2024">
            <calls begin="2011" end="2015" name="name" prefix=""/>
            <calls begin="2016" end="2024" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2026" end="2098" value="sCache.put(entity.getId(), entity);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public void delete"/>
        <statements xsi:type="statements:Feature" begin="2100" end="2104">
          <expression xsi:type="expressions:CallSet" begin="2100" end="2104">
            <calls begin="2100" end="2104" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2106" end="2107" value="("/>
        <statements xsi:type="statements:Feature" begin="2109" end="2113">
          <expression xsi:type="expressions:CallSet" begin="2109" end="2113">
            <calls begin="2109" end="2113" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2115" end="2155" value=" entity) throws DaoException {&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="2157" end="2170">
          <expression xsi:type="expressions:CallSet" begin="2157" end="2170">
            <calls begin="2157" end="2161" name="name" prefix=""/>
            <calls begin="2162" end="2170" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2172" end="2239" value="sCache.remove(entity.getId());&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="2241" end="2245">
          <expression xsi:type="expressions:CallSet" begin="2241" end="2245">
            <calls begin="2241" end="2245" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2247" end="2256" value="> findAll"/>
        <statements xsi:type="statements:Feature" begin="2258" end="2262">
          <expression xsi:type="expressions:CallSet" begin="2258" end="2262">
            <calls begin="2258" end="2262" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2264" end="2310" value="s() throws DaoException {&#xD;&#xA;        Collection&lt;"/>
        <statements xsi:type="statements:Feature" begin="2312" end="2316">
          <expression xsi:type="expressions:CallSet" begin="2312" end="2316">
            <calls begin="2312" end="2316" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2318" end="2344" value="> allList = new ArrayList&lt;"/>
        <statements xsi:type="statements:Feature" begin="2346" end="2350">
          <expression xsi:type="expressions:CallSet" begin="2346" end="2350">
            <calls begin="2346" end="2350" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2352" end="2381" value=">();&#xD;&#xA;        allList.addAll("/>
        <statements xsi:type="statements:Feature" begin="2383" end="2396">
          <expression xsi:type="expressions:CallSet" begin="2383" end="2396">
            <calls begin="2383" end="2387" name="name" prefix=""/>
            <calls begin="2388" end="2396" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2398" end="2466" value="sCache.values());&#xD;&#xA;        return allList;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public "/>
        <statements xsi:type="statements:Feature" begin="2468" end="2472">
          <expression xsi:type="expressions:CallSet" begin="2468" end="2472">
            <calls begin="2468" end="2472" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2474" end="2479" value=" find"/>
        <statements xsi:type="statements:Feature" begin="2481" end="2485">
          <expression xsi:type="expressions:CallSet" begin="2481" end="2485">
            <calls begin="2481" end="2485" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2487" end="2534" value="ById(String id) throws DaoException {&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="2536" end="2540">
          <expression xsi:type="expressions:CallSet" begin="2536" end="2540">
            <calls begin="2536" end="2540" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2542" end="2552" value=" result = "/>
        <statements xsi:type="statements:Feature" begin="2554" end="2567">
          <expression xsi:type="expressions:CallSet" begin="2554" end="2567">
            <calls begin="2554" end="2558" name="name" prefix=""/>
            <calls begin="2559" end="2567" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2569" end="2623" value="sCache.get(id);&#xD;&#xA;        return result;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="2627" end="2670" value=" Generate additional methods d�claration "/>
        <statements xsi:type="statements:For" begin="2682" end="3031">
          <iterator xsi:type="expressions:Parenthesis" begin="2682" end="2698">
            <expression xsi:type="expressions:CallSet" begin="2683" end="2697">
              <calls begin="2683" end="2697" name="ownedOperation" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="2703" end="2703" value=""/>
          <statements xsi:type="statements:Comment" begin="2711" end="2751" value=" Generate methods with find stereotypes "/>
          <statements xsi:type="statements:Text" begin="2757" end="2757" value=""/>
          <statements xsi:type="statements:If" begin="2766" end="3024">
            <condition xsi:type="expressions:Parenthesis" begin="2766" end="2789">
              <expression xsi:type="expressions:CallSet" begin="2767" end="2788">
                <calls begin="2767" end="2788" name="hasStereotype" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="2781" end="2787" value="find"/>
                </calls>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="2794" end="2798" value="    "/>
            <thenStatements xsi:type="statements:Feature" begin="2800" end="2815">
              <expression xsi:type="expressions:CallSet" begin="2800" end="2815">
                <calls begin="2800" end="2815" name="generateJavadoc" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2817" end="2830" value="&#xD;&#xA;    public "/>
            <thenStatements xsi:type="statements:Feature" begin="2832" end="2862">
              <expression xsi:type="expressions:CallSet" begin="2832" end="2862">
                <calls begin="2832" end="2844" name="returnResult" prefix=""/>
                <calls begin="2845" end="2862" name="convertToJavaType" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2864" end="2865" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="2867" end="2871">
              <expression xsi:type="expressions:CallSet" begin="2867" end="2871">
                <calls begin="2867" end="2871" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2873" end="2874" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="2876" end="2894">
              <expression xsi:type="expressions:CallSet" begin="2876" end="2894">
                <calls begin="2876" end="2894" name="generateParameters" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2896" end="2932" value=") throws DaoException {&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="2934" end="2947">
              <expression xsi:type="expressions:CallSet" begin="2934" end="2947">
                <calls begin="2934" end="2947" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2949" end="2953" value=" of "/>
            <thenStatements xsi:type="statements:Feature" begin="2955" end="2959">
              <expression xsi:type="expressions:CallSet" begin="2955" end="2959">
                <calls begin="2955" end="2959" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2961" end="2996" value="&#xD;&#xA;        return null;&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="2998" end="3009">
              <expression xsi:type="expressions:CallSet" begin="2998" end="3009">
                <calls begin="2998" end="3009" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3011" end="3020" value="&#xD;&#xA;    }&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="3038" end="3039" value="}"/>
      </scripts>
      <scripts begin="3091" end="3114">
        <descriptor begin="3052" end="3087" name="memcachePackage" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="3093" end="3103">
          <expression xsi:type="expressions:CallSet" begin="3093" end="3103">
            <calls begin="3093" end="3103" name="daoPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3105" end="3114" value=".memcache"/>
      </scripts>
      <scripts begin="3157" end="3368">
        <descriptor begin="3127" end="3153" name="getIds" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:For" begin="3163" end="3363">
          <iterator xsi:type="expressions:Parenthesis" begin="3163" end="3174">
            <expression xsi:type="expressions:CallSet" begin="3164" end="3173">
              <calls begin="3164" end="3173" name="attribute" prefix=""/>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3179" end="3179" value=""/>
          <statements xsi:type="statements:If" begin="3188" end="3356">
            <condition xsi:type="expressions:Parenthesis" begin="3188" end="3209">
              <expression xsi:type="expressions:CallSet" begin="3189" end="3208">
                <calls begin="3189" end="3208" name="hasStereotype" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="3203" end="3207" value="id"/>
                </calls>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="3214" end="3214" value=""/>
            <thenStatements xsi:type="statements:If" begin="3227" end="3345">
              <condition xsi:type="expressions:Parenthesis" begin="3227" end="3250">
                <expression xsi:type="expressions:Operator" begin="3228" end="3249" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="3228" end="3237">
                    <calls begin="3228" end="3232" name="type" prefix=""/>
                    <calls begin="3233" end="3237" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="3241" end="3249" value="String"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="3255" end="3265" value="entity.get"/>
              <thenStatements xsi:type="statements:Feature" begin="3267" end="3282">
                <expression xsi:type="expressions:CallSet" begin="3267" end="3282">
                  <calls begin="3267" end="3271" name="name" prefix=""/>
                  <calls begin="3272" end="3282" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3284" end="3286" value="()"/>
              <elseStatements xsi:type="statements:Text" begin="3298" end="3323" value="String.valueof(entity.get"/>
              <elseStatements xsi:type="statements:Feature" begin="3325" end="3340">
                <expression xsi:type="expressions:CallSet" begin="3325" end="3340">
                  <calls begin="3325" end="3329" name="name" prefix=""/>
                  <calls begin="3330" end="3340" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="3342" end="3345" value="())"/>
            </thenStatements>
          </statements>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.test.dao-interface-direct-test-junit-testsuite" imports="/0/@resources.17 /0/@resources.0 /0/@resources.18 /0/@resources.19 /0/@resources.20" beginTag="&lt;%" endTag="%>">
      <scripts begin="920" end="1006">
        <descriptor begin="884" end="916" name="fullFilePath" type="Model">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="922" end="936">
          <expression xsi:type="expressions:CallSet" begin="922" end="936">
            <calls begin="922" end="936" name="pathToTestJava" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="938" end="939" value="/"/>
        <statements xsi:type="statements:Feature" begin="941" end="961">
          <expression xsi:type="expressions:CallSet" begin="941" end="961">
            <calls begin="941" end="952" name="testPackage" prefix=""/>
            <calls begin="953" end="961" name="toPath" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="963" end="967" value="/All"/>
        <statements xsi:type="statements:Feature" begin="969" end="991">
          <expression xsi:type="expressions:CallSet" begin="969" end="991">
            <calls begin="969" end="980" name="projectName" prefix=""/>
            <calls begin="981" end="991" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="993" end="1006" value="DaoTests.java"/>
      </scripts>
      <scripts begin="1075" end="1972">
        <descriptor begin="1019" end="1071" name="generate" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="1056" end="1068">
              <expression xsi:type="expressions:CallSet" begin="1056" end="1068">
                <calls begin="1056" end="1068" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1075" end="1083" value="package "/>
        <statements xsi:type="statements:Feature" begin="1085" end="1096">
          <expression xsi:type="expressions:CallSet" begin="1085" end="1096">
            <calls begin="1085" end="1096" name="testPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1098" end="1170" value=";&#xD;&#xA;&#xD;&#xA;import junit.framework.Test;&#xD;&#xA;import junit.framework.TestSuite;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1176" end="1300">
          <iterator xsi:type="expressions:Parenthesis" begin="1176" end="1218">
            <expression xsi:type="expressions:CallSet" begin="1177" end="1217">
              <calls begin="1177" end="1201" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1193" end="1200" value="Class"/>
              </calls>
              <calls begin="1202" end="1217" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1209" end="1216" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:If" begin="1226" end="1295">
            <condition xsi:type="expressions:Parenthesis" begin="1226" end="1236">
              <expression xsi:type="expressions:CallSet" begin="1227" end="1235">
                <calls begin="1227" end="1235" name="isEntity" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1241" end="1248" value="import "/>
            <thenStatements xsi:type="statements:Feature" begin="1250" end="1260">
              <expression xsi:type="expressions:CallSet" begin="1250" end="1260">
                <calls begin="1250" end="1260" name="daoPackage" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1262" end="1268" value=".test."/>
            <thenStatements xsi:type="statements:Feature" begin="1270" end="1286">
              <expression xsi:type="expressions:CallSet" begin="1270" end="1286">
                <calls begin="1270" end="1286" name="daoInterfaceName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1288" end="1295" value="Test;&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="1307" end="1356" value="&#xD;&#xA;/**&#xD;&#xA; * Entry point for JUnit tests of project "/>
        <statements xsi:type="statements:Feature" begin="1358" end="1369">
          <expression xsi:type="expressions:CallSet" begin="1358" end="1369">
            <calls begin="1358" end="1369" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1371" end="1395" value=".&#xD;&#xA; */&#xD;&#xA;public class All"/>
        <statements xsi:type="statements:Feature" begin="1397" end="1419">
          <expression xsi:type="expressions:CallSet" begin="1397" end="1419">
            <calls begin="1397" end="1408" name="projectName" prefix=""/>
            <calls begin="1409" end="1419" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1421" end="1574" value="DaoTests {&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Computes a test suite with all the generated test cases and returns it.&#xD;&#xA;     * @return Returns the test suite for project "/>
        <statements xsi:type="statements:Feature" begin="1576" end="1587">
          <expression xsi:type="expressions:CallSet" begin="1576" end="1587">
            <calls begin="1576" end="1587" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1589" end="1703" value=".&#xD;&#xA;     */&#xD;&#xA;    public static Test suite() {&#xD;&#xA;        TestSuite suite = new TestSuite(&#xD;&#xA;                &quot;Test for "/>
        <statements xsi:type="statements:Feature" begin="1705" end="1716">
          <expression xsi:type="expressions:CallSet" begin="1705" end="1716">
            <calls begin="1705" end="1716" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1718" end="1748" value="&quot;);&#xD;&#xA;        //$JUnit-BEGIN$&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1762" end="1901">
          <iterator xsi:type="expressions:Parenthesis" begin="1762" end="1804">
            <expression xsi:type="expressions:CallSet" begin="1763" end="1803">
              <calls begin="1763" end="1787" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1779" end="1786" value="Class"/>
              </calls>
              <calls begin="1788" end="1803" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1795" end="1802" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:If" begin="1812" end="1896">
            <condition xsi:type="expressions:Parenthesis" begin="1812" end="1822">
              <expression xsi:type="expressions:CallSet" begin="1813" end="1821">
                <calls begin="1813" end="1821" name="isEntity" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1827" end="1854" value="        suite.addTestSuite("/>
            <thenStatements xsi:type="statements:Feature" begin="1856" end="1872">
              <expression xsi:type="expressions:CallSet" begin="1856" end="1872">
                <calls begin="1856" end="1872" name="daoInterfaceName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1874" end="1888" value="Test.class);&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="1908" end="1964" value="        //$JUnit-END$&#xD;&#xA;        return suite;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;}"/>
        <statements xsi:type="statements:Feature" begin="1966" end="1970">
          <expression xsi:type="expressions:StringLiteral" begin="1966" end="1970" value="&#xA;"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.java.dao.test.dao-interface-direct-test-junit" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.0" beginTag="&lt;%" endTag="%>">
      <scripts begin="920" end="1023">
        <descriptor begin="884" end="916" name="fullFilePath" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="925" end="1018">
          <condition xsi:type="expressions:Parenthesis" begin="925" end="935">
            <expression xsi:type="expressions:CallSet" begin="926" end="934">
              <calls begin="926" end="934" name="isEntity" prefix=""/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="942" end="956">
            <expression xsi:type="expressions:CallSet" begin="942" end="956">
              <calls begin="942" end="956" name="pathToTestJava" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="958" end="959" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="961" end="984">
            <expression xsi:type="expressions:CallSet" begin="961" end="984">
              <calls begin="961" end="975" name="objectsPackage" prefix=""/>
              <calls begin="976" end="984" name="toPath" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="986" end="987" value="/"/>
          <thenStatements xsi:type="statements:Feature" begin="989" end="1005">
            <expression xsi:type="expressions:CallSet" begin="989" end="1005">
              <calls begin="989" end="1005" name="daoInterfaceName" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="1007" end="1018" value="Test.java&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="1092" end="11035">
        <descriptor begin="1036" end="1088" name="generate" type="Class">
          <file>
            <statements xsi:type="statements:Feature" begin="1073" end="1085">
              <expression xsi:type="expressions:CallSet" begin="1073" end="1085">
                <calls begin="1073" end="1085" name="fullFilePath" prefix=""/>
              </expression>
            </statements>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1092" end="1100" value="package "/>
        <statements xsi:type="statements:Feature" begin="1102" end="1116">
          <expression xsi:type="expressions:CallSet" begin="1102" end="1116">
            <calls begin="1102" end="1116" name="objectsPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1118" end="1126" value=";&#xD;&#xA;&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1128" end="1141">
          <expression xsi:type="expressions:CallSet" begin="1128" end="1141">
            <calls begin="1128" end="1141" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1143" end="1156" value=" for import&#xD;&#xA;"/>
        <statements xsi:type="statements:If" begin="1161" end="1231">
          <condition xsi:type="expressions:Parenthesis" begin="1161" end="1202">
            <expression xsi:type="expressions:CallSet" begin="1162" end="1201">
              <calls begin="1162" end="1171" name="attribute" prefix=""/>
              <calls begin="1172" end="1201" name="select" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1179" end="1200" value="type.name == 'Date'"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1207" end="1231" value="import java.util.Date;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:If" begin="1243" end="1389">
          <condition xsi:type="expressions:Parenthesis" begin="1243" end="1331">
            <expression xsi:type="expressions:CallSet" begin="1244" end="1330">
              <calls begin="1244" end="1253" name="attribute" prefix=""/>
              <calls begin="1254" end="1295" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1274" end="1287" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="1289" end="1294"/>
              </calls>
              <calls begin="1296" end="1330" name="select" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1303" end="1329" value="upper > 1 || upper == -1"/>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="1336" end="1389" value="import java.util.ArrayList;&#xD;&#xA;import java.util.List;&#xD;&#xA;"/>
        </statements>
        <statements xsi:type="statements:Text" begin="1396" end="1464" value="import junit.framework.Assert;&#xD;&#xA;import junit.framework.TestCase;&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="1466" end="1484">
          <expression xsi:type="expressions:CallSet" begin="1466" end="1484">
            <calls begin="1466" end="1484" name="importDaoException" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1486" end="1495" value="&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1497" end="1545">
          <expression xsi:type="expressions:CallSet" begin="1497" end="1545">
            <calls begin="1497" end="1516" name="eContainer" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="1508" end="1515" value="Model"/>
            </calls>
            <calls begin="1517" end="1545" name="daoFactoryQualifiedClassName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1547" end="1557" value=";&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1559" end="1584">
          <expression xsi:type="expressions:CallSet" begin="1559" end="1584">
            <calls begin="1559" end="1584" name="daoInterfaceQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1586" end="1596" value=";&#xD;&#xA;import "/>
        <statements xsi:type="statements:Feature" begin="1598" end="1617">
          <expression xsi:type="expressions:CallSet" begin="1598" end="1617">
            <calls begin="1598" end="1617" name="entityQualifiedName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1619" end="1622" value=";&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1628" end="1790">
          <iterator xsi:type="expressions:Parenthesis" begin="1628" end="1722">
            <expression xsi:type="expressions:CallSet" begin="1629" end="1721">
              <calls begin="1629" end="1646" name="getAssociations" prefix=""/>
              <calls begin="1647" end="1668" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1654" end="1667" value="Association"/>
              </calls>
              <calls begin="1669" end="1706" name="oppositeAttributeOf" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="1689" end="1705">
                  <calls begin="1689" end="1705" name="current" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1697" end="1704" value="Class"/>
                  </calls>
                </arguments>
                <filter xsi:type="expressions:CallSet" begin="1707" end="1720">
                  <calls begin="1707" end="1720" name="isNavigable" prefix=""/>
                </filter>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:If" begin="1730" end="1785">
            <condition xsi:type="expressions:Parenthesis" begin="1730" end="1742">
              <expression xsi:type="expressions:Operator" begin="1731" end="1741" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="1731" end="1736">
                  <calls begin="1731" end="1736" name="lower" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="1740" end="1741"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1747" end="1754" value="import "/>
            <thenStatements xsi:type="statements:Feature" begin="1756" end="1780">
              <expression xsi:type="expressions:CallSet" begin="1756" end="1780">
                <calls begin="1756" end="1760" name="type" prefix=""/>
                <calls begin="1761" end="1780" name="entityQualifiedName" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1782" end="1785" value=";&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="1797" end="1802" value="&#xD;&#xA;// "/>
        <statements xsi:type="statements:Feature" begin="1804" end="1815">
          <expression xsi:type="expressions:CallSet" begin="1804" end="1815">
            <calls begin="1804" end="1815" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1817" end="1845" value=" for import&#xD;&#xA;&#xD;&#xA;public class "/>
        <statements xsi:type="statements:Feature" begin="1847" end="1863">
          <expression xsi:type="expressions:CallSet" begin="1847" end="1863">
            <calls begin="1847" end="1863" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1865" end="1904" value="Test extends TestCase {&#xD;&#xA;&#xD;&#xA;    private "/>
        <statements xsi:type="statements:Feature" begin="1906" end="1922">
          <expression xsi:type="expressions:CallSet" begin="1906" end="1922">
            <calls begin="1906" end="1922" name="daoInterfaceName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1924" end="2038" value=" dao;&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    protected void setUp() throws Exception {&#xD;&#xA;        super.setUp();&#xD;&#xA;        this.dao = "/>
        <statements xsi:type="statements:Feature" begin="2040" end="2062">
          <expression xsi:type="expressions:CallSet" begin="2040" end="2062">
            <calls begin="2040" end="2051" name="projectName" prefix=""/>
            <calls begin="2052" end="2062" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2064" end="2078" value="DaoFactory.get"/>
        <statements xsi:type="statements:Feature" begin="2080" end="2084">
          <expression xsi:type="expressions:CallSet" begin="2080" end="2084">
            <calls begin="2080" end="2084" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2086" end="2105" value="Dao();&#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="2107" end="2120">
          <expression xsi:type="expressions:CallSet" begin="2107" end="2120">
            <calls begin="2107" end="2120" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2122" end="2146" value=" for setup &#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="2148" end="2159">
          <expression xsi:type="expressions:CallSet" begin="2148" end="2159">
            <calls begin="2148" end="2159" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2161" end="2312" value=" for setup &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    protected void tearDown() throws Exception {&#xD;&#xA;        super.tearDown();&#xD;&#xA;        this.dao = null;&#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="2314" end="2327">
          <expression xsi:type="expressions:CallSet" begin="2314" end="2327">
            <calls begin="2314" end="2327" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2329" end="2356" value=" for tearDown &#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="2358" end="2369">
          <expression xsi:type="expressions:CallSet" begin="2358" end="2369">
            <calls begin="2358" end="2369" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2371" end="2444" value=" for tearDown &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Test the creation of the entity "/>
        <statements xsi:type="statements:Feature" begin="2446" end="2450">
          <expression xsi:type="expressions:CallSet" begin="2446" end="2450">
            <calls begin="2446" end="2450" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2452" end="2617" value=".&lt;br/>&#xD;&#xA;     * &lt;ul>&lt;li>Step 1 : Create an entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 2 : Search the entity and verify it exist&lt;/li>&lt;/ul>&#xD;&#xA;     */&#xD;&#xA;    public final void testCreate"/>
        <statements xsi:type="statements:Feature" begin="2619" end="2623">
          <expression xsi:type="expressions:CallSet" begin="2619" end="2623">
            <calls begin="2619" end="2623" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2625" end="2715" value="() throws DaoException {        &#xD;&#xA;        // fill attributes with exemple values&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="2717" end="2721">
          <expression xsi:type="expressions:CallSet" begin="2717" end="2721">
            <calls begin="2717" end="2721" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2723" end="2724" value=" "/>
        <statements xsi:type="statements:Feature" begin="2726" end="2741">
          <expression xsi:type="expressions:CallSet" begin="2726" end="2741">
            <calls begin="2726" end="2730" name="name" prefix=""/>
            <calls begin="2731" end="2741" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2743" end="2749" value=" = get"/>
        <statements xsi:type="statements:Feature" begin="2751" end="2755">
          <expression xsi:type="expressions:CallSet" begin="2751" end="2755">
            <calls begin="2751" end="2755" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2757" end="2833" value="Exemple();&#xD;&#xA;        &#xD;&#xA;        // Execute the tested code&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="2835" end="2839">
          <expression xsi:type="expressions:CallSet" begin="2835" end="2839">
            <calls begin="2835" end="2839" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2841" end="2842" value="("/>
        <statements xsi:type="statements:Feature" begin="2844" end="2859">
          <expression xsi:type="expressions:CallSet" begin="2844" end="2859">
            <calls begin="2844" end="2848" name="name" prefix=""/>
            <calls begin="2849" end="2859" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2861" end="2937" value=");&#xD;&#xA;&#xD;&#xA;        // Verify result&#xD;&#xA;        boolean found = false;&#xD;&#xA;        for("/>
        <statements xsi:type="statements:Feature" begin="2939" end="2943">
          <expression xsi:type="expressions:CallSet" begin="2939" end="2943">
            <calls begin="2939" end="2943" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2945" end="2953" value=" current"/>
        <statements xsi:type="statements:Feature" begin="2955" end="2959">
          <expression xsi:type="expressions:CallSet" begin="2955" end="2959">
            <calls begin="2955" end="2959" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2961" end="2975" value=" : dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="2977" end="2981">
          <expression xsi:type="expressions:CallSet" begin="2977" end="2981">
            <calls begin="2977" end="2981" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2983" end="3014" value="s()) {&#xD;&#xA;            if (current"/>
        <statements xsi:type="statements:Feature" begin="3016" end="3020">
          <expression xsi:type="expressions:CallSet" begin="3016" end="3020">
            <calls begin="3016" end="3020" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3022" end="3030" value=".equals("/>
        <statements xsi:type="statements:Feature" begin="3032" end="3047">
          <expression xsi:type="expressions:CallSet" begin="3032" end="3047">
            <calls begin="3032" end="3036" name="name" prefix=""/>
            <calls begin="3037" end="3047" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3049" end="3139" value=")) {&#xD;&#xA;                found = true;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        Assert.assertTrue(&quot;"/>
        <statements xsi:type="statements:Feature" begin="3141" end="3145">
          <expression xsi:type="expressions:CallSet" begin="3141" end="3145">
            <calls begin="3141" end="3145" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3147" end="3231" value=" not created&quot;, found);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Test the modification of an entity "/>
        <statements xsi:type="statements:Feature" begin="3233" end="3237">
          <expression xsi:type="expressions:CallSet" begin="3233" end="3237">
            <calls begin="3233" end="3237" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3239" end="3459" value=".&lt;br/>&#xD;&#xA;     * &lt;ul>&lt;li>Step 1 : Create an entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 2 : Modify the entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 3 : Search the entity and verify the modified values&lt;/li>&lt;/ul>&#xD;&#xA;     */&#xD;&#xA;    public final void testUpdate"/>
        <statements xsi:type="statements:Feature" begin="3461" end="3465">
          <expression xsi:type="expressions:CallSet" begin="3461" end="3465">
            <calls begin="3461" end="3465" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3467" end="3534" value="() throws DaoException {&#xD;&#xA;        // Initialized the test&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="3536" end="3540">
          <expression xsi:type="expressions:CallSet" begin="3536" end="3540">
            <calls begin="3536" end="3540" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3542" end="3543" value=" "/>
        <statements xsi:type="statements:Feature" begin="3545" end="3560">
          <expression xsi:type="expressions:CallSet" begin="3545" end="3560">
            <calls begin="3545" end="3549" name="name" prefix=""/>
            <calls begin="3550" end="3560" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3562" end="3568" value=" = get"/>
        <statements xsi:type="statements:Feature" begin="3570" end="3574">
          <expression xsi:type="expressions:CallSet" begin="3570" end="3574">
            <calls begin="3570" end="3574" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3576" end="3606" value="Exemple();&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="3608" end="3612">
          <expression xsi:type="expressions:CallSet" begin="3608" end="3612">
            <calls begin="3608" end="3612" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3614" end="3615" value="("/>
        <statements xsi:type="statements:Feature" begin="3617" end="3632">
          <expression xsi:type="expressions:CallSet" begin="3617" end="3632">
            <calls begin="3617" end="3621" name="name" prefix=""/>
            <calls begin="3622" end="3632" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3634" end="3676" value=");&#xD;&#xA;&#xD;&#xA;        // Execute the tested code&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="3690" end="3954">
          <iterator xsi:type="expressions:Parenthesis" begin="3690" end="3743">
            <expression xsi:type="expressions:CallSet" begin="3691" end="3742">
              <calls begin="3691" end="3700" name="attribute" prefix=""/>
              <calls begin="3701" end="3742" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="3721" end="3734" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="3736" end="3741"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="3748" end="3748" value=""/>
          <statements xsi:type="statements:If" begin="3765" end="3939">
            <condition xsi:type="expressions:Parenthesis" begin="3765" end="3843">
              <expression xsi:type="expressions:Operator" begin="3766" end="3842" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="3766" end="3799">
                  <expression xsi:type="expressions:CallSet" begin="3767" end="3799">
                    <calls begin="3767" end="3799" name="hasStereotype" prefix="">
                      <arguments xsi:type="expressions:CallSet" begin="3781" end="3798">
                        <calls begin="3781" end="3798" name="getProperty" prefix="">
                          <arguments xsi:type="expressions:StringLiteral" begin="3793" end="3797" value="id"/>
                        </calls>
                      </arguments>
                    </calls>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Operator" begin="3803" end="3813" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="3803" end="3808">
                    <calls begin="3803" end="3808" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="3812" end="3813" value="1"/>
                </operands>
                <operands xsi:type="expressions:Not" begin="3817" end="3827">
                  <expression xsi:type="expressions:CallSet" begin="3818" end="3827">
                    <calls begin="3818" end="3827" name="isDerived" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="3831" end="3842">
                  <expression xsi:type="expressions:CallSet" begin="3832" end="3842">
                    <calls begin="3832" end="3842" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="3848" end="3856" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="3858" end="3879">
              <expression xsi:type="expressions:CallSet" begin="3858" end="3879">
                <calls begin="3858" end="3863" name="class" prefix=""/>
                <calls begin="3864" end="3868" name="name" prefix=""/>
                <calls begin="3869" end="3879" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3881" end="3885" value=".set"/>
            <thenStatements xsi:type="statements:Feature" begin="3887" end="3902">
              <expression xsi:type="expressions:CallSet" begin="3887" end="3902">
                <calls begin="3887" end="3891" name="name" prefix=""/>
                <calls begin="3892" end="3902" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3904" end="3905" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="3907" end="3921">
              <expression xsi:type="expressions:CallSet" begin="3907" end="3921">
                <calls begin="3907" end="3921" name="exempleValues2" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3923" end="3927" value=");&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="3961" end="3979" value="        dao.update"/>
        <statements xsi:type="statements:Feature" begin="3981" end="3985">
          <expression xsi:type="expressions:CallSet" begin="3981" end="3985">
            <calls begin="3981" end="3985" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3987" end="3988" value="("/>
        <statements xsi:type="statements:Feature" begin="3990" end="4005">
          <expression xsi:type="expressions:CallSet" begin="3990" end="4005">
            <calls begin="3990" end="3994" name="name" prefix=""/>
            <calls begin="3995" end="4005" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4007" end="4083" value=");&#xD;&#xA;&#xD;&#xA;        // Verify result&#xD;&#xA;        boolean found = false;&#xD;&#xA;        for("/>
        <statements xsi:type="statements:Feature" begin="4085" end="4089">
          <expression xsi:type="expressions:CallSet" begin="4085" end="4089">
            <calls begin="4085" end="4089" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4091" end="4099" value=" current"/>
        <statements xsi:type="statements:Feature" begin="4101" end="4105">
          <expression xsi:type="expressions:CallSet" begin="4101" end="4105">
            <calls begin="4101" end="4105" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4107" end="4121" value=" : dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="4123" end="4127">
          <expression xsi:type="expressions:CallSet" begin="4123" end="4127">
            <calls begin="4123" end="4127" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4129" end="4160" value="s()) {&#xD;&#xA;            if (current"/>
        <statements xsi:type="statements:Feature" begin="4162" end="4166">
          <expression xsi:type="expressions:CallSet" begin="4162" end="4166">
            <calls begin="4162" end="4166" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4168" end="4176" value=".equals("/>
        <statements xsi:type="statements:Feature" begin="4178" end="4193">
          <expression xsi:type="expressions:CallSet" begin="4178" end="4193">
            <calls begin="4178" end="4182" name="name" prefix=""/>
            <calls begin="4183" end="4193" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4195" end="4232" value=")) {&#xD;&#xA;                found = true;&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="4254" end="4629">
          <iterator xsi:type="expressions:Parenthesis" begin="4254" end="4307">
            <expression xsi:type="expressions:CallSet" begin="4255" end="4306">
              <calls begin="4255" end="4264" name="attribute" prefix=""/>
              <calls begin="4265" end="4306" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="4285" end="4298" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="4300" end="4305"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="4312" end="4312" value=""/>
          <statements xsi:type="statements:If" begin="4337" end="4606">
            <condition xsi:type="expressions:Parenthesis" begin="4337" end="4415">
              <expression xsi:type="expressions:Operator" begin="4338" end="4414" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="4338" end="4371">
                  <expression xsi:type="expressions:CallSet" begin="4339" end="4371">
                    <calls begin="4339" end="4371" name="hasStereotype" prefix="">
                      <arguments xsi:type="expressions:CallSet" begin="4353" end="4370">
                        <calls begin="4353" end="4370" name="getProperty" prefix="">
                          <arguments xsi:type="expressions:StringLiteral" begin="4365" end="4369" value="id"/>
                        </calls>
                      </arguments>
                    </calls>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Operator" begin="4375" end="4385" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="4375" end="4380">
                    <calls begin="4375" end="4380" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="4384" end="4385" value="1"/>
                </operands>
                <operands xsi:type="expressions:Not" begin="4389" end="4399">
                  <expression xsi:type="expressions:CallSet" begin="4390" end="4399">
                    <calls begin="4390" end="4399" name="isDerived" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="4403" end="4414">
                  <expression xsi:type="expressions:CallSet" begin="4404" end="4414">
                    <calls begin="4404" end="4414" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="4420" end="4463" value="                Assert.assertEquals(&quot;Value "/>
            <thenStatements xsi:type="statements:Feature" begin="4465" end="4480">
              <expression xsi:type="expressions:CallSet" begin="4465" end="4480">
                <calls begin="4465" end="4469" name="name" prefix=""/>
                <calls begin="4470" end="4480" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4482" end="4498" value=" not modified&quot;, "/>
            <thenStatements xsi:type="statements:Feature" begin="4500" end="4514">
              <expression xsi:type="expressions:CallSet" begin="4500" end="4514">
                <calls begin="4500" end="4514" name="exempleValues2" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4516" end="4518" value=", "/>
            <thenStatements xsi:type="statements:Feature" begin="4520" end="4555">
              <expression xsi:type="expressions:CallSet" begin="4520" end="4555">
                <calls begin="4520" end="4539" name="featuringClassifier" prefix=""/>
                <calls begin="4540" end="4544" name="name" prefix=""/>
                <calls begin="4545" end="4555" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4557" end="4561" value=".get"/>
            <thenStatements xsi:type="statements:Feature" begin="4563" end="4578">
              <expression xsi:type="expressions:CallSet" begin="4563" end="4578">
                <calls begin="4563" end="4567" name="name" prefix=""/>
                <calls begin="4568" end="4578" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="4580" end="4586" value="());&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="4636" end="4689" value="            }&#xD;&#xA;        }&#xD;&#xA;        Assert.assertTrue(&quot;"/>
        <statements xsi:type="statements:Feature" begin="4691" end="4695">
          <expression xsi:type="expressions:CallSet" begin="4691" end="4695">
            <calls begin="4691" end="4695" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4697" end="4778" value=" not found&quot;, found);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Test the suppression of an entity "/>
        <statements xsi:type="statements:Feature" begin="4780" end="4784">
          <expression xsi:type="expressions:CallSet" begin="4780" end="4784">
            <calls begin="4780" end="4784" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4786" end="5011" value=".&lt;br/>&#xD;&#xA;     * &lt;ul>&lt;li>Step 1 : Create an entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 2 : Delete the entity&lt;/li>&#xD;&#xA;     * &lt;li>Step 3 : Search the entity and verify it doesn't exist anymore&lt;/li>&lt;/ul>&#xD;&#xA;     */&#xD;&#xA;    public final void testDelete"/>
        <statements xsi:type="statements:Feature" begin="5013" end="5017">
          <expression xsi:type="expressions:CallSet" begin="5013" end="5017">
            <calls begin="5013" end="5017" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5019" end="5086" value="() throws DaoException {&#xD;&#xA;        // Initialized the test&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="5088" end="5092">
          <expression xsi:type="expressions:CallSet" begin="5088" end="5092">
            <calls begin="5088" end="5092" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5094" end="5095" value=" "/>
        <statements xsi:type="statements:Feature" begin="5097" end="5112">
          <expression xsi:type="expressions:CallSet" begin="5097" end="5112">
            <calls begin="5097" end="5101" name="name" prefix=""/>
            <calls begin="5102" end="5112" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5114" end="5120" value=" = get"/>
        <statements xsi:type="statements:Feature" begin="5122" end="5126">
          <expression xsi:type="expressions:CallSet" begin="5122" end="5126">
            <calls begin="5122" end="5126" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5128" end="5158" value="Exemple();&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="5160" end="5164">
          <expression xsi:type="expressions:CallSet" begin="5160" end="5164">
            <calls begin="5160" end="5164" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5166" end="5167" value="("/>
        <statements xsi:type="statements:Feature" begin="5169" end="5184">
          <expression xsi:type="expressions:CallSet" begin="5169" end="5184">
            <calls begin="5169" end="5173" name="name" prefix=""/>
            <calls begin="5174" end="5184" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5186" end="5254" value=");&#xD;&#xA;        &#xD;&#xA;        // Execute the tested code&#xD;&#xA;        dao.delete"/>
        <statements xsi:type="statements:Feature" begin="5256" end="5260">
          <expression xsi:type="expressions:CallSet" begin="5256" end="5260">
            <calls begin="5256" end="5260" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5262" end="5263" value="("/>
        <statements xsi:type="statements:Feature" begin="5265" end="5280">
          <expression xsi:type="expressions:CallSet" begin="5265" end="5280">
            <calls begin="5265" end="5269" name="name" prefix=""/>
            <calls begin="5270" end="5280" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5282" end="5366" value=");&#xD;&#xA;        &#xD;&#xA;        // Verify result&#xD;&#xA;        boolean found = false;&#xD;&#xA;        for("/>
        <statements xsi:type="statements:Feature" begin="5368" end="5372">
          <expression xsi:type="expressions:CallSet" begin="5368" end="5372">
            <calls begin="5368" end="5372" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5374" end="5382" value=" current"/>
        <statements xsi:type="statements:Feature" begin="5384" end="5388">
          <expression xsi:type="expressions:CallSet" begin="5384" end="5388">
            <calls begin="5384" end="5388" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5390" end="5404" value=" : dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="5406" end="5410">
          <expression xsi:type="expressions:CallSet" begin="5406" end="5410">
            <calls begin="5406" end="5410" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5412" end="5443" value="s()) {&#xD;&#xA;            if (current"/>
        <statements xsi:type="statements:Feature" begin="5445" end="5449">
          <expression xsi:type="expressions:CallSet" begin="5445" end="5449">
            <calls begin="5445" end="5449" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5451" end="5459" value=".equals("/>
        <statements xsi:type="statements:Feature" begin="5461" end="5476">
          <expression xsi:type="expressions:CallSet" begin="5461" end="5476">
            <calls begin="5461" end="5465" name="name" prefix=""/>
            <calls begin="5466" end="5476" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5478" end="5585" value=")) {&#xD;&#xA;                found = true;                &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        Assert.assertFalse(&quot;"/>
        <statements xsi:type="statements:Feature" begin="5587" end="5591">
          <expression xsi:type="expressions:CallSet" begin="5587" end="5591">
            <calls begin="5587" end="5591" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5593" end="5674" value=" not deleted&quot;, found);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Test the search of all entities "/>
        <statements xsi:type="statements:Feature" begin="5676" end="5680">
          <expression xsi:type="expressions:CallSet" begin="5676" end="5680">
            <calls begin="5676" end="5680" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5682" end="5876" value=".&lt;br/>&#xD;&#xA;     * &lt;ul>&lt;li>Step 1 : Create many entities&lt;/li>&#xD;&#xA;     * &lt;li>Step 2 : Search all entities and verify the entities created are found&lt;/li>&lt;/ul>&#xD;&#xA;     */&#xD;&#xA;    public final void testFindAll"/>
        <statements xsi:type="statements:Feature" begin="5878" end="5882">
          <expression xsi:type="expressions:CallSet" begin="5878" end="5882">
            <calls begin="5878" end="5882" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5884" end="5995" value="s() throws DaoException {&#xD;&#xA;        // Verify number of element before testing&#xD;&#xA;        int before = dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="5997" end="6001">
          <expression xsi:type="expressions:CallSet" begin="5997" end="6001">
            <calls begin="5997" end="6001" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6003" end="6138" value="s().size();&#xD;&#xA;        Assert.assertTrue(&quot;FindAll must return at least 0&quot;, before >= 0);&#xD;&#xA;        &#xD;&#xA;        // Add two elements&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="6140" end="6144">
          <expression xsi:type="expressions:CallSet" begin="6140" end="6144">
            <calls begin="6140" end="6144" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6146" end="6147" value=" "/>
        <statements xsi:type="statements:Feature" begin="6149" end="6164">
          <expression xsi:type="expressions:CallSet" begin="6149" end="6164">
            <calls begin="6149" end="6153" name="name" prefix=""/>
            <calls begin="6154" end="6164" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6166" end="6173" value="1 = get"/>
        <statements xsi:type="statements:Feature" begin="6175" end="6179">
          <expression xsi:type="expressions:CallSet" begin="6175" end="6179">
            <calls begin="6175" end="6179" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6181" end="6211" value="Exemple();&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="6213" end="6217">
          <expression xsi:type="expressions:CallSet" begin="6213" end="6217">
            <calls begin="6213" end="6217" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6219" end="6220" value="("/>
        <statements xsi:type="statements:Feature" begin="6222" end="6237">
          <expression xsi:type="expressions:CallSet" begin="6222" end="6237">
            <calls begin="6222" end="6226" name="name" prefix=""/>
            <calls begin="6227" end="6237" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6239" end="6270" value="1);&#xD;&#xA;                &#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="6272" end="6276">
          <expression xsi:type="expressions:CallSet" begin="6272" end="6276">
            <calls begin="6272" end="6276" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6278" end="6279" value=" "/>
        <statements xsi:type="statements:Feature" begin="6281" end="6296">
          <expression xsi:type="expressions:CallSet" begin="6281" end="6296">
            <calls begin="6281" end="6285" name="name" prefix=""/>
            <calls begin="6286" end="6296" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6298" end="6305" value="2 = get"/>
        <statements xsi:type="statements:Feature" begin="6307" end="6311">
          <expression xsi:type="expressions:CallSet" begin="6307" end="6311">
            <calls begin="6307" end="6311" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6313" end="6343" value="Exemple();&#xD;&#xA;        dao.create"/>
        <statements xsi:type="statements:Feature" begin="6345" end="6349">
          <expression xsi:type="expressions:CallSet" begin="6345" end="6349">
            <calls begin="6345" end="6349" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6351" end="6352" value="("/>
        <statements xsi:type="statements:Feature" begin="6354" end="6369">
          <expression xsi:type="expressions:CallSet" begin="6354" end="6369">
            <calls begin="6354" end="6358" name="name" prefix=""/>
            <calls begin="6359" end="6369" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6371" end="6435" value="2);&#xD;&#xA;&#xD;&#xA;        // Verify result&#xD;&#xA;        int after = dao.findAll"/>
        <statements xsi:type="statements:Feature" begin="6437" end="6441">
          <expression xsi:type="expressions:CallSet" begin="6437" end="6441">
            <calls begin="6437" end="6441" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6443" end="6617" value="s().size();&#xD;&#xA;        Assert.assertEquals(&#xD;&#xA;                &quot;FindAll don't find the good number of elements&quot;, &#xD;&#xA;                2,&#xD;&#xA;                after - before);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:Feature" begin="6619" end="6660">
          <expression xsi:type="expressions:CallSet" begin="6619" end="6660">
            <calls begin="6619" end="6626" name="feature" prefix=""/>
            <calls begin="6627" end="6647" name="filter" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="6634" end="6646" value="operations"/>
            </calls>
            <calls begin="6648" end="6660" name="generateTest" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6662" end="6703" value="&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Create an exemple of "/>
        <statements xsi:type="statements:Feature" begin="6705" end="6709">
          <expression xsi:type="expressions:CallSet" begin="6705" end="6709">
            <calls begin="6705" end="6709" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6711" end="6736" value="&#xD;&#xA;     */&#xD;&#xA;    protected "/>
        <statements xsi:type="statements:Feature" begin="6738" end="6742">
          <expression xsi:type="expressions:CallSet" begin="6738" end="6742">
            <calls begin="6738" end="6742" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6744" end="6748" value=" get"/>
        <statements xsi:type="statements:Feature" begin="6750" end="6754">
          <expression xsi:type="expressions:CallSet" begin="6750" end="6754">
            <calls begin="6750" end="6754" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6756" end="6844" value="Exemple() throws DaoException {&#xD;&#xA;       // fill attributes with exemple values&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="6846" end="6850">
          <expression xsi:type="expressions:CallSet" begin="6846" end="6850">
            <calls begin="6846" end="6850" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6852" end="6853" value=" "/>
        <statements xsi:type="statements:Feature" begin="6855" end="6870">
          <expression xsi:type="expressions:CallSet" begin="6855" end="6870">
            <calls begin="6855" end="6859" name="name" prefix=""/>
            <calls begin="6860" end="6870" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6872" end="6879" value=" = new "/>
        <statements xsi:type="statements:Feature" begin="6881" end="6885">
          <expression xsi:type="expressions:CallSet" begin="6881" end="6885">
            <calls begin="6881" end="6885" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="6887" end="6892" value="();&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="6904" end="6923" value=" Member attributes "/>
        <statements xsi:type="statements:Text" begin="6929" end="6929" value=""/>
        <statements xsi:type="statements:For" begin="6943" end="7471">
          <iterator xsi:type="expressions:Parenthesis" begin="6943" end="6995">
            <expression xsi:type="expressions:CallSet" begin="6944" end="6994">
              <calls begin="6944" end="6953" name="attribute" prefix=""/>
              <calls begin="6954" end="6994" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="6974" end="6987" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="6988" end="6993"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="7000" end="7000" value=""/>
          <statements xsi:type="statements:If" begin="7017" end="7456">
            <condition xsi:type="expressions:Parenthesis" begin="7017" end="7044">
              <expression xsi:type="expressions:Operator" begin="7018" end="7043" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="7018" end="7028">
                  <expression xsi:type="expressions:CallSet" begin="7019" end="7028">
                    <calls begin="7019" end="7028" name="isDerived" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="7032" end="7043">
                  <expression xsi:type="expressions:CallSet" begin="7033" end="7043">
                    <calls begin="7033" end="7043" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="7049" end="7049" value=""/>
            <thenStatements xsi:type="statements:If" begin="7070" end="7437">
              <condition xsi:type="expressions:Parenthesis" begin="7070" end="7082">
                <expression xsi:type="expressions:Operator" begin="7071" end="7081" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="7071" end="7076">
                    <calls begin="7071" end="7076" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="7080" end="7081" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="7087" end="7095" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="7097" end="7118">
                <expression xsi:type="expressions:CallSet" begin="7097" end="7118">
                  <calls begin="7097" end="7102" name="class" prefix=""/>
                  <calls begin="7103" end="7107" name="name" prefix=""/>
                  <calls begin="7108" end="7118" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="7120" end="7124" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="7126" end="7141">
                <expression xsi:type="expressions:CallSet" begin="7126" end="7141">
                  <calls begin="7126" end="7130" name="name" prefix=""/>
                  <calls begin="7131" end="7141" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="7143" end="7144" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="7146" end="7159">
                <expression xsi:type="expressions:CallSet" begin="7146" end="7159">
                  <calls begin="7146" end="7159" name="exempleValues" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="7161" end="7165" value=");&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="7193" end="7206" value="        List&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="7208" end="7217">
                <expression xsi:type="expressions:CallSet" begin="7208" end="7217">
                  <calls begin="7208" end="7212" name="type" prefix=""/>
                  <calls begin="7213" end="7217" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7219" end="7225" value="> list"/>
              <elseStatements xsi:type="statements:Feature" begin="7227" end="7242">
                <expression xsi:type="expressions:CallSet" begin="7227" end="7242">
                  <calls begin="7227" end="7231" name="name" prefix=""/>
                  <calls begin="7232" end="7242" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7244" end="7261" value=" = new ArrayList&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="7263" end="7272">
                <expression xsi:type="expressions:CallSet" begin="7263" end="7272">
                  <calls begin="7263" end="7267" name="type" prefix=""/>
                  <calls begin="7268" end="7272" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7274" end="7292" value=">();&#xD;&#xA;        list"/>
              <elseStatements xsi:type="statements:Feature" begin="7294" end="7309">
                <expression xsi:type="expressions:CallSet" begin="7294" end="7309">
                  <calls begin="7294" end="7298" name="name" prefix=""/>
                  <calls begin="7299" end="7309" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7311" end="7316" value=".add("/>
              <elseStatements xsi:type="statements:Feature" begin="7318" end="7331">
                <expression xsi:type="expressions:CallSet" begin="7318" end="7331">
                  <calls begin="7318" end="7331" name="exempleValues" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7333" end="7345" value=");&#xD;&#xA;        "/>
              <elseStatements xsi:type="statements:Feature" begin="7347" end="7368">
                <expression xsi:type="expressions:CallSet" begin="7347" end="7368">
                  <calls begin="7347" end="7352" name="class" prefix=""/>
                  <calls begin="7353" end="7357" name="name" prefix=""/>
                  <calls begin="7358" end="7368" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7370" end="7374" value=".set"/>
              <elseStatements xsi:type="statements:Feature" begin="7376" end="7391">
                <expression xsi:type="expressions:CallSet" begin="7376" end="7391">
                  <calls begin="7376" end="7380" name="name" prefix=""/>
                  <calls begin="7381" end="7391" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7393" end="7398" value="(list"/>
              <elseStatements xsi:type="statements:Feature" begin="7400" end="7415">
                <expression xsi:type="expressions:CallSet" begin="7400" end="7415">
                  <calls begin="7400" end="7404" name="name" prefix=""/>
                  <calls begin="7405" end="7415" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7417" end="7421" value=");&#xD;&#xA;"/>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="7478" end="7478" value=""/>
        <statements xsi:type="statements:Comment" begin="7490" end="7519" value=" Composite relation required "/>
        <statements xsi:type="statements:Text" begin="7525" end="7525" value=""/>
        <statements xsi:type="statements:For" begin="7539" end="8706">
          <iterator xsi:type="expressions:Parenthesis" begin="7539" end="7590">
            <expression xsi:type="expressions:CallSet" begin="7540" end="7589">
              <calls begin="7540" end="7549" name="attribute" prefix=""/>
              <calls begin="7550" end="7589" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="7570" end="7583" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="7584" end="7588" value="true"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="7595" end="7595" value=""/>
          <statements xsi:type="statements:If" begin="7612" end="8691">
            <condition xsi:type="expressions:Parenthesis" begin="7612" end="7624">
              <expression xsi:type="expressions:Operator" begin="7613" end="7623" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="7613" end="7618">
                  <calls begin="7613" end="7618" name="lower" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="7622" end="7623"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="7629" end="7654" value="            &#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="7656" end="7669">
              <expression xsi:type="expressions:CallSet" begin="7656" end="7669">
                <calls begin="7656" end="7669" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7671" end="7687" value=" for exemple of "/>
            <thenStatements xsi:type="statements:Feature" begin="7689" end="7698">
              <expression xsi:type="expressions:CallSet" begin="7689" end="7698">
                <calls begin="7689" end="7693" name="type" prefix=""/>
                <calls begin="7694" end="7698" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7700" end="7701" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="7703" end="7707">
              <expression xsi:type="expressions:CallSet" begin="7703" end="7707">
                <calls begin="7703" end="7707" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7709" end="7726" value=" values&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="7728" end="7737">
              <expression xsi:type="expressions:CallSet" begin="7728" end="7737">
                <calls begin="7728" end="7732" name="type" prefix=""/>
                <calls begin="7733" end="7737" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7739" end="7740" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="7742" end="7757">
              <expression xsi:type="expressions:CallSet" begin="7742" end="7757">
                <calls begin="7742" end="7746" name="name" prefix=""/>
                <calls begin="7747" end="7757" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7759" end="7773" value="Exemple = new "/>
            <thenStatements xsi:type="statements:Feature" begin="7775" end="7784">
              <expression xsi:type="expressions:CallSet" begin="7775" end="7784">
                <calls begin="7775" end="7779" name="type" prefix=""/>
                <calls begin="7780" end="7784" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="7786" end="7791" value="();&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="7812" end="8053">
              <condition xsi:type="expressions:Parenthesis" begin="7812" end="7824">
                <expression xsi:type="expressions:Operator" begin="7813" end="7823" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="7813" end="7818">
                    <calls begin="7813" end="7818" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="7822" end="7823" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="7829" end="7837" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="7839" end="7860">
                <expression xsi:type="expressions:CallSet" begin="7839" end="7860">
                  <calls begin="7839" end="7844" name="class" prefix=""/>
                  <calls begin="7845" end="7849" name="name" prefix=""/>
                  <calls begin="7850" end="7860" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="7862" end="7866" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="7868" end="7883">
                <expression xsi:type="expressions:CallSet" begin="7868" end="7883">
                  <calls begin="7868" end="7872" name="name" prefix=""/>
                  <calls begin="7873" end="7883" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="7885" end="7886" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="7888" end="7903">
                <expression xsi:type="expressions:CallSet" begin="7888" end="7903">
                  <calls begin="7888" end="7892" name="name" prefix=""/>
                  <calls begin="7893" end="7903" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="7905" end="7916" value="Exemple);&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="7944" end="7952" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="7954" end="7975">
                <expression xsi:type="expressions:CallSet" begin="7954" end="7975">
                  <calls begin="7954" end="7959" name="class" prefix=""/>
                  <calls begin="7960" end="7964" name="name" prefix=""/>
                  <calls begin="7965" end="7975" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="7977" end="7981" value=".get"/>
              <elseStatements xsi:type="statements:Feature" begin="7983" end="7998">
                <expression xsi:type="expressions:CallSet" begin="7983" end="7998">
                  <calls begin="7983" end="7987" name="name" prefix=""/>
                  <calls begin="7988" end="7998" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8000" end="8007" value="().add("/>
              <elseStatements xsi:type="statements:Feature" begin="8009" end="8024">
                <expression xsi:type="expressions:CallSet" begin="8009" end="8024">
                  <calls begin="8009" end="8013" name="name" prefix=""/>
                  <calls begin="8014" end="8024" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="8026" end="8037" value="Exemple);&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8060" end="8060" value=""/>
            <thenStatements xsi:type="statements:If" begin="8081" end="8500">
              <condition xsi:type="expressions:Parenthesis" begin="8081" end="8099">
                <expression xsi:type="expressions:Operator" begin="8082" end="8098" operator="!=">
                  <operands xsi:type="expressions:CallSet" begin="8082" end="8090">
                    <calls begin="8082" end="8090" name="opposite" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:NullLiteral" begin="8094" end="8098"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="8105" end="8105" value=""/>
              <thenStatements xsi:type="statements:Comment" begin="8125" end="8154" value=" for bidirectionnal relation "/>
              <thenStatements xsi:type="statements:Text" begin="8160" end="8160" value=""/>
              <thenStatements xsi:type="statements:If" begin="8185" end="8477">
                <condition xsi:type="expressions:Parenthesis" begin="8185" end="8206">
                  <expression xsi:type="expressions:Operator" begin="8186" end="8205" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="8186" end="8200">
                      <calls begin="8186" end="8194" name="opposite" prefix=""/>
                      <calls begin="8195" end="8200" name="upper" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="8204" end="8205" value="1"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="8211" end="8219" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="8221" end="8236">
                  <expression xsi:type="expressions:CallSet" begin="8221" end="8236">
                    <calls begin="8221" end="8225" name="name" prefix=""/>
                    <calls begin="8226" end="8236" name="toL1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8238" end="8249" value="Exemple.set"/>
                <thenStatements xsi:type="statements:Feature" begin="8251" end="8275">
                  <expression xsi:type="expressions:CallSet" begin="8251" end="8275">
                    <calls begin="8251" end="8259" name="opposite" prefix=""/>
                    <calls begin="8260" end="8264" name="name" prefix=""/>
                    <calls begin="8265" end="8275" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8277" end="8278" value="("/>
                <thenStatements xsi:type="statements:Feature" begin="8280" end="8301">
                  <expression xsi:type="expressions:CallSet" begin="8280" end="8301">
                    <calls begin="8280" end="8285" name="class" prefix=""/>
                    <calls begin="8286" end="8290" name="name" prefix=""/>
                    <calls begin="8291" end="8301" name="toL1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="8303" end="8315" value=");        &#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="8347" end="8355" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="8357" end="8372">
                  <expression xsi:type="expressions:CallSet" begin="8357" end="8372">
                    <calls begin="8357" end="8361" name="name" prefix=""/>
                    <calls begin="8362" end="8372" name="toL1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="8374" end="8385" value="Exemple.get"/>
                <elseStatements xsi:type="statements:Feature" begin="8387" end="8411">
                  <expression xsi:type="expressions:CallSet" begin="8387" end="8411">
                    <calls begin="8387" end="8395" name="opposite" prefix=""/>
                    <calls begin="8396" end="8400" name="name" prefix=""/>
                    <calls begin="8401" end="8411" name="toU1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="8413" end="8420" value="().add("/>
                <elseStatements xsi:type="statements:Feature" begin="8422" end="8443">
                  <expression xsi:type="expressions:CallSet" begin="8422" end="8443">
                    <calls begin="8422" end="8427" name="class" prefix=""/>
                    <calls begin="8428" end="8432" name="name" prefix=""/>
                    <calls begin="8433" end="8443" name="toL1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="8445" end="8457" value=");        &#xD;&#xA;"/>
              </thenStatements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8507" end="8515" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="8517" end="8539">
              <expression xsi:type="expressions:CallSet" begin="8517" end="8539">
                <calls begin="8517" end="8528" name="projectName" prefix=""/>
                <calls begin="8529" end="8539" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8541" end="8555" value="DaoFactory.get"/>
            <thenStatements xsi:type="statements:Feature" begin="8557" end="8566">
              <expression xsi:type="expressions:CallSet" begin="8557" end="8566">
                <calls begin="8557" end="8561" name="type" prefix=""/>
                <calls begin="8562" end="8566" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8568" end="8580" value="Dao().create"/>
            <thenStatements xsi:type="statements:Feature" begin="8582" end="8591">
              <expression xsi:type="expressions:CallSet" begin="8582" end="8591">
                <calls begin="8582" end="8586" name="type" prefix=""/>
                <calls begin="8587" end="8591" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8593" end="8594" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="8596" end="8611">
              <expression xsi:type="expressions:CallSet" begin="8596" end="8611">
                <calls begin="8596" end="8600" name="name" prefix=""/>
                <calls begin="8601" end="8611" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8613" end="8635" value="Exemple);&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="8637" end="8648">
              <expression xsi:type="expressions:CallSet" begin="8637" end="8648">
                <calls begin="8637" end="8648" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8650" end="8655" value=" for "/>
            <thenStatements xsi:type="statements:Feature" begin="8657" end="8666">
              <expression xsi:type="expressions:CallSet" begin="8657" end="8666">
                <calls begin="8657" end="8661" name="type" prefix=""/>
                <calls begin="8662" end="8666" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8668" end="8669" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="8671" end="8675">
              <expression xsi:type="expressions:CallSet" begin="8671" end="8675">
                <calls begin="8671" end="8675" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="8677" end="8679" value="&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="8713" end="8738" value="        &#xD;&#xA;        return "/>
        <statements xsi:type="statements:Feature" begin="8740" end="8755">
          <expression xsi:type="expressions:CallSet" begin="8740" end="8755">
            <calls begin="8740" end="8744" name="name" prefix=""/>
            <calls begin="8745" end="8755" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8757" end="8816" value=";&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Create a second exemple of "/>
        <statements xsi:type="statements:Feature" begin="8818" end="8822">
          <expression xsi:type="expressions:CallSet" begin="8818" end="8822">
            <calls begin="8818" end="8822" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8824" end="8867" value=" with other values&#xD;&#xA;     */&#xD;&#xA;    protected "/>
        <statements xsi:type="statements:Feature" begin="8869" end="8873">
          <expression xsi:type="expressions:CallSet" begin="8869" end="8873">
            <calls begin="8869" end="8873" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8875" end="8879" value=" get"/>
        <statements xsi:type="statements:Feature" begin="8881" end="8885">
          <expression xsi:type="expressions:CallSet" begin="8881" end="8885">
            <calls begin="8881" end="8885" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8887" end="8976" value="Exemple2() throws DaoException {&#xD;&#xA;       // fill attributes with exemple values&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="8978" end="8982">
          <expression xsi:type="expressions:CallSet" begin="8978" end="8982">
            <calls begin="8978" end="8982" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="8984" end="8985" value=" "/>
        <statements xsi:type="statements:Feature" begin="8987" end="9002">
          <expression xsi:type="expressions:CallSet" begin="8987" end="9002">
            <calls begin="8987" end="8991" name="name" prefix=""/>
            <calls begin="8992" end="9002" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9004" end="9011" value=" = new "/>
        <statements xsi:type="statements:Feature" begin="9013" end="9017">
          <expression xsi:type="expressions:CallSet" begin="9013" end="9017">
            <calls begin="9013" end="9017" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="9019" end="9024" value="();&#xD;&#xA;"/>
        <statements xsi:type="statements:Comment" begin="9036" end="9055" value=" Member attributes "/>
        <statements xsi:type="statements:Text" begin="9061" end="9061" value=""/>
        <statements xsi:type="statements:For" begin="9075" end="9605">
          <iterator xsi:type="expressions:Parenthesis" begin="9075" end="9127">
            <expression xsi:type="expressions:CallSet" begin="9076" end="9126">
              <calls begin="9076" end="9085" name="attribute" prefix=""/>
              <calls begin="9086" end="9126" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="9106" end="9119" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="9120" end="9125"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="9132" end="9132" value=""/>
          <statements xsi:type="statements:If" begin="9149" end="9590">
            <condition xsi:type="expressions:Parenthesis" begin="9149" end="9176">
              <expression xsi:type="expressions:Operator" begin="9150" end="9175" operator="&amp;&amp;">
                <operands xsi:type="expressions:Not" begin="9150" end="9160">
                  <expression xsi:type="expressions:CallSet" begin="9151" end="9160">
                    <calls begin="9151" end="9160" name="isDerived" prefix=""/>
                  </expression>
                </operands>
                <operands xsi:type="expressions:Not" begin="9164" end="9175">
                  <expression xsi:type="expressions:CallSet" begin="9165" end="9175">
                    <calls begin="9165" end="9175" name="isReadOnly" prefix=""/>
                  </expression>
                </operands>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="9181" end="9181" value=""/>
            <thenStatements xsi:type="statements:If" begin="9202" end="9571">
              <condition xsi:type="expressions:Parenthesis" begin="9202" end="9214">
                <expression xsi:type="expressions:Operator" begin="9203" end="9213" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="9203" end="9208">
                    <calls begin="9203" end="9208" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="9212" end="9213" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="9219" end="9227" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="9229" end="9250">
                <expression xsi:type="expressions:CallSet" begin="9229" end="9250">
                  <calls begin="9229" end="9234" name="class" prefix=""/>
                  <calls begin="9235" end="9239" name="name" prefix=""/>
                  <calls begin="9240" end="9250" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="9252" end="9256" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="9258" end="9273">
                <expression xsi:type="expressions:CallSet" begin="9258" end="9273">
                  <calls begin="9258" end="9262" name="name" prefix=""/>
                  <calls begin="9263" end="9273" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="9275" end="9276" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="9278" end="9292">
                <expression xsi:type="expressions:CallSet" begin="9278" end="9292">
                  <calls begin="9278" end="9292" name="exempleValues2" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="9294" end="9298" value=");&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="9326" end="9339" value="        List&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="9341" end="9350">
                <expression xsi:type="expressions:CallSet" begin="9341" end="9350">
                  <calls begin="9341" end="9345" name="type" prefix=""/>
                  <calls begin="9346" end="9350" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9352" end="9358" value="> list"/>
              <elseStatements xsi:type="statements:Feature" begin="9360" end="9375">
                <expression xsi:type="expressions:CallSet" begin="9360" end="9375">
                  <calls begin="9360" end="9364" name="name" prefix=""/>
                  <calls begin="9365" end="9375" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9377" end="9394" value=" = new ArrayList&lt;"/>
              <elseStatements xsi:type="statements:Feature" begin="9396" end="9405">
                <expression xsi:type="expressions:CallSet" begin="9396" end="9405">
                  <calls begin="9396" end="9400" name="type" prefix=""/>
                  <calls begin="9401" end="9405" name="name" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9407" end="9425" value=">();&#xD;&#xA;        list"/>
              <elseStatements xsi:type="statements:Feature" begin="9427" end="9442">
                <expression xsi:type="expressions:CallSet" begin="9427" end="9442">
                  <calls begin="9427" end="9431" name="name" prefix=""/>
                  <calls begin="9432" end="9442" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9444" end="9449" value=".add("/>
              <elseStatements xsi:type="statements:Feature" begin="9451" end="9465">
                <expression xsi:type="expressions:CallSet" begin="9451" end="9465">
                  <calls begin="9451" end="9465" name="exempleValues2" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9467" end="9479" value=");&#xD;&#xA;        "/>
              <elseStatements xsi:type="statements:Feature" begin="9481" end="9502">
                <expression xsi:type="expressions:CallSet" begin="9481" end="9502">
                  <calls begin="9481" end="9486" name="class" prefix=""/>
                  <calls begin="9487" end="9491" name="name" prefix=""/>
                  <calls begin="9492" end="9502" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9504" end="9508" value=".set"/>
              <elseStatements xsi:type="statements:Feature" begin="9510" end="9525">
                <expression xsi:type="expressions:CallSet" begin="9510" end="9525">
                  <calls begin="9510" end="9514" name="name" prefix=""/>
                  <calls begin="9515" end="9525" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9527" end="9532" value="(list"/>
              <elseStatements xsi:type="statements:Feature" begin="9534" end="9549">
                <expression xsi:type="expressions:CallSet" begin="9534" end="9549">
                  <calls begin="9534" end="9538" name="name" prefix=""/>
                  <calls begin="9539" end="9549" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="9551" end="9555" value=");&#xD;&#xA;"/>
            </thenStatements>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="9612" end="9612" value=""/>
        <statements xsi:type="statements:Comment" begin="9624" end="9653" value=" Composite relation required "/>
        <statements xsi:type="statements:Text" begin="9659" end="9659" value=""/>
        <statements xsi:type="statements:For" begin="9673" end="10877">
          <iterator xsi:type="expressions:Parenthesis" begin="9673" end="9724">
            <expression xsi:type="expressions:CallSet" begin="9674" end="9723">
              <calls begin="9674" end="9683" name="attribute" prefix=""/>
              <calls begin="9684" end="9723" name="filterExistProperty" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="9704" end="9717" value="association"/>
                <arguments xsi:type="expressions:BooleanLiteral" begin="9718" end="9722" value="true"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="9729" end="9729" value=""/>
          <statements xsi:type="statements:If" begin="9746" end="10862">
            <condition xsi:type="expressions:Parenthesis" begin="9746" end="9758">
              <expression xsi:type="expressions:Operator" begin="9747" end="9757" operator="!=">
                <operands xsi:type="expressions:CallSet" begin="9747" end="9752">
                  <calls begin="9747" end="9752" name="lower" prefix=""/>
                </operands>
                <operands xsi:type="expressions:IntegerLiteral" begin="9756" end="9757"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="9775" end="9800" value="            &#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="9802" end="9815">
              <expression xsi:type="expressions:CallSet" begin="9802" end="9815">
                <calls begin="9802" end="9815" name="startUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9817" end="9835" value=" for exemple 2 of "/>
            <thenStatements xsi:type="statements:Feature" begin="9837" end="9846">
              <expression xsi:type="expressions:CallSet" begin="9837" end="9846">
                <calls begin="9837" end="9841" name="type" prefix=""/>
                <calls begin="9842" end="9846" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9848" end="9849" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="9851" end="9855">
              <expression xsi:type="expressions:CallSet" begin="9851" end="9855">
                <calls begin="9851" end="9855" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9857" end="9874" value=" values&#xD;&#xA;        "/>
            <thenStatements xsi:type="statements:Feature" begin="9876" end="9885">
              <expression xsi:type="expressions:CallSet" begin="9876" end="9885">
                <calls begin="9876" end="9880" name="type" prefix=""/>
                <calls begin="9881" end="9885" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9887" end="9888" value=" "/>
            <thenStatements xsi:type="statements:Feature" begin="9890" end="9905">
              <expression xsi:type="expressions:CallSet" begin="9890" end="9905">
                <calls begin="9890" end="9894" name="name" prefix=""/>
                <calls begin="9895" end="9905" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9907" end="9921" value="Exemple = new "/>
            <thenStatements xsi:type="statements:Feature" begin="9923" end="9932">
              <expression xsi:type="expressions:CallSet" begin="9923" end="9932">
                <calls begin="9923" end="9927" name="type" prefix=""/>
                <calls begin="9928" end="9932" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="9934" end="9939" value="();&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="9960" end="10201">
              <condition xsi:type="expressions:Parenthesis" begin="9960" end="9972">
                <expression xsi:type="expressions:Operator" begin="9961" end="9971" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="9961" end="9966">
                    <calls begin="9961" end="9966" name="upper" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:IntegerLiteral" begin="9970" end="9971" value="1"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="9977" end="9985" value="        "/>
              <thenStatements xsi:type="statements:Feature" begin="9987" end="10008">
                <expression xsi:type="expressions:CallSet" begin="9987" end="10008">
                  <calls begin="9987" end="9992" name="class" prefix=""/>
                  <calls begin="9993" end="9997" name="name" prefix=""/>
                  <calls begin="9998" end="10008" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="10010" end="10014" value=".set"/>
              <thenStatements xsi:type="statements:Feature" begin="10016" end="10031">
                <expression xsi:type="expressions:CallSet" begin="10016" end="10031">
                  <calls begin="10016" end="10020" name="name" prefix=""/>
                  <calls begin="10021" end="10031" name="toU1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="10033" end="10034" value="("/>
              <thenStatements xsi:type="statements:Feature" begin="10036" end="10051">
                <expression xsi:type="expressions:CallSet" begin="10036" end="10051">
                  <calls begin="10036" end="10040" name="name" prefix=""/>
                  <calls begin="10041" end="10051" name="toL1Case" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="10053" end="10064" value="Exemple);&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="10092" end="10100" value="        "/>
              <elseStatements xsi:type="statements:Feature" begin="10102" end="10123">
                <expression xsi:type="expressions:CallSet" begin="10102" end="10123">
                  <calls begin="10102" end="10107" name="class" prefix=""/>
                  <calls begin="10108" end="10112" name="name" prefix=""/>
                  <calls begin="10113" end="10123" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10125" end="10129" value=".get"/>
              <elseStatements xsi:type="statements:Feature" begin="10131" end="10146">
                <expression xsi:type="expressions:CallSet" begin="10131" end="10146">
                  <calls begin="10131" end="10135" name="name" prefix=""/>
                  <calls begin="10136" end="10146" name="toU1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10148" end="10155" value="().add("/>
              <elseStatements xsi:type="statements:Feature" begin="10157" end="10172">
                <expression xsi:type="expressions:CallSet" begin="10157" end="10172">
                  <calls begin="10157" end="10161" name="name" prefix=""/>
                  <calls begin="10162" end="10172" name="toL1Case" prefix=""/>
                </expression>
              </elseStatements>
              <elseStatements xsi:type="statements:Text" begin="10174" end="10185" value="Exemple);&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10208" end="10208" value=""/>
            <thenStatements xsi:type="statements:If" begin="10229" end="10671">
              <condition xsi:type="expressions:Parenthesis" begin="10229" end="10270">
                <expression xsi:type="expressions:Operator" begin="10230" end="10269" operator="&amp;&amp;">
                  <operands xsi:type="expressions:Operator" begin="10230" end="10246" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="10230" end="10238">
                      <calls begin="10230" end="10238" name="opposite" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:NullLiteral" begin="10242" end="10246"/>
                  </operands>
                  <operands xsi:type="expressions:Operator" begin="10250" end="10269" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="10250" end="10264">
                      <calls begin="10250" end="10258" name="opposite" prefix=""/>
                      <calls begin="10259" end="10264" name="lower" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="10268" end="10269"/>
                  </operands>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="10276" end="10276" value=""/>
              <thenStatements xsi:type="statements:Comment" begin="10296" end="10325" value=" for bidirectionnal relation "/>
              <thenStatements xsi:type="statements:Text" begin="10331" end="10331" value=""/>
              <thenStatements xsi:type="statements:If" begin="10356" end="10648">
                <condition xsi:type="expressions:Parenthesis" begin="10356" end="10377">
                  <expression xsi:type="expressions:Operator" begin="10357" end="10376" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="10357" end="10371">
                      <calls begin="10357" end="10365" name="opposite" prefix=""/>
                      <calls begin="10366" end="10371" name="upper" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:IntegerLiteral" begin="10375" end="10376" value="1"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="10382" end="10390" value="        "/>
                <thenStatements xsi:type="statements:Feature" begin="10392" end="10407">
                  <expression xsi:type="expressions:CallSet" begin="10392" end="10407">
                    <calls begin="10392" end="10396" name="name" prefix=""/>
                    <calls begin="10397" end="10407" name="toL1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="10409" end="10420" value="Exemple.set"/>
                <thenStatements xsi:type="statements:Feature" begin="10422" end="10446">
                  <expression xsi:type="expressions:CallSet" begin="10422" end="10446">
                    <calls begin="10422" end="10430" name="opposite" prefix=""/>
                    <calls begin="10431" end="10435" name="name" prefix=""/>
                    <calls begin="10436" end="10446" name="toU1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="10448" end="10449" value="("/>
                <thenStatements xsi:type="statements:Feature" begin="10451" end="10472">
                  <expression xsi:type="expressions:CallSet" begin="10451" end="10472">
                    <calls begin="10451" end="10456" name="class" prefix=""/>
                    <calls begin="10457" end="10461" name="name" prefix=""/>
                    <calls begin="10462" end="10472" name="toL1Case" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="10474" end="10486" value=");        &#xD;&#xA;"/>
                <elseStatements xsi:type="statements:Text" begin="10518" end="10526" value="        "/>
                <elseStatements xsi:type="statements:Feature" begin="10528" end="10543">
                  <expression xsi:type="expressions:CallSet" begin="10528" end="10543">
                    <calls begin="10528" end="10532" name="name" prefix=""/>
                    <calls begin="10533" end="10543" name="toL1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="10545" end="10556" value="Exemple.get"/>
                <elseStatements xsi:type="statements:Feature" begin="10558" end="10582">
                  <expression xsi:type="expressions:CallSet" begin="10558" end="10582">
                    <calls begin="10558" end="10566" name="opposite" prefix=""/>
                    <calls begin="10567" end="10571" name="name" prefix=""/>
                    <calls begin="10572" end="10582" name="toU1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="10584" end="10591" value="().add("/>
                <elseStatements xsi:type="statements:Feature" begin="10593" end="10614">
                  <expression xsi:type="expressions:CallSet" begin="10593" end="10614">
                    <calls begin="10593" end="10598" name="class" prefix=""/>
                    <calls begin="10599" end="10603" name="name" prefix=""/>
                    <calls begin="10604" end="10614" name="toL1Case" prefix=""/>
                  </expression>
                </elseStatements>
                <elseStatements xsi:type="statements:Text" begin="10616" end="10628" value=");        &#xD;&#xA;"/>
              </thenStatements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10678" end="10686" value="        "/>
            <thenStatements xsi:type="statements:Feature" begin="10688" end="10710">
              <expression xsi:type="expressions:CallSet" begin="10688" end="10710">
                <calls begin="10688" end="10699" name="projectName" prefix=""/>
                <calls begin="10700" end="10710" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10712" end="10726" value="DaoFactory.get"/>
            <thenStatements xsi:type="statements:Feature" begin="10728" end="10737">
              <expression xsi:type="expressions:CallSet" begin="10728" end="10737">
                <calls begin="10728" end="10732" name="type" prefix=""/>
                <calls begin="10733" end="10737" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10739" end="10751" value="Dao().create"/>
            <thenStatements xsi:type="statements:Feature" begin="10753" end="10762">
              <expression xsi:type="expressions:CallSet" begin="10753" end="10762">
                <calls begin="10753" end="10757" name="type" prefix=""/>
                <calls begin="10758" end="10762" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10764" end="10765" value="("/>
            <thenStatements xsi:type="statements:Feature" begin="10767" end="10782">
              <expression xsi:type="expressions:CallSet" begin="10767" end="10782">
                <calls begin="10767" end="10771" name="name" prefix=""/>
                <calls begin="10772" end="10782" name="toL1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10784" end="10806" value="Exemple);&#xD;&#xA;        // "/>
            <thenStatements xsi:type="statements:Feature" begin="10808" end="10819">
              <expression xsi:type="expressions:CallSet" begin="10808" end="10819">
                <calls begin="10808" end="10819" name="endUserCode" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10821" end="10826" value=" for "/>
            <thenStatements xsi:type="statements:Feature" begin="10828" end="10837">
              <expression xsi:type="expressions:CallSet" begin="10828" end="10837">
                <calls begin="10828" end="10832" name="type" prefix=""/>
                <calls begin="10833" end="10837" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10839" end="10840" value="."/>
            <thenStatements xsi:type="statements:Feature" begin="10842" end="10846">
              <expression xsi:type="expressions:CallSet" begin="10842" end="10846">
                <calls begin="10842" end="10846" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="10848" end="10850" value="&#xD;&#xA;"/>
          </statements>
        </statements>
        <statements xsi:type="statements:Text" begin="10884" end="10909" value="        &#xD;&#xA;        return "/>
        <statements xsi:type="statements:Feature" begin="10911" end="10926">
          <expression xsi:type="expressions:CallSet" begin="10911" end="10926">
            <calls begin="10911" end="10915" name="name" prefix=""/>
            <calls begin="10916" end="10926" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10928" end="10951" value=";&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // "/>
        <statements xsi:type="statements:Feature" begin="10953" end="10966">
          <expression xsi:type="expressions:CallSet" begin="10953" end="10966">
            <calls begin="10953" end="10966" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="10968" end="10995" value=" of specific tests&#xD;&#xA;    // "/>
        <statements xsi:type="statements:Feature" begin="10997" end="11008">
          <expression xsi:type="expressions:CallSet" begin="10997" end="11008">
            <calls begin="10997" end="11008" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11010" end="11035" value=" of specific tests&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;"/>
      </scripts>
      <scripts begin="11088" end="11157">
        <descriptor begin="11048" end="11084" name="generateTest" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="11093" end="11152">
          <condition xsi:type="expressions:Parenthesis" begin="11093" end="11129">
            <expression xsi:type="expressions:CallSet" begin="11094" end="11128">
              <calls begin="11094" end="11128" name="hasStereotype" prefix="">
                <arguments xsi:type="expressions:CallSet" begin="11108" end="11127">
                  <calls begin="11108" end="11127" name="getProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="11120" end="11126" value="find"/>
                  </calls>
                </arguments>
              </calls>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="11134" end="11138" value="    "/>
          <thenStatements xsi:type="statements:Feature" begin="11140" end="11148">
            <expression xsi:type="expressions:CallSet" begin="11140" end="11148">
              <calls begin="11140" end="11148" name="findTest" prefix=""/>
            </expression>
          </thenStatements>
          <thenStatements xsi:type="statements:Text" begin="11150" end="11152" value="&#xD;&#xA;"/>
        </statements>
      </scripts>
      <scripts begin="11206" end="11882">
        <descriptor begin="11170" end="11202" name="findTest" type="Operation">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="11206" end="11241" value="    /**&#xD;&#xA;     * Test the operation "/>
        <statements xsi:type="statements:Feature" begin="11243" end="11247">
          <expression xsi:type="expressions:CallSet" begin="11243" end="11247">
            <calls begin="11243" end="11247" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11249" end="11269" value=".     &#xD;&#xA;     * &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="11271" end="11284">
          <expression xsi:type="expressions:CallSet" begin="11271" end="11284">
            <calls begin="11271" end="11284" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11286" end="11322" value=" of test documentation&#xD;&#xA;     * &lt;!-- "/>
        <statements xsi:type="statements:Feature" begin="11324" end="11335">
          <expression xsi:type="expressions:CallSet" begin="11324" end="11335">
            <calls begin="11324" end="11335" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11337" end="11390" value=" of test documentation&#xD;&#xA;     */&#xD;&#xA;    public void test"/>
        <statements xsi:type="statements:Feature" begin="11392" end="11407">
          <expression xsi:type="expressions:CallSet" begin="11392" end="11407">
            <calls begin="11392" end="11396" name="name" prefix=""/>
            <calls begin="11397" end="11407" name="toU1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11409" end="11450" value="() throws DaoException {    &#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="11452" end="11465">
          <expression xsi:type="expressions:CallSet" begin="11452" end="11465">
            <calls begin="11452" end="11465" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11467" end="11475" value=" of test"/>
        <statements xsi:type="statements:Feature" begin="11477" end="11481">
          <expression xsi:type="expressions:CallSet" begin="11477" end="11481">
            <calls begin="11477" end="11481" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11483" end="11572" value="&#xD;&#xA;        // Initialized the test&#xD;&#xA;        &#xD;&#xA;        // Execute the tested code&#xD;&#xA;        "/>
        <statements xsi:type="statements:Feature" begin="11574" end="11596">
          <expression xsi:type="expressions:CallSet" begin="11574" end="11596">
            <calls begin="11574" end="11586" name="returnResult" prefix=""/>
            <calls begin="11587" end="11591" name="type" prefix=""/>
            <calls begin="11592" end="11596" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11598" end="11599" value=" "/>
        <statements xsi:type="statements:Feature" begin="11601" end="11634">
          <expression xsi:type="expressions:CallSet" begin="11601" end="11634">
            <calls begin="11601" end="11613" name="returnResult" prefix=""/>
            <calls begin="11614" end="11618" name="type" prefix=""/>
            <calls begin="11619" end="11623" name="name" prefix=""/>
            <calls begin="11624" end="11634" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11636" end="11643" value=" = dao."/>
        <statements xsi:type="statements:Feature" begin="11645" end="11649">
          <expression xsi:type="expressions:CallSet" begin="11645" end="11649">
            <calls begin="11645" end="11649" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11651" end="11652" value="("/>
        <statements xsi:type="statements:Feature" begin="11654" end="11676">
          <expression xsi:type="expressions:CallSet" begin="11654" end="11676">
            <calls begin="11654" end="11676" name="generateParameterNames" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11678" end="11782" value=")        &#xD;&#xA;        &#xD;&#xA;        // Verify result&#xD;&#xA;        Assert.assertNotNull(&quot;Result sould not be null&quot;, "/>
        <statements xsi:type="statements:Feature" begin="11784" end="11817">
          <expression xsi:type="expressions:CallSet" begin="11784" end="11817">
            <calls begin="11784" end="11796" name="returnResult" prefix=""/>
            <calls begin="11797" end="11801" name="type" prefix=""/>
            <calls begin="11802" end="11806" name="name" prefix=""/>
            <calls begin="11807" end="11817" name="toL1Case" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11819" end="11844" value=");&#xD;&#xA;        &#xD;&#xA;        // "/>
        <statements xsi:type="statements:Feature" begin="11846" end="11857">
          <expression xsi:type="expressions:CallSet" begin="11846" end="11857">
            <calls begin="11846" end="11857" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11859" end="11867" value=" of test"/>
        <statements xsi:type="statements:Feature" begin="11869" end="11873">
          <expression xsi:type="expressions:CallSet" begin="11869" end="11873">
            <calls begin="11869" end="11873" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11875" end="11882" value="&#xD;&#xA;    }"/>
      </scripts>
      <scripts begin="11933" end="11952">
        <descriptor begin="11895" end="11929" name="objectsPackage" type="Class">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="11935" end="11945">
          <expression xsi:type="expressions:CallSet" begin="11935" end="11945">
            <calls begin="11935" end="11945" name="daoPackage" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="11947" end="11952" value=".test"/>
      </scripts>
      <scripts begin="12009" end="12349">
        <descriptor begin="11969" end="12005" name="exempleValues" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="12014" end="12344">
          <condition xsi:type="expressions:Parenthesis" begin="12014" end="12038">
            <expression xsi:type="expressions:Operator" begin="12015" end="12037" operator="==">
              <operands xsi:type="expressions:CallSet" begin="12015" end="12024">
                <calls begin="12015" end="12019" name="type" prefix=""/>
                <calls begin="12020" end="12024" name="name" prefix=""/>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="12028" end="12037" value="Integer"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="12043" end="12060">
            <expression xsi:type="expressions:CallSet" begin="12043" end="12060">
              <calls begin="12043" end="12047" name="name" prefix=""/>
              <calls begin="12048" end="12060" name="uniqueCode" prefix=""/>
            </expression>
          </thenStatements>
          <elseStatements xsi:type="statements:If" begin="12079" end="12339">
            <condition xsi:type="expressions:Parenthesis" begin="12079" end="12102">
              <expression xsi:type="expressions:Operator" begin="12080" end="12101" operator="==">
                <operands xsi:type="expressions:CallSet" begin="12080" end="12089">
                  <calls begin="12080" end="12084" name="type" prefix=""/>
                  <calls begin="12085" end="12089" name="name" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="12093" end="12101" value="String"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="12105" end="12108" value="&quot;my"/>
            <thenStatements xsi:type="statements:Feature" begin="12110" end="12125">
              <expression xsi:type="expressions:CallSet" begin="12110" end="12125">
                <calls begin="12110" end="12114" name="name" prefix=""/>
                <calls begin="12115" end="12125" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12127" end="12128" value="&quot;"/>
            <elseStatements xsi:type="statements:If" begin="12145" end="12334">
              <condition xsi:type="expressions:Parenthesis" begin="12145" end="12169">
                <expression xsi:type="expressions:Operator" begin="12146" end="12168" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="12146" end="12155">
                    <calls begin="12146" end="12150" name="type" prefix=""/>
                    <calls begin="12151" end="12155" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="12159" end="12168" value="Boolean"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="12172" end="12176" value="true"/>
              <elseStatements xsi:type="statements:If" begin="12193" end="12329">
                <condition xsi:type="expressions:Parenthesis" begin="12193" end="12214">
                  <expression xsi:type="expressions:Operator" begin="12194" end="12213" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="12194" end="12203">
                      <calls begin="12194" end="12198" name="type" prefix=""/>
                      <calls begin="12199" end="12203" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="12207" end="12213" value="Date"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="12217" end="12228" value="new Date(0)"/>
                <elseStatements xsi:type="statements:If" begin="12245" end="12324">
                  <condition xsi:type="expressions:Parenthesis" begin="12245" end="12267">
                    <expression xsi:type="expressions:Operator" begin="12246" end="12266" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="12246" end="12255">
                        <calls begin="12246" end="12250" name="type" prefix=""/>
                        <calls begin="12251" end="12255" name="name" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="12259" end="12266" value="Float"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Feature" begin="12272" end="12289">
                    <expression xsi:type="expressions:CallSet" begin="12272" end="12289">
                      <calls begin="12272" end="12276" name="name" prefix=""/>
                      <calls begin="12277" end="12289" name="uniqueCode" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="12291" end="12293" value=".0"/>
                  <elseStatements xsi:type="statements:Text" begin="12305" end="12309" value="new "/>
                  <elseStatements xsi:type="statements:Feature" begin="12311" end="12320">
                    <expression xsi:type="expressions:CallSet" begin="12311" end="12320">
                      <calls begin="12311" end="12315" name="type" prefix=""/>
                      <calls begin="12316" end="12320" name="name" prefix=""/>
                    </expression>
                  </elseStatements>
                  <elseStatements xsi:type="statements:Text" begin="12322" end="12324" value="()"/>
                </elseStatements>
              </elseStatements>
            </elseStatements>
          </elseStatements>
        </statements>
      </scripts>
      <scripts begin="12403" end="12748">
        <descriptor begin="12362" end="12399" name="exempleValues2" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="12408" end="12743">
          <condition xsi:type="expressions:Parenthesis" begin="12408" end="12432">
            <expression xsi:type="expressions:Operator" begin="12409" end="12431" operator="==">
              <operands xsi:type="expressions:CallSet" begin="12409" end="12418">
                <calls begin="12409" end="12413" name="type" prefix=""/>
                <calls begin="12414" end="12418" name="name" prefix=""/>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="12422" end="12431" value="Integer"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Feature" begin="12437" end="12454">
            <expression xsi:type="expressions:CallSet" begin="12437" end="12454">
              <calls begin="12437" end="12441" name="name" prefix=""/>
              <calls begin="12442" end="12454" name="uniqueCode" prefix=""/>
            </expression>
          </thenStatements>
          <elseStatements xsi:type="statements:If" begin="12473" end="12738">
            <condition xsi:type="expressions:Parenthesis" begin="12473" end="12496">
              <expression xsi:type="expressions:Operator" begin="12474" end="12495" operator="==">
                <operands xsi:type="expressions:CallSet" begin="12474" end="12483">
                  <calls begin="12474" end="12478" name="type" prefix=""/>
                  <calls begin="12479" end="12483" name="name" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="12487" end="12495" value="String"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="12499" end="12506" value="&quot;second"/>
            <thenStatements xsi:type="statements:Feature" begin="12508" end="12523">
              <expression xsi:type="expressions:CallSet" begin="12508" end="12523">
                <calls begin="12508" end="12512" name="name" prefix=""/>
                <calls begin="12513" end="12523" name="toU1Case" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="12525" end="12526" value="&quot;"/>
            <elseStatements xsi:type="statements:If" begin="12543" end="12733">
              <condition xsi:type="expressions:Parenthesis" begin="12543" end="12567">
                <expression xsi:type="expressions:Operator" begin="12544" end="12566" operator="==">
                  <operands xsi:type="expressions:CallSet" begin="12544" end="12553">
                    <calls begin="12544" end="12548" name="type" prefix=""/>
                    <calls begin="12549" end="12553" name="name" prefix=""/>
                  </operands>
                  <operands xsi:type="expressions:StringLiteral" begin="12557" end="12566" value="Boolean"/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="12570" end="12575" value="false"/>
              <elseStatements xsi:type="statements:If" begin="12592" end="12728">
                <condition xsi:type="expressions:Parenthesis" begin="12592" end="12613">
                  <expression xsi:type="expressions:Operator" begin="12593" end="12612" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="12593" end="12602">
                      <calls begin="12593" end="12597" name="type" prefix=""/>
                      <calls begin="12598" end="12602" name="name" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="12606" end="12612" value="Date"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="12616" end="12627" value="new Date(1)"/>
                <elseStatements xsi:type="statements:If" begin="12644" end="12723">
                  <condition xsi:type="expressions:Parenthesis" begin="12644" end="12666">
                    <expression xsi:type="expressions:Operator" begin="12645" end="12665" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="12645" end="12654">
                        <calls begin="12645" end="12649" name="type" prefix=""/>
                        <calls begin="12650" end="12654" name="name" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="12658" end="12665" value="Float"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Feature" begin="12671" end="12688">
                    <expression xsi:type="expressions:CallSet" begin="12671" end="12688">
                      <calls begin="12671" end="12675" name="name" prefix=""/>
                      <calls begin="12676" end="12688" name="uniqueCode" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="12690" end="12692" value=".0"/>
                  <elseStatements xsi:type="statements:Text" begin="12704" end="12708" value="new "/>
                  <elseStatements xsi:type="statements:Feature" begin="12710" end="12719">
                    <expression xsi:type="expressions:CallSet" begin="12710" end="12719">
                      <calls begin="12710" end="12714" name="type" prefix=""/>
                      <calls begin="12715" end="12719" name="name" prefix=""/>
                    </expression>
                  </elseStatements>
                  <elseStatements xsi:type="statements:Text" begin="12721" end="12723" value="()"/>
                </elseStatements>
              </elseStatements>
            </elseStatements>
          </elseStatements>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.sql.mysql.sql-constraints" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.21" beginTag="&lt;%" endTag="%>">
      <scripts begin="924" end="2867">
        <descriptor begin="824" end="920" name="genConstraints" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="867" end="886">
              <expression xsi:type="expressions:CallSet" begin="867" end="886">
                <calls begin="867" end="886" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="888" end="889" value="/"/>
            <statements xsi:type="statements:Feature" begin="891" end="902">
              <expression xsi:type="expressions:CallSet" begin="891" end="902">
                <calls begin="891" end="902" name="projectName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="904" end="919" value="-contraints.sql"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="924" end="927" value="-- "/>
        <statements xsi:type="statements:Feature" begin="929" end="942">
          <expression xsi:type="expressions:CallSet" begin="929" end="942">
            <calls begin="929" end="942" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="944" end="1001" value=" DB Name&#xD;&#xA;-- TODO specify the name of database used&#xD;&#xA;USE "/>
        <statements xsi:type="statements:Feature" begin="1003" end="1014">
          <expression xsi:type="expressions:CallSet" begin="1003" end="1014">
            <calls begin="1003" end="1014" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1016" end="1022" value=";&#xD;&#xA;-- "/>
        <statements xsi:type="statements:Feature" begin="1024" end="1035">
          <expression xsi:type="expressions:CallSet" begin="1024" end="1035">
            <calls begin="1024" end="1035" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1037" end="1041" value="&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1047" end="2862">
          <iterator xsi:type="expressions:Parenthesis" begin="1047" end="1089">
            <expression xsi:type="expressions:CallSet" begin="1048" end="1088">
              <calls begin="1048" end="1072" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1064" end="1071" value="Class"/>
              </calls>
              <calls begin="1073" end="1088" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1080" end="1087" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1094" end="1094" value=""/>
          <statements xsi:type="statements:If" begin="1103" end="2855">
            <condition xsi:type="expressions:Parenthesis" begin="1103" end="1113">
              <expression xsi:type="expressions:CallSet" begin="1104" end="1112">
                <calls begin="1104" end="1112" name="isEntity" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1118" end="1143" value="-- Constraints for table "/>
            <thenStatements xsi:type="statements:Feature" begin="1145" end="1165">
              <expression xsi:type="expressions:CallSet" begin="1145" end="1165">
                <calls begin="1145" end="1149" name="name" prefix=""/>
                <calls begin="1150" end="1165" name="toSqlNotation" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1167" end="1171" value="&#xD;&#xA;&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:For" begin="1185" end="2418">
              <iterator xsi:type="expressions:Parenthesis" begin="1185" end="1250">
                <expression xsi:type="expressions:CallSet" begin="1186" end="1249">
                  <calls begin="1186" end="1203" name="getAssociations" prefix=""/>
                  <calls begin="1204" end="1234" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="1224" end="1233">
                      <calls begin="1224" end="1233" name="current" prefix=""/>
                    </arguments>
                    <filter xsi:type="expressions:CallSet" begin="1235" end="1248">
                      <calls begin="1235" end="1248" name="isNavigable" prefix=""/>
                    </filter>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="1255" end="1255" value=""/>
              <statements xsi:type="statements:Comment" begin="1267" end="1274" value=" n---n "/>
              <statements xsi:type="statements:Text" begin="1280" end="1280" value=""/>
              <statements xsi:type="statements:If" begin="1297" end="1697">
                <condition xsi:type="expressions:Parenthesis" begin="1297" end="1315">
                  <expression xsi:type="expressions:Operator" begin="1298" end="1314" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="1298" end="1306">
                      <calls begin="1298" end="1306" name="opposite" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:NullLiteral" begin="1310" end="1314"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="1320" end="1320" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="1336" end="1345" value=" |n|-->n "/>
                <thenStatements xsi:type="statements:Text" begin="1351" end="1351" value=""/>
                <thenStatements xsi:type="statements:If" begin="1372" end="1466">
                  <condition xsi:type="expressions:Parenthesis" begin="1372" end="1384">
                    <expression xsi:type="expressions:Operator" begin="1373" end="1383" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="1373" end="1378">
                        <calls begin="1373" end="1378" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1382" end="1383" value="1"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="1389" end="1389" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="1409" end="1418" value=" |n|-->1 "/>
                  <thenStatements xsi:type="statements:Feature" begin="1426" end="1446">
                    <expression xsi:type="expressions:CallSet" begin="1426" end="1446">
                      <calls begin="1426" end="1446" name="genForeignConstraint" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1448" end="1450" value="&#xD;&#xA;"/>
                </thenStatements>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="1496" end="1525">
                    <expression xsi:type="expressions:Operator" begin="1498" end="1524" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="1498" end="1514">
                        <calls begin="1498" end="1514" name="isMainEndPoint" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="1518" end="1524" value="true"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="1530" end="1530" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="1546" end="1556" value=" |n|&lt;-->n "/>
                  <thenStatements xsi:type="statements:Text" begin="1562" end="1562" value=""/>
                  <thenStatements xsi:type="statements:If" begin="1583" end="1678">
                    <condition xsi:type="expressions:Parenthesis" begin="1583" end="1595">
                      <expression xsi:type="expressions:Operator" begin="1584" end="1594" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="1584" end="1589">
                          <calls begin="1584" end="1589" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="1593" end="1594" value="1"/>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="1600" end="1600" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="1620" end="1630" value=" |n|&lt;-->1 "/>
                    <thenStatements xsi:type="statements:Feature" begin="1638" end="1658">
                      <expression xsi:type="expressions:CallSet" begin="1638" end="1658">
                        <calls begin="1638" end="1658" name="genForeignConstraint" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="1660" end="1662" value="&#xD;&#xA;"/>
                  </thenStatements>
                </elseIf>
              </statements>
              <statements xsi:type="statements:Text" begin="1704" end="1704" value=""/>
              <statements xsi:type="statements:If" begin="1717" end="2401">
                <condition xsi:type="expressions:Parenthesis" begin="1717" end="1761">
                  <expression xsi:type="expressions:Operator" begin="1718" end="1760" operator="&amp;&amp;">
                    <operands xsi:type="expressions:Operator" begin="1718" end="1728" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="1718" end="1723">
                        <calls begin="1718" end="1723" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1727" end="1728" value="1"/>
                    </operands>
                    <operands xsi:type="expressions:Operator" begin="1732" end="1760" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="1732" end="1755">
                        <calls begin="1732" end="1749" name="oppositeAttribute" prefix=""/>
                        <calls begin="1750" end="1755" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1759" end="1760" value="1"/>
                    </operands>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="1766" end="1766" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="1778" end="1785" value=" *---* "/>
                <thenStatements xsi:type="statements:Text" begin="1791" end="1791" value=""/>
                <thenStatements xsi:type="statements:If" begin="1808" end="2386">
                  <condition xsi:type="expressions:Parenthesis" begin="1808" end="1836">
                    <expression xsi:type="expressions:Operator" begin="1809" end="1835" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="1809" end="1825">
                        <calls begin="1809" end="1825" name="isMainEndPoint" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="1829" end="1835" value="true"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="1841" end="1858" value="ALTER TABLE JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1860" end="1885">
                    <expression xsi:type="expressions:CallSet" begin="1860" end="1885">
                      <calls begin="1860" end="1864" name="type" prefix=""/>
                      <calls begin="1865" end="1869" name="name" prefix=""/>
                      <calls begin="1870" end="1885" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1887" end="1888" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1890" end="1916">
                    <expression xsi:type="expressions:CallSet" begin="1890" end="1916">
                      <calls begin="1890" end="1895" name="class" prefix=""/>
                      <calls begin="1896" end="1900" name="name" prefix=""/>
                      <calls begin="1901" end="1916" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1918" end="1953" value="&#xD;&#xA;    DROP FOREIGN KEY CST_FK_JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1955" end="1980">
                    <expression xsi:type="expressions:CallSet" begin="1955" end="1980">
                      <calls begin="1955" end="1959" name="type" prefix=""/>
                      <calls begin="1960" end="1964" name="name" prefix=""/>
                      <calls begin="1965" end="1980" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1982" end="1983" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1985" end="2010">
                    <expression xsi:type="expressions:CallSet" begin="1985" end="2010">
                      <calls begin="1985" end="1989" name="type" prefix=""/>
                      <calls begin="1990" end="1994" name="name" prefix=""/>
                      <calls begin="1995" end="2010" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2012" end="2013" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2015" end="2035">
                    <expression xsi:type="expressions:CallSet" begin="2015" end="2035">
                      <calls begin="2015" end="2019" name="name" prefix=""/>
                      <calls begin="2020" end="2035" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2037" end="2038" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2040" end="2041">
                    <expression xsi:type="expressions:CallSet" begin="2040" end="2041">
                      <calls begin="2040" end="2041" name="i" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2043" end="2066" value="; &#xD;&#xA;&#xD;&#xA;ALTER TABLE JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2068" end="2093">
                    <expression xsi:type="expressions:CallSet" begin="2068" end="2093">
                      <calls begin="2068" end="2072" name="type" prefix=""/>
                      <calls begin="2073" end="2077" name="name" prefix=""/>
                      <calls begin="2078" end="2093" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2095" end="2096" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2098" end="2124">
                    <expression xsi:type="expressions:CallSet" begin="2098" end="2124">
                      <calls begin="2098" end="2103" name="class" prefix=""/>
                      <calls begin="2104" end="2108" name="name" prefix=""/>
                      <calls begin="2109" end="2124" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2126" end="2156" value="&#xD;&#xA; ADD CONSTRAINT CST_FK_JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2158" end="2183">
                    <expression xsi:type="expressions:CallSet" begin="2158" end="2183">
                      <calls begin="2158" end="2162" name="type" prefix=""/>
                      <calls begin="2163" end="2167" name="name" prefix=""/>
                      <calls begin="2168" end="2183" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2185" end="2186" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2188" end="2213">
                    <expression xsi:type="expressions:CallSet" begin="2188" end="2213">
                      <calls begin="2188" end="2192" name="type" prefix=""/>
                      <calls begin="2193" end="2197" name="name" prefix=""/>
                      <calls begin="2198" end="2213" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2215" end="2216" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2218" end="2238">
                    <expression xsi:type="expressions:CallSet" begin="2218" end="2238">
                      <calls begin="2218" end="2222" name="name" prefix=""/>
                      <calls begin="2223" end="2238" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2240" end="2241" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2243" end="2244">
                    <expression xsi:type="expressions:CallSet" begin="2243" end="2244">
                      <calls begin="2243" end="2244" name="i" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2246" end="2265" value="&#xD;&#xA; FOREIGN KEY (FK_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2267" end="2292">
                    <expression xsi:type="expressions:CallSet" begin="2267" end="2292">
                      <calls begin="2267" end="2271" name="type" prefix=""/>
                      <calls begin="2272" end="2276" name="name" prefix=""/>
                      <calls begin="2277" end="2292" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2294" end="2295" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2297" end="2317">
                    <expression xsi:type="expressions:CallSet" begin="2297" end="2317">
                      <calls begin="2297" end="2301" name="name" prefix=""/>
                      <calls begin="2302" end="2317" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2319" end="2337" value="_ID)&#xD;&#xA; REFERENCES "/>
                  <thenStatements xsi:type="statements:Feature" begin="2339" end="2364">
                    <expression xsi:type="expressions:CallSet" begin="2339" end="2364">
                      <calls begin="2339" end="2343" name="type" prefix=""/>
                      <calls begin="2344" end="2348" name="name" prefix=""/>
                      <calls begin="2349" end="2364" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2366" end="2374" value=" (ID);&#xD;&#xA;"/>
                </thenStatements>
              </statements>
              <statements xsi:type="statements:Text" begin="2408" end="2410" value="&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2425" end="2435" value="        &#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="2448" end="2834">
              <condition xsi:type="expressions:Parenthesis" begin="2448" end="2469">
                <expression xsi:type="expressions:Not" begin="2449" end="2468">
                  <expression xsi:type="expressions:CallSet" begin="2450" end="2468">
                    <calls begin="2450" end="2460" name="superClass" prefix=""/>
                    <calls begin="2461" end="2468" name="isEmpty" prefix=""/>
                  </expression>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="2474" end="2486" value="ALTER TABLE "/>
              <thenStatements xsi:type="statements:Feature" begin="2488" end="2508">
                <expression xsi:type="expressions:CallSet" begin="2488" end="2508">
                  <calls begin="2488" end="2492" name="name" prefix=""/>
                  <calls begin="2493" end="2508" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2510" end="2545" value="&#xD;&#xA;DROP FOREIGN KEY CST_FK_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="2547" end="2578">
                <expression xsi:type="expressions:CallSet" begin="2547" end="2578">
                  <calls begin="2547" end="2557" name="superClass" prefix=""/>
                  <calls begin="2558" end="2562" name="name" prefix=""/>
                  <calls begin="2563" end="2578" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2580" end="2604" value="_ID;    &#xD;&#xA;&#xD;&#xA;ALTER TABLE "/>
              <thenStatements xsi:type="statements:Feature" begin="2606" end="2626">
                <expression xsi:type="expressions:CallSet" begin="2606" end="2626">
                  <calls begin="2606" end="2610" name="name" prefix=""/>
                  <calls begin="2611" end="2626" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2628" end="2662" value="&#xD;&#xA; ADD CONSTRAINT CST_FK_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="2664" end="2695">
                <expression xsi:type="expressions:CallSet" begin="2664" end="2695">
                  <calls begin="2664" end="2674" name="superClass" prefix=""/>
                  <calls begin="2675" end="2679" name="name" prefix=""/>
                  <calls begin="2680" end="2695" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2697" end="2728" value="_ID&#xD;&#xA; FOREIGN KEY (FK_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="2730" end="2761">
                <expression xsi:type="expressions:CallSet" begin="2730" end="2761">
                  <calls begin="2730" end="2740" name="superClass" prefix=""/>
                  <calls begin="2741" end="2745" name="name" prefix=""/>
                  <calls begin="2746" end="2761" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2763" end="2781" value="_ID)&#xD;&#xA; REFERENCES "/>
              <thenStatements xsi:type="statements:Feature" begin="2783" end="2814">
                <expression xsi:type="expressions:CallSet" begin="2783" end="2814">
                  <calls begin="2783" end="2793" name="superClass" prefix=""/>
                  <calls begin="2794" end="2798" name="name" prefix=""/>
                  <calls begin="2799" end="2814" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2816" end="2826" value=" (ID);&#xD;&#xA;&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2841" end="2851" value="        &#xD;&#xA;"/>
          </statements>
        </statements>
      </scripts>
      <scripts begin="2927" end="3358">
        <descriptor begin="2880" end="2923" name="genForeignConstraint" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="2927" end="2939" value="ALTER TABLE "/>
        <statements xsi:type="statements:Feature" begin="2941" end="2986">
          <expression xsi:type="expressions:CallSet" begin="2941" end="2986">
            <calls begin="2941" end="2960" name="oppositeAttribute" prefix=""/>
            <calls begin="2961" end="2965" name="type" prefix=""/>
            <calls begin="2966" end="2970" name="name" prefix=""/>
            <calls begin="2971" end="2986" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="2988" end="3018" value="&#xD;&#xA;    DROP FOREIGN KEY CST_FK_"/>
        <statements xsi:type="statements:Feature" begin="3020" end="3045">
          <expression xsi:type="expressions:CallSet" begin="3020" end="3045">
            <calls begin="3020" end="3024" name="type" prefix=""/>
            <calls begin="3025" end="3029" name="name" prefix=""/>
            <calls begin="3030" end="3045" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3047" end="3048" value="_"/>
        <statements xsi:type="statements:Feature" begin="3050" end="3070">
          <expression xsi:type="expressions:CallSet" begin="3050" end="3070">
            <calls begin="3050" end="3054" name="name" prefix=""/>
            <calls begin="3055" end="3070" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3072" end="3073" value="_"/>
        <statements xsi:type="statements:Feature" begin="3075" end="3076">
          <expression xsi:type="expressions:CallSet" begin="3075" end="3076">
            <calls begin="3075" end="3076" name="i" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3078" end="3096" value="; &#xD;&#xA;&#xD;&#xA;ALTER TABLE "/>
        <statements xsi:type="statements:Feature" begin="3098" end="3143">
          <expression xsi:type="expressions:CallSet" begin="3098" end="3143">
            <calls begin="3098" end="3117" name="oppositeAttribute" prefix=""/>
            <calls begin="3118" end="3122" name="type" prefix=""/>
            <calls begin="3123" end="3127" name="name" prefix=""/>
            <calls begin="3128" end="3143" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3145" end="3170" value="&#xD;&#xA; ADD CONSTRAINT CST_FK_"/>
        <statements xsi:type="statements:Feature" begin="3172" end="3197">
          <expression xsi:type="expressions:CallSet" begin="3172" end="3197">
            <calls begin="3172" end="3176" name="type" prefix=""/>
            <calls begin="3177" end="3181" name="name" prefix=""/>
            <calls begin="3182" end="3197" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3199" end="3200" value="_"/>
        <statements xsi:type="statements:Feature" begin="3202" end="3222">
          <expression xsi:type="expressions:CallSet" begin="3202" end="3222">
            <calls begin="3202" end="3206" name="name" prefix=""/>
            <calls begin="3207" end="3222" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3224" end="3225" value="_"/>
        <statements xsi:type="statements:Feature" begin="3227" end="3228">
          <expression xsi:type="expressions:CallSet" begin="3227" end="3228">
            <calls begin="3227" end="3228" name="i" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3230" end="3249" value="&#xD;&#xA; FOREIGN KEY (FK_"/>
        <statements xsi:type="statements:Feature" begin="3251" end="3276">
          <expression xsi:type="expressions:CallSet" begin="3251" end="3276">
            <calls begin="3251" end="3255" name="type" prefix=""/>
            <calls begin="3256" end="3260" name="name" prefix=""/>
            <calls begin="3261" end="3276" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3278" end="3279" value="_"/>
        <statements xsi:type="statements:Feature" begin="3281" end="3301">
          <expression xsi:type="expressions:CallSet" begin="3281" end="3301">
            <calls begin="3281" end="3285" name="name" prefix=""/>
            <calls begin="3286" end="3301" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3303" end="3321" value="_ID)&#xD;&#xA; REFERENCES "/>
        <statements xsi:type="statements:Feature" begin="3323" end="3348">
          <expression xsi:type="expressions:CallSet" begin="3323" end="3348">
            <calls begin="3323" end="3327" name="type" prefix=""/>
            <calls begin="3328" end="3332" name="name" prefix=""/>
            <calls begin="3333" end="3348" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3350" end="3358" value=" (ID);&#xD;&#xA;"/>
      </scripts>
      <scripts begin="3412" end="3671">
        <descriptor begin="3371" end="3408" name="isMainEndPoint" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="3417" end="3666">
          <condition xsi:type="expressions:Parenthesis" begin="3417" end="3637">
            <expression xsi:type="expressions:Operator" begin="3418" end="3636" operator="||">
              <operands xsi:type="expressions:Operator" begin="3418" end="3444" operator="==">
                <operands xsi:type="expressions:CallSet" begin="3418" end="3429">
                  <calls begin="3418" end="3429" name="aggregation" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="3433" end="3444" value="composite"/>
              </operands>
              <operands xsi:type="expressions:Parenthesis" begin="3454" end="3636">
                <expression xsi:type="expressions:Operator" begin="3455" end="3628" operator="&amp;&amp;">
                  <operands xsi:type="expressions:Operator" begin="3455" end="3499" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="3455" end="3484">
                      <calls begin="3455" end="3472" name="oppositeAttribute" prefix=""/>
                      <calls begin="3473" end="3484" name="aggregation" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="3488" end="3499" value="composite"/>
                  </operands>
                  <operands xsi:type="expressions:Parenthesis" begin="3514" end="3628">
                    <expression xsi:type="expressions:Operator" begin="3515" end="3616" operator="||">
                      <operands xsi:type="expressions:Operator" begin="3515" end="3549" operator=">">
                        <operands xsi:type="expressions:CallSet" begin="3515" end="3545">
                          <calls begin="3515" end="3545" name="compare" prefix="">
                            <arguments xsi:type="expressions:CallSet" begin="3523" end="3533">
                              <calls begin="3523" end="3528" name="class" prefix=""/>
                              <calls begin="3529" end="3533" name="name" prefix=""/>
                            </arguments>
                            <arguments xsi:type="expressions:CallSet" begin="3535" end="3544">
                              <calls begin="3535" end="3539" name="type" prefix=""/>
                              <calls begin="3540" end="3544" name="name" prefix=""/>
                            </arguments>
                          </calls>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="3548" end="3549"/>
                      </operands>
                      <operands xsi:type="expressions:Parenthesis" begin="3565" end="3616">
                        <expression xsi:type="expressions:Operator" begin="3566" end="3615" operator="&amp;&amp;">
                          <operands xsi:type="expressions:Operator" begin="3566" end="3579" operator="==">
                            <operands xsi:type="expressions:CallSet" begin="3566" end="3571">
                              <calls begin="3566" end="3571" name="class" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:CallSet" begin="3575" end="3579">
                              <calls begin="3575" end="3579" name="type" prefix=""/>
                            </operands>
                          </operands>
                          <operands xsi:type="expressions:Operator" begin="3583" end="3615" operator=">">
                            <operands xsi:type="expressions:CallSet" begin="3583" end="3611">
                              <calls begin="3583" end="3611" name="compare" prefix="">
                                <arguments xsi:type="expressions:CallSet" begin="3591" end="3595">
                                  <calls begin="3591" end="3595" name="name" prefix=""/>
                                </arguments>
                                <arguments xsi:type="expressions:CallSet" begin="3597" end="3610">
                                  <calls begin="3597" end="3605" name="opposite" prefix=""/>
                                  <calls begin="3606" end="3610" name="name" prefix=""/>
                                </arguments>
                              </calls>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="3614" end="3615"/>
                          </operands>
                        </expression>
                      </operands>
                    </expression>
                  </operands>
                </expression>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="3647" end="3651" value="true"/>
          <elseStatements xsi:type="statements:Text" begin="3661" end="3666" value="false"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.sql.mysql.sql-create" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.21" beginTag="&lt;%" endTag="%>">
      <scripts begin="1027" end="4674">
        <descriptor begin="940" end="1023" name="generate" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="977" end="996">
              <expression xsi:type="expressions:CallSet" begin="977" end="996">
                <calls begin="977" end="996" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="998" end="999" value="/"/>
            <statements xsi:type="statements:Feature" begin="1001" end="1012">
              <expression xsi:type="expressions:CallSet" begin="1001" end="1012">
                <calls begin="1001" end="1012" name="projectName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1014" end="1022" value="-ddl.sql"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1027" end="1030" value="-- "/>
        <statements xsi:type="statements:Feature" begin="1032" end="1045">
          <expression xsi:type="expressions:CallSet" begin="1032" end="1045">
            <calls begin="1032" end="1045" name="startUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1047" end="1104" value=" DB Name&#xD;&#xA;-- TODO specify the name of database used&#xD;&#xA;USE "/>
        <statements xsi:type="statements:Feature" begin="1106" end="1117">
          <expression xsi:type="expressions:CallSet" begin="1106" end="1117">
            <calls begin="1106" end="1117" name="projectName" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1119" end="1125" value=";&#xD;&#xA;-- "/>
        <statements xsi:type="statements:Feature" begin="1127" end="1138">
          <expression xsi:type="expressions:CallSet" begin="1127" end="1138">
            <calls begin="1127" end="1138" name="endUserCode" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="1140" end="1144" value="&#xD;&#xA;&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1150" end="4669">
          <iterator xsi:type="expressions:Parenthesis" begin="1150" end="1192">
            <expression xsi:type="expressions:CallSet" begin="1151" end="1191">
              <calls begin="1151" end="1175" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1167" end="1174" value="Class"/>
              </calls>
              <calls begin="1176" end="1191" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1183" end="1190" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:If" begin="1200" end="4664">
            <condition xsi:type="expressions:Parenthesis" begin="1200" end="1210">
              <expression xsi:type="expressions:CallSet" begin="1201" end="1209">
                <calls begin="1201" end="1209" name="isEntity" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1215" end="1236" value="-- Tables for Entity "/>
            <thenStatements xsi:type="statements:Feature" begin="1238" end="1242">
              <expression xsi:type="expressions:CallSet" begin="1238" end="1242">
                <calls begin="1238" end="1242" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1244" end="1270" value=" &#xD;&#xA;&#xD;&#xA;DROP TABLE IF EXISTS "/>
            <thenStatements xsi:type="statements:Feature" begin="1272" end="1292">
              <expression xsi:type="expressions:CallSet" begin="1272" end="1292">
                <calls begin="1272" end="1276" name="name" prefix=""/>
                <calls begin="1277" end="1292" name="toSqlNotation" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1294" end="1310" value=";&#xD;&#xA;CREATE TABLE "/>
            <thenStatements xsi:type="statements:Feature" begin="1312" end="1332">
              <expression xsi:type="expressions:CallSet" begin="1312" end="1332">
                <calls begin="1312" end="1316" name="name" prefix=""/>
                <calls begin="1317" end="1332" name="toSqlNotation" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1334" end="1339" value="&#xD;&#xA;(&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:Comment" begin="1343" end="1370" value=" Class attribute iteration "/>
            <thenStatements xsi:type="statements:Comment" begin="1380" end="1451" value=" attribute.filterExistProperty(&quot;association&quot;,false) &#xD;&#xA;COMMENT ON COLUMN"/>
            <thenStatements xsi:type="statements:Text" begin="1457" end="1457" value=""/>
            <thenStatements xsi:type="statements:If" begin="1466" end="1522">
              <condition xsi:type="expressions:Parenthesis" begin="1466" end="1486">
                <expression xsi:type="expressions:CallSet" begin="1467" end="1485">
                  <calls begin="1467" end="1477" name="superClass" prefix=""/>
                  <calls begin="1478" end="1485" name="isEmpty" prefix=""/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="1491" end="1518" value="    ID CHAR(32) NOT NULL,&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1529" end="1529" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="1537" end="1549" value=" Properties "/>
            <thenStatements xsi:type="statements:Text" begin="1555" end="1555" value=""/>
            <thenStatements xsi:type="statements:For" begin="1565" end="1838">
              <iterator xsi:type="expressions:Parenthesis" begin="1565" end="1617">
                <expression xsi:type="expressions:CallSet" begin="1566" end="1616">
                  <calls begin="1566" end="1575" name="attribute" prefix=""/>
                  <calls begin="1576" end="1616" name="filterExistProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1596" end="1609" value="association"/>
                    <arguments xsi:type="expressions:BooleanLiteral" begin="1610" end="1615"/>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="1622" end="1622" value=""/>
              <statements xsi:type="statements:Comment" begin="1634" end="1679" value=" Array of primitives types are not generated "/>
              <statements xsi:type="statements:Text" begin="1685" end="1685" value=""/>
              <statements xsi:type="statements:If" begin="1698" end="1827">
                <condition xsi:type="expressions:Parenthesis" begin="1698" end="1724">
                  <expression xsi:type="expressions:Operator" begin="1699" end="1723" operator="&amp;&amp;">
                    <operands xsi:type="expressions:Not" begin="1699" end="1709">
                      <expression xsi:type="expressions:CallSet" begin="1700" end="1709">
                        <calls begin="1700" end="1709" name="isDerived" prefix=""/>
                      </expression>
                    </operands>
                    <operands xsi:type="expressions:Operator" begin="1713" end="1723" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="1713" end="1718">
                        <calls begin="1713" end="1718" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1722" end="1723" value="1"/>
                    </operands>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="1729" end="1733" value="    "/>
                <thenStatements xsi:type="statements:Feature" begin="1735" end="1755">
                  <expression xsi:type="expressions:CallSet" begin="1735" end="1755">
                    <calls begin="1735" end="1739" name="name" prefix=""/>
                    <calls begin="1740" end="1755" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="1757" end="1758" value=" "/>
                <thenStatements xsi:type="statements:Feature" begin="1760" end="1781">
                  <expression xsi:type="expressions:CallSet" begin="1760" end="1781">
                    <calls begin="1760" end="1764" name="type" prefix=""/>
                    <calls begin="1765" end="1781" name="convertToSqlType" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="1783" end="1784" value=" "/>
                <thenStatements xsi:type="statements:If" begin="1789" end="1807">
                  <condition xsi:type="expressions:Parenthesis" begin="1789" end="1800">
                    <expression xsi:type="expressions:Operator" begin="1790" end="1799" operator=">">
                      <operands xsi:type="expressions:CallSet" begin="1790" end="1795">
                        <calls begin="1790" end="1795" name="lower" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1798" end="1799"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="1803" end="1807" value="NOT "/>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="1812" end="1819" value="NULL,&#xD;&#xA;"/>
              </statements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1845" end="1845" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="1853" end="1874" value=" Direct associations "/>
            <thenStatements xsi:type="statements:Text" begin="1880" end="1880" value=""/>
            <thenStatements xsi:type="statements:For" begin="1890" end="3021">
              <iterator xsi:type="expressions:Parenthesis" begin="1890" end="1953">
                <expression xsi:type="expressions:CallSet" begin="1891" end="1952">
                  <calls begin="1891" end="1908" name="getAssociations" prefix=""/>
                  <calls begin="1909" end="1939" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="1929" end="1938">
                      <calls begin="1929" end="1938" name="current" prefix=""/>
                    </arguments>
                    <filter xsi:type="expressions:CallSet" begin="1940" end="1951">
                      <calls begin="1940" end="1951" name="isNavigable" prefix=""/>
                    </filter>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="1958" end="1958" value=""/>
              <statements xsi:type="statements:Comment" begin="1966" end="1973" value=" n---n "/>
              <statements xsi:type="statements:Text" begin="1979" end="1979" value=""/>
              <statements xsi:type="statements:If" begin="1992" end="3010">
                <condition xsi:type="expressions:Parenthesis" begin="1992" end="2010">
                  <expression xsi:type="expressions:Operator" begin="1993" end="2009" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="1993" end="2001">
                      <calls begin="1993" end="2001" name="opposite" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:NullLiteral" begin="2005" end="2009"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="2015" end="2015" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="2027" end="2036" value=" |n|-->n "/>
                <thenStatements xsi:type="statements:Text" begin="2042" end="2042" value=""/>
                <thenStatements xsi:type="statements:If" begin="2059" end="2605">
                  <condition xsi:type="expressions:Parenthesis" begin="2059" end="2071">
                    <expression xsi:type="expressions:Operator" begin="2060" end="2070" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="2060" end="2065">
                        <calls begin="2060" end="2065" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="2069" end="2070" value="1"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="2076" end="2076" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="2092" end="2101" value=" |n|-->1 "/>
                  <thenStatements xsi:type="statements:Text" begin="2107" end="2107" value=""/>
                  <thenStatements xsi:type="statements:If" begin="2128" end="2332">
                    <condition xsi:type="expressions:Parenthesis" begin="2128" end="2158">
                      <expression xsi:type="expressions:Operator" begin="2129" end="2157" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="2129" end="2152">
                          <calls begin="2129" end="2146" name="oppositeAttribute" prefix=""/>
                          <calls begin="2147" end="2152" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="2156" end="2157" value="1"/>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="2163" end="2163" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="2183" end="2192" value=" |1|-->1 "/>
                    <thenStatements xsi:type="statements:Text" begin="2198" end="2202" value="    "/>
                    <thenStatements xsi:type="statements:Feature" begin="2204" end="2217">
                      <expression xsi:type="expressions:CallSet" begin="2204" end="2217">
                        <calls begin="2204" end="2217" name="genForeignKey" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="2219" end="2229" value=" UNIQUE,&#xD;&#xA;"/>
                    <elseStatements xsi:type="statements:Text" begin="2257" end="2257" value=""/>
                    <elseStatements xsi:type="statements:Comment" begin="2277" end="2286" value=" |*|-->1 "/>
                    <elseStatements xsi:type="statements:Text" begin="2292" end="2296" value="    "/>
                    <elseStatements xsi:type="statements:Feature" begin="2298" end="2311">
                      <expression xsi:type="expressions:CallSet" begin="2298" end="2311">
                        <calls begin="2298" end="2311" name="genForeignKey" prefix=""/>
                      </expression>
                    </elseStatements>
                    <elseStatements xsi:type="statements:Text" begin="2313" end="2316" value=",&#xD;&#xA;"/>
                  </thenStatements>
                  <elseStatements xsi:type="statements:Text" begin="2375" end="2375" value=""/>
                  <elseStatements xsi:type="statements:Comment" begin="2391" end="2398" value=" n-->* "/>
                  <elseStatements xsi:type="statements:Text" begin="2404" end="2404" value=""/>
                  <elseStatements xsi:type="statements:If" begin="2425" end="2574">
                    <condition xsi:type="expressions:Parenthesis" begin="2425" end="2455">
                      <expression xsi:type="expressions:Operator" begin="2426" end="2454" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="2426" end="2449">
                          <calls begin="2426" end="2443" name="oppositeAttribute" prefix=""/>
                          <calls begin="2444" end="2449" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="2453" end="2454" value="1"/>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="2460" end="2460" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="2480" end="2489" value=" |1|-->* "/>
                    <elseStatements xsi:type="statements:Text" begin="2523" end="2523" value=""/>
                    <elseStatements xsi:type="statements:Comment" begin="2543" end="2552" value=" |*|-->* "/>
                  </elseStatements>
                </thenStatements>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="2630" end="2708">
                    <expression xsi:type="expressions:Operator" begin="2631" end="2707" operator="&amp;&amp;">
                      <operands xsi:type="expressions:Parenthesis" begin="2631" end="2693">
                        <expression xsi:type="expressions:Operator" begin="2632" end="2692" operator="||">
                          <operands xsi:type="expressions:Operator" begin="2632" end="2661" operator="==">
                            <operands xsi:type="expressions:CallSet" begin="2632" end="2655">
                              <calls begin="2632" end="2649" name="oppositeAttribute" prefix=""/>
                              <calls begin="2650" end="2655" name="upper" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="2659" end="2661" value="-1"/>
                          </operands>
                          <operands xsi:type="expressions:Operator" begin="2665" end="2692" operator=">">
                            <operands xsi:type="expressions:CallSet" begin="2665" end="2688">
                              <calls begin="2665" end="2682" name="oppositeAttribute" prefix=""/>
                              <calls begin="2683" end="2688" name="upper" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="2691" end="2692" value="1"/>
                          </operands>
                        </expression>
                      </operands>
                      <operands xsi:type="expressions:Operator" begin="2697" end="2707" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="2697" end="2702">
                          <calls begin="2697" end="2702" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="2706" end="2707" value="1"/>
                      </operands>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="2717" end="2717" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="2733" end="2743" value=" |*|&lt;-->1 "/>
                  <thenStatements xsi:type="statements:Text" begin="2749" end="2753" value="    "/>
                  <thenStatements xsi:type="statements:Feature" begin="2755" end="2768">
                    <expression xsi:type="expressions:CallSet" begin="2755" end="2768">
                      <calls begin="2755" end="2768" name="genForeignKey" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2770" end="2773" value=",&#xD;&#xA;"/>
                </elseIf>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="2792" end="2821">
                    <expression xsi:type="expressions:Operator" begin="2794" end="2820" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="2794" end="2810">
                        <calls begin="2794" end="2810" name="isMainEndPoint" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="2814" end="2820" value="true"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="2826" end="2826" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="2838" end="2848" value=" |n|&lt;-->n "/>
                  <thenStatements xsi:type="statements:Text" begin="2854" end="2854" value=""/>
                  <thenStatements xsi:type="statements:If" begin="2871" end="2995">
                    <condition xsi:type="expressions:Parenthesis" begin="2871" end="2915">
                      <expression xsi:type="expressions:Operator" begin="2872" end="2914" operator="&amp;&amp;">
                        <operands xsi:type="expressions:Operator" begin="2872" end="2882" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="2872" end="2877">
                            <calls begin="2872" end="2877" name="upper" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:IntegerLiteral" begin="2881" end="2882" value="1"/>
                        </operands>
                        <operands xsi:type="expressions:Operator" begin="2886" end="2914" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="2886" end="2909">
                            <calls begin="2886" end="2903" name="oppositeAttribute" prefix=""/>
                            <calls begin="2904" end="2909" name="upper" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:IntegerLiteral" begin="2913" end="2914" value="1"/>
                        </operands>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="2920" end="2920" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="2936" end="2946" value=" |1|&lt;-->1 "/>
                    <thenStatements xsi:type="statements:Text" begin="2952" end="2956" value="    "/>
                    <thenStatements xsi:type="statements:Feature" begin="2958" end="2971">
                      <expression xsi:type="expressions:CallSet" begin="2958" end="2971">
                        <calls begin="2958" end="2971" name="genForeignKey" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="2973" end="2983" value=" UNIQUE,&#xD;&#xA;"/>
                  </thenStatements>
                </elseIf>
              </statements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3028" end="3028" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="3036" end="3059" value=" Opposite associations "/>
            <thenStatements xsi:type="statements:Text" begin="3065" end="3065" value=""/>
            <thenStatements xsi:type="statements:For" begin="3075" end="3528">
              <iterator xsi:type="expressions:Parenthesis" begin="3075" end="3093">
                <expression xsi:type="expressions:CallSet" begin="3076" end="3092">
                  <calls begin="3076" end="3092" name="pointedAttribute" prefix=""/>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="3098" end="3098" value=""/>
              <statements xsi:type="statements:Comment" begin="3106" end="3115" value=" n---|n| "/>
              <statements xsi:type="statements:Text" begin="3121" end="3121" value=""/>
              <statements xsi:type="statements:If" begin="3134" end="3517">
                <condition xsi:type="expressions:Parenthesis" begin="3134" end="3152">
                  <expression xsi:type="expressions:Operator" begin="3135" end="3151" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="3135" end="3143">
                      <calls begin="3135" end="3143" name="opposite" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:NullLiteral" begin="3147" end="3151"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="3157" end="3157" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="3169" end="3178" value=" n-->|n| "/>
                <thenStatements xsi:type="statements:Text" begin="3184" end="3184" value=""/>
                <thenStatements xsi:type="statements:If" begin="3201" end="3502">
                  <condition xsi:type="expressions:Parenthesis" begin="3201" end="3213">
                    <expression xsi:type="expressions:Operator" begin="3202" end="3212" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="3202" end="3207">
                        <calls begin="3202" end="3207" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="3211" end="3212" value="1"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="3218" end="3218" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="3234" end="3243" value=" n-->|*| "/>
                  <thenStatements xsi:type="statements:Text" begin="3249" end="3249" value=""/>
                  <thenStatements xsi:type="statements:If" begin="3270" end="3483">
                    <condition xsi:type="expressions:Parenthesis" begin="3270" end="3300">
                      <expression xsi:type="expressions:Operator" begin="3271" end="3299" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="3271" end="3294">
                          <calls begin="3271" end="3288" name="oppositeAttribute" prefix=""/>
                          <calls begin="3289" end="3294" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="3298" end="3299" value="1"/>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="3305" end="3305" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="3325" end="3334" value=" 1-->|*| "/>
                    <thenStatements xsi:type="statements:Text" begin="3340" end="3347" value="    FK_"/>
                    <thenStatements xsi:type="statements:Feature" begin="3349" end="3392">
                      <expression xsi:type="expressions:CallSet" begin="3349" end="3392">
                        <calls begin="3349" end="3366" name="oppositeAttribute" prefix=""/>
                        <calls begin="3367" end="3371" name="type" prefix=""/>
                        <calls begin="3372" end="3376" name="name" prefix=""/>
                        <calls begin="3377" end="3392" name="toSqlNotation" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="3394" end="3395" value="_"/>
                    <thenStatements xsi:type="statements:Feature" begin="3397" end="3417">
                      <expression xsi:type="expressions:CallSet" begin="3397" end="3417">
                        <calls begin="3397" end="3401" name="name" prefix=""/>
                        <calls begin="3402" end="3417" name="toSqlNotation" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="3419" end="3431" value="_ID CHAR(32)"/>
                    <thenStatements xsi:type="statements:If" begin="3436" end="3459">
                      <condition xsi:type="expressions:Parenthesis" begin="3436" end="3447">
                        <expression xsi:type="expressions:Operator" begin="3437" end="3446" operator=">">
                          <operands xsi:type="expressions:CallSet" begin="3437" end="3442">
                            <calls begin="3437" end="3442" name="lower" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:IntegerLiteral" begin="3445" end="3446"/>
                        </expression>
                      </condition>
                      <thenStatements xsi:type="statements:Text" begin="3450" end="3459" value=" NOT NULL"/>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="3464" end="3467" value=",&#xD;&#xA;"/>
                  </thenStatements>
                </thenStatements>
              </statements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3535" end="3535" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="3543" end="3556" value=" Inheritance "/>
            <thenStatements xsi:type="statements:Text" begin="3562" end="3562" value=""/>
            <thenStatements xsi:type="statements:If" begin="3571" end="3788">
              <condition xsi:type="expressions:Parenthesis" begin="3571" end="3592">
                <expression xsi:type="expressions:Not" begin="3572" end="3591">
                  <expression xsi:type="expressions:CallSet" begin="3573" end="3591">
                    <calls begin="3573" end="3583" name="superClass" prefix=""/>
                    <calls begin="3584" end="3591" name="isEmpty" prefix=""/>
                  </expression>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="3597" end="3613" value="    FK_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="3615" end="3646">
                <expression xsi:type="expressions:CallSet" begin="3615" end="3646">
                  <calls begin="3615" end="3625" name="superClass" prefix=""/>
                  <calls begin="3626" end="3630" name="name" prefix=""/>
                  <calls begin="3631" end="3646" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3648" end="3705" value="_ID CHAR(32) NOT NULL,    &#xD;&#xA;    PRIMARY KEY (FK_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="3707" end="3738">
                <expression xsi:type="expressions:CallSet" begin="3707" end="3738">
                  <calls begin="3707" end="3717" name="superClass" prefix=""/>
                  <calls begin="3718" end="3722" name="name" prefix=""/>
                  <calls begin="3723" end="3738" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3740" end="3746" value="_ID)&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="3762" end="3784" value="    PRIMARY KEY (ID)&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3795" end="3801" value=");&#xD;&#xA;&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:Comment" begin="3809" end="3851" value=" Join table for many to many associations "/>
            <thenStatements xsi:type="statements:Text" begin="3857" end="3857" value=""/>
            <thenStatements xsi:type="statements:For" begin="3867" end="4657">
              <iterator xsi:type="expressions:Parenthesis" begin="3867" end="3930">
                <expression xsi:type="expressions:CallSet" begin="3868" end="3929">
                  <calls begin="3868" end="3885" name="getAssociations" prefix=""/>
                  <calls begin="3886" end="3916" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="3906" end="3915">
                      <calls begin="3906" end="3915" name="current" prefix=""/>
                    </arguments>
                    <filter xsi:type="expressions:CallSet" begin="3917" end="3928">
                      <calls begin="3917" end="3928" name="isNavigable" prefix=""/>
                    </filter>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="3935" end="3935" value=""/>
              <statements xsi:type="statements:Comment" begin="3943" end="3950" value=" n---n "/>
              <statements xsi:type="statements:Text" begin="3956" end="3956" value=""/>
              <statements xsi:type="statements:If" begin="3969" end="4646">
                <condition xsi:type="expressions:Parenthesis" begin="3969" end="4013">
                  <expression xsi:type="expressions:Operator" begin="3970" end="4012" operator="&amp;&amp;">
                    <operands xsi:type="expressions:Operator" begin="3970" end="3980" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="3970" end="3975">
                        <calls begin="3970" end="3975" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="3979" end="3980" value="1"/>
                    </operands>
                    <operands xsi:type="expressions:Operator" begin="3984" end="4012" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="3984" end="4007">
                        <calls begin="3984" end="4001" name="oppositeAttribute" prefix=""/>
                        <calls begin="4002" end="4007" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="4011" end="4012" value="1"/>
                    </operands>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="4018" end="4018" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="4030" end="4037" value=" *---* "/>
                <thenStatements xsi:type="statements:Text" begin="4043" end="4043" value=""/>
                <thenStatements xsi:type="statements:If" begin="4060" end="4631">
                  <condition xsi:type="expressions:Parenthesis" begin="4060" end="4135">
                    <expression xsi:type="expressions:Operator" begin="4066" end="4134" operator="||">
                      <operands xsi:type="expressions:Operator" begin="4066" end="4082" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="4066" end="4074">
                          <calls begin="4066" end="4074" name="opposite" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:NullLiteral" begin="4078" end="4082"/>
                      </operands>
                      <operands xsi:type="expressions:Operator" begin="4108" end="4134" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="4108" end="4124">
                          <calls begin="4108" end="4124" name="isMainEndPoint" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:StringLiteral" begin="4128" end="4134" value="true"/>
                      </operands>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="4140" end="4140" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="4156" end="4165" value=" *-->|*| "/>
                  <thenStatements xsi:type="statements:Text" begin="4171" end="4197" value="DROP TABLE IF EXISTS JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4199" end="4242">
                    <expression xsi:type="expressions:CallSet" begin="4199" end="4242">
                      <calls begin="4199" end="4216" name="oppositeAttribute" prefix=""/>
                      <calls begin="4217" end="4221" name="type" prefix=""/>
                      <calls begin="4222" end="4226" name="name" prefix=""/>
                      <calls begin="4227" end="4242" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4244" end="4245" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4247" end="4272">
                    <expression xsi:type="expressions:CallSet" begin="4247" end="4272">
                      <calls begin="4247" end="4251" name="type" prefix=""/>
                      <calls begin="4252" end="4256" name="name" prefix=""/>
                      <calls begin="4257" end="4272" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4274" end="4295" value=";&#xD;&#xA;CREATE TABLE JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4297" end="4340">
                    <expression xsi:type="expressions:CallSet" begin="4297" end="4340">
                      <calls begin="4297" end="4314" name="oppositeAttribute" prefix=""/>
                      <calls begin="4315" end="4319" name="type" prefix=""/>
                      <calls begin="4320" end="4324" name="name" prefix=""/>
                      <calls begin="4325" end="4340" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4342" end="4343" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4345" end="4370">
                    <expression xsi:type="expressions:CallSet" begin="4345" end="4370">
                      <calls begin="4345" end="4349" name="type" prefix=""/>
                      <calls begin="4350" end="4354" name="name" prefix=""/>
                      <calls begin="4355" end="4370" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4372" end="4381" value="&#xD;&#xA;(&#xD;&#xA;    "/>
                  <thenStatements xsi:type="statements:Feature" begin="4383" end="4426">
                    <expression xsi:type="expressions:CallSet" begin="4383" end="4426">
                      <calls begin="4383" end="4400" name="oppositeAttribute" prefix=""/>
                      <calls begin="4401" end="4405" name="type" prefix=""/>
                      <calls begin="4406" end="4410" name="name" prefix=""/>
                      <calls begin="4411" end="4426" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4428" end="4456" value="_ID CHAR(32) NOT NULL,&#xD;&#xA;    "/>
                  <thenStatements xsi:type="statements:Feature" begin="4458" end="4483">
                    <expression xsi:type="expressions:CallSet" begin="4458" end="4483">
                      <calls begin="4458" end="4462" name="type" prefix=""/>
                      <calls begin="4463" end="4467" name="name" prefix=""/>
                      <calls begin="4468" end="4483" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4485" end="4526" value="_ID CHAR(32) NOT NULL,&#xD;&#xA;    PRIMARY KEY ("/>
                  <thenStatements xsi:type="statements:Feature" begin="4528" end="4571">
                    <expression xsi:type="expressions:CallSet" begin="4528" end="4571">
                      <calls begin="4528" end="4545" name="oppositeAttribute" prefix=""/>
                      <calls begin="4546" end="4550" name="type" prefix=""/>
                      <calls begin="4551" end="4555" name="name" prefix=""/>
                      <calls begin="4556" end="4571" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4573" end="4578" value="_ID, "/>
                  <thenStatements xsi:type="statements:Feature" begin="4580" end="4605">
                    <expression xsi:type="expressions:CallSet" begin="4580" end="4605">
                      <calls begin="4580" end="4584" name="type" prefix=""/>
                      <calls begin="4585" end="4589" name="name" prefix=""/>
                      <calls begin="4590" end="4605" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4607" end="4619" value="_ID)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;"/>
                </thenStatements>
              </statements>
            </thenStatements>
          </statements>
        </statements>
      </scripts>
      <scripts begin="4774" end="4817">
        <descriptor begin="4687" end="4722" name="convertToSqlType" type="Type">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="4776" end="4815">
          <expression xsi:type="expressions:CallSet" begin="4776" end="4815">
            <calls begin="4776" end="4815" name="getProperty" prefix="">
              <arguments xsi:type="expressions:Operator" begin="4788" end="4814" operator="+">
                <operands xsi:type="expressions:StringLiteral" begin="4788" end="4809" value="sql.typeconversion."/>
                <operands xsi:type="expressions:CallSet" begin="4810" end="4814">
                  <calls begin="4810" end="4814" name="name" prefix=""/>
                </operands>
              </arguments>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="4870" end="4972">
        <descriptor begin="4830" end="4866" name="genForeignKey" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="4870" end="4873" value="FK_"/>
        <statements xsi:type="statements:Feature" begin="4875" end="4900">
          <expression xsi:type="expressions:CallSet" begin="4875" end="4900">
            <calls begin="4875" end="4879" name="type" prefix=""/>
            <calls begin="4880" end="4884" name="name" prefix=""/>
            <calls begin="4885" end="4900" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4902" end="4903" value="_"/>
        <statements xsi:type="statements:Feature" begin="4905" end="4925">
          <expression xsi:type="expressions:CallSet" begin="4905" end="4925">
            <calls begin="4905" end="4909" name="name" prefix=""/>
            <calls begin="4910" end="4925" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="4927" end="4939" value="_ID CHAR(32)"/>
        <statements xsi:type="statements:If" begin="4944" end="4967">
          <condition xsi:type="expressions:Parenthesis" begin="4944" end="4955">
            <expression xsi:type="expressions:Operator" begin="4945" end="4954" operator=">">
              <operands xsi:type="expressions:CallSet" begin="4945" end="4950">
                <calls begin="4945" end="4950" name="lower" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="4953" end="4954"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="4958" end="4967" value=" NOT NULL"/>
        </statements>
      </scripts>
      <scripts begin="5026" end="5286">
        <descriptor begin="4985" end="5022" name="isMainEndPoint" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="5031" end="5281">
          <condition xsi:type="expressions:Parenthesis" begin="5031" end="5252">
            <expression xsi:type="expressions:Operator" begin="5032" end="5251" operator="||">
              <operands xsi:type="expressions:Operator" begin="5032" end="5058" operator="==">
                <operands xsi:type="expressions:CallSet" begin="5032" end="5043">
                  <calls begin="5032" end="5043" name="aggregation" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="5047" end="5058" value="composite"/>
              </operands>
              <operands xsi:type="expressions:Parenthesis" begin="5068" end="5251">
                <expression xsi:type="expressions:Operator" begin="5070" end="5243" operator="&amp;&amp;">
                  <operands xsi:type="expressions:Operator" begin="5070" end="5114" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="5070" end="5099">
                      <calls begin="5070" end="5087" name="oppositeAttribute" prefix=""/>
                      <calls begin="5088" end="5099" name="aggregation" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="5103" end="5114" value="composite"/>
                  </operands>
                  <operands xsi:type="expressions:Parenthesis" begin="5129" end="5243">
                    <expression xsi:type="expressions:Operator" begin="5130" end="5231" operator="||">
                      <operands xsi:type="expressions:Operator" begin="5130" end="5164" operator=">">
                        <operands xsi:type="expressions:CallSet" begin="5130" end="5160">
                          <calls begin="5130" end="5160" name="compare" prefix="">
                            <arguments xsi:type="expressions:CallSet" begin="5138" end="5148">
                              <calls begin="5138" end="5143" name="class" prefix=""/>
                              <calls begin="5144" end="5148" name="name" prefix=""/>
                            </arguments>
                            <arguments xsi:type="expressions:CallSet" begin="5150" end="5159">
                              <calls begin="5150" end="5154" name="type" prefix=""/>
                              <calls begin="5155" end="5159" name="name" prefix=""/>
                            </arguments>
                          </calls>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="5163" end="5164"/>
                      </operands>
                      <operands xsi:type="expressions:Parenthesis" begin="5180" end="5231">
                        <expression xsi:type="expressions:Operator" begin="5181" end="5230" operator="&amp;&amp;">
                          <operands xsi:type="expressions:Operator" begin="5181" end="5194" operator="==">
                            <operands xsi:type="expressions:CallSet" begin="5181" end="5186">
                              <calls begin="5181" end="5186" name="class" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:CallSet" begin="5190" end="5194">
                              <calls begin="5190" end="5194" name="type" prefix=""/>
                            </operands>
                          </operands>
                          <operands xsi:type="expressions:Operator" begin="5198" end="5230" operator=">">
                            <operands xsi:type="expressions:CallSet" begin="5198" end="5226">
                              <calls begin="5198" end="5226" name="compare" prefix="">
                                <arguments xsi:type="expressions:CallSet" begin="5206" end="5210">
                                  <calls begin="5206" end="5210" name="name" prefix=""/>
                                </arguments>
                                <arguments xsi:type="expressions:CallSet" begin="5212" end="5225">
                                  <calls begin="5212" end="5220" name="opposite" prefix=""/>
                                  <calls begin="5221" end="5225" name="name" prefix=""/>
                                </arguments>
                              </calls>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="5229" end="5230"/>
                          </operands>
                        </expression>
                      </operands>
                    </expression>
                  </operands>
                </expression>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="5262" end="5266" value="true"/>
          <elseStatements xsi:type="statements:Text" begin="5276" end="5281" value="false"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.sql.sqlserver2005.sql-constraints" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.21" beginTag="&lt;%" endTag="%>">
      <scripts begin="948" end="3152">
        <descriptor begin="848" end="944" name="genConstraints" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="891" end="910">
              <expression xsi:type="expressions:CallSet" begin="891" end="910">
                <calls begin="891" end="910" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="912" end="913" value="/"/>
            <statements xsi:type="statements:Feature" begin="915" end="926">
              <expression xsi:type="expressions:CallSet" begin="915" end="926">
                <calls begin="915" end="926" name="projectName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="928" end="943" value="-contraints.sql"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="948" end="950" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="956" end="3147">
          <iterator xsi:type="expressions:Parenthesis" begin="956" end="998">
            <expression xsi:type="expressions:CallSet" begin="957" end="997">
              <calls begin="957" end="981" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="973" end="980" value="Class"/>
              </calls>
              <calls begin="982" end="997" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="989" end="996" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:Text" begin="1003" end="1003" value=""/>
          <statements xsi:type="statements:If" begin="1012" end="3140">
            <condition xsi:type="expressions:Parenthesis" begin="1012" end="1022">
              <expression xsi:type="expressions:CallSet" begin="1013" end="1021">
                <calls begin="1013" end="1021" name="isEntity" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1027" end="1052" value="-- Constraints for table "/>
            <thenStatements xsi:type="statements:Feature" begin="1054" end="1074">
              <expression xsi:type="expressions:CallSet" begin="1054" end="1074">
                <calls begin="1054" end="1058" name="name" prefix=""/>
                <calls begin="1059" end="1074" name="toSqlNotation" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1076" end="1080" value="&#xD;&#xA;&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:For" begin="1094" end="2526">
              <iterator xsi:type="expressions:Parenthesis" begin="1094" end="1159">
                <expression xsi:type="expressions:CallSet" begin="1095" end="1158">
                  <calls begin="1095" end="1112" name="getAssociations" prefix=""/>
                  <calls begin="1113" end="1143" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="1133" end="1142">
                      <calls begin="1133" end="1142" name="current" prefix=""/>
                    </arguments>
                    <filter xsi:type="expressions:CallSet" begin="1144" end="1157">
                      <calls begin="1144" end="1157" name="isNavigable" prefix=""/>
                    </filter>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="1164" end="1164" value=""/>
              <statements xsi:type="statements:Comment" begin="1176" end="1183" value=" n---n "/>
              <statements xsi:type="statements:Text" begin="1189" end="1189" value=""/>
              <statements xsi:type="statements:If" begin="1206" end="1606">
                <condition xsi:type="expressions:Parenthesis" begin="1206" end="1224">
                  <expression xsi:type="expressions:Operator" begin="1207" end="1223" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="1207" end="1215">
                      <calls begin="1207" end="1215" name="opposite" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:NullLiteral" begin="1219" end="1223"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="1229" end="1229" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="1245" end="1254" value=" |n|-->n "/>
                <thenStatements xsi:type="statements:Text" begin="1260" end="1260" value=""/>
                <thenStatements xsi:type="statements:If" begin="1281" end="1375">
                  <condition xsi:type="expressions:Parenthesis" begin="1281" end="1293">
                    <expression xsi:type="expressions:Operator" begin="1282" end="1292" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="1282" end="1287">
                        <calls begin="1282" end="1287" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1291" end="1292" value="1"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="1298" end="1298" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="1318" end="1327" value=" |n|-->1 "/>
                  <thenStatements xsi:type="statements:Feature" begin="1335" end="1355">
                    <expression xsi:type="expressions:CallSet" begin="1335" end="1355">
                      <calls begin="1335" end="1355" name="genForeignConstraint" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1357" end="1359" value="&#xD;&#xA;"/>
                </thenStatements>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="1405" end="1434">
                    <expression xsi:type="expressions:Operator" begin="1407" end="1433" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="1407" end="1423">
                        <calls begin="1407" end="1423" name="isMainEndPoint" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="1427" end="1433" value="true"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="1439" end="1439" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="1455" end="1465" value=" |n|&lt;-->n "/>
                  <thenStatements xsi:type="statements:Text" begin="1471" end="1471" value=""/>
                  <thenStatements xsi:type="statements:If" begin="1492" end="1587">
                    <condition xsi:type="expressions:Parenthesis" begin="1492" end="1504">
                      <expression xsi:type="expressions:Operator" begin="1493" end="1503" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="1493" end="1498">
                          <calls begin="1493" end="1498" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="1502" end="1503" value="1"/>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="1509" end="1509" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="1529" end="1539" value=" |n|&lt;-->1 "/>
                    <thenStatements xsi:type="statements:Feature" begin="1547" end="1567">
                      <expression xsi:type="expressions:CallSet" begin="1547" end="1567">
                        <calls begin="1547" end="1567" name="genForeignConstraint" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="1569" end="1571" value="&#xD;&#xA;"/>
                  </thenStatements>
                </elseIf>
              </statements>
              <statements xsi:type="statements:Text" begin="1613" end="1613" value=""/>
              <statements xsi:type="statements:If" begin="1630" end="2509">
                <condition xsi:type="expressions:Parenthesis" begin="1630" end="1674">
                  <expression xsi:type="expressions:Operator" begin="1631" end="1673" operator="&amp;&amp;">
                    <operands xsi:type="expressions:Operator" begin="1631" end="1641" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="1631" end="1636">
                        <calls begin="1631" end="1636" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1640" end="1641" value="1"/>
                    </operands>
                    <operands xsi:type="expressions:Operator" begin="1645" end="1673" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="1645" end="1668">
                        <calls begin="1645" end="1662" name="oppositeAttribute" prefix=""/>
                        <calls begin="1663" end="1668" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1672" end="1673" value="1"/>
                    </operands>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="1679" end="1679" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="1691" end="1698" value=" *---* "/>
                <thenStatements xsi:type="statements:Text" begin="1704" end="1704" value=""/>
                <thenStatements xsi:type="statements:If" begin="1725" end="2490">
                  <condition xsi:type="expressions:Parenthesis" begin="1725" end="1753">
                    <expression xsi:type="expressions:Operator" begin="1726" end="1752" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="1726" end="1742">
                        <calls begin="1726" end="1742" name="isMainEndPoint" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="1746" end="1752" value="true"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="1758" end="1850" value="IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[CST_FK_JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1852" end="1877">
                    <expression xsi:type="expressions:CallSet" begin="1852" end="1877">
                      <calls begin="1852" end="1856" name="type" prefix=""/>
                      <calls begin="1857" end="1861" name="name" prefix=""/>
                      <calls begin="1862" end="1877" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1879" end="1880" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1882" end="1902">
                    <expression xsi:type="expressions:CallSet" begin="1882" end="1902">
                      <calls begin="1882" end="1886" name="name" prefix=""/>
                      <calls begin="1887" end="1902" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1904" end="1905" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1907" end="1908">
                    <expression xsi:type="expressions:CallSet" begin="1907" end="1908">
                      <calls begin="1907" end="1908" name="i" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1910" end="1958" value=";]'))                        &#xD;&#xA;ALTER TABLE JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1960" end="1985">
                    <expression xsi:type="expressions:CallSet" begin="1960" end="1985">
                      <calls begin="1960" end="1964" name="type" prefix=""/>
                      <calls begin="1965" end="1969" name="name" prefix=""/>
                      <calls begin="1970" end="1985" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="1987" end="1988" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="1990" end="2016">
                    <expression xsi:type="expressions:CallSet" begin="1990" end="2016">
                      <calls begin="1990" end="1995" name="class" prefix=""/>
                      <calls begin="1996" end="2000" name="name" prefix=""/>
                      <calls begin="2001" end="2016" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2018" end="2052" value="&#xD;&#xA;    DROP CONSTRAINT CST_FK_JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2054" end="2079">
                    <expression xsi:type="expressions:CallSet" begin="2054" end="2079">
                      <calls begin="2054" end="2058" name="type" prefix=""/>
                      <calls begin="2059" end="2063" name="name" prefix=""/>
                      <calls begin="2064" end="2079" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2081" end="2082" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2084" end="2109">
                    <expression xsi:type="expressions:CallSet" begin="2084" end="2109">
                      <calls begin="2084" end="2088" name="type" prefix=""/>
                      <calls begin="2089" end="2093" name="name" prefix=""/>
                      <calls begin="2094" end="2109" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2111" end="2112" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2114" end="2134">
                    <expression xsi:type="expressions:CallSet" begin="2114" end="2134">
                      <calls begin="2114" end="2118" name="name" prefix=""/>
                      <calls begin="2119" end="2134" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2136" end="2137" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2139" end="2140">
                    <expression xsi:type="expressions:CallSet" begin="2139" end="2140">
                      <calls begin="2139" end="2140" name="i" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2142" end="2165" value="; &#xD;&#xA;&#xD;&#xA;ALTER TABLE JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2167" end="2192">
                    <expression xsi:type="expressions:CallSet" begin="2167" end="2192">
                      <calls begin="2167" end="2171" name="type" prefix=""/>
                      <calls begin="2172" end="2176" name="name" prefix=""/>
                      <calls begin="2177" end="2192" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2194" end="2195" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2197" end="2223">
                    <expression xsi:type="expressions:CallSet" begin="2197" end="2223">
                      <calls begin="2197" end="2202" name="class" prefix=""/>
                      <calls begin="2203" end="2207" name="name" prefix=""/>
                      <calls begin="2208" end="2223" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2225" end="2255" value="&#xD;&#xA; ADD CONSTRAINT CST_FK_JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2257" end="2282">
                    <expression xsi:type="expressions:CallSet" begin="2257" end="2282">
                      <calls begin="2257" end="2261" name="type" prefix=""/>
                      <calls begin="2262" end="2266" name="name" prefix=""/>
                      <calls begin="2267" end="2282" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2284" end="2285" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2287" end="2312">
                    <expression xsi:type="expressions:CallSet" begin="2287" end="2312">
                      <calls begin="2287" end="2291" name="type" prefix=""/>
                      <calls begin="2292" end="2296" name="name" prefix=""/>
                      <calls begin="2297" end="2312" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2314" end="2315" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2317" end="2337">
                    <expression xsi:type="expressions:CallSet" begin="2317" end="2337">
                      <calls begin="2317" end="2321" name="name" prefix=""/>
                      <calls begin="2322" end="2337" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2339" end="2340" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2342" end="2343">
                    <expression xsi:type="expressions:CallSet" begin="2342" end="2343">
                      <calls begin="2342" end="2343" name="i" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2345" end="2365" value="&#xD;&#xA; FOREIGN KEY (REF_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2367" end="2392">
                    <expression xsi:type="expressions:CallSet" begin="2367" end="2392">
                      <calls begin="2367" end="2371" name="type" prefix=""/>
                      <calls begin="2372" end="2376" name="name" prefix=""/>
                      <calls begin="2377" end="2392" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2394" end="2395" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="2397" end="2417">
                    <expression xsi:type="expressions:CallSet" begin="2397" end="2417">
                      <calls begin="2397" end="2401" name="name" prefix=""/>
                      <calls begin="2402" end="2417" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2419" end="2437" value="_ID)&#xD;&#xA; REFERENCES "/>
                  <thenStatements xsi:type="statements:Feature" begin="2439" end="2464">
                    <expression xsi:type="expressions:CallSet" begin="2439" end="2464">
                      <calls begin="2439" end="2443" name="type" prefix=""/>
                      <calls begin="2444" end="2448" name="name" prefix=""/>
                      <calls begin="2449" end="2464" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2466" end="2474" value=" (ID);&#xD;&#xA;"/>
                </thenStatements>
              </statements>
              <statements xsi:type="statements:Text" begin="2516" end="2518" value="&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="2533" end="2543" value="        &#xD;&#xA;"/>
            <thenStatements xsi:type="statements:If" begin="2556" end="3119">
              <condition xsi:type="expressions:Parenthesis" begin="2556" end="2577">
                <expression xsi:type="expressions:Not" begin="2557" end="2576">
                  <expression xsi:type="expressions:CallSet" begin="2558" end="2576">
                    <calls begin="2558" end="2568" name="superClass" prefix=""/>
                    <calls begin="2569" end="2576" name="isEmpty" prefix=""/>
                  </expression>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="2582" end="2678" value="IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[CST_FK_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="2680" end="2711">
                <expression xsi:type="expressions:CallSet" begin="2680" end="2711">
                  <calls begin="2680" end="2690" name="superClass" prefix=""/>
                  <calls begin="2691" end="2695" name="name" prefix=""/>
                  <calls begin="2696" end="2711" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2713" end="2714" value="_"/>
              <thenStatements xsi:type="statements:Feature" begin="2716" end="2736">
                <expression xsi:type="expressions:CallSet" begin="2716" end="2736">
                  <calls begin="2716" end="2720" name="name" prefix=""/>
                  <calls begin="2721" end="2736" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2738" end="2739" value="_"/>
              <thenStatements xsi:type="statements:Feature" begin="2741" end="2742">
                <expression xsi:type="expressions:CallSet" begin="2741" end="2742">
                  <calls begin="2741" end="2742" name="i" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2744" end="2771" value=";]'))        &#xD;&#xA;ALTER TABLE "/>
              <thenStatements xsi:type="statements:Feature" begin="2773" end="2793">
                <expression xsi:type="expressions:CallSet" begin="2773" end="2793">
                  <calls begin="2773" end="2777" name="name" prefix=""/>
                  <calls begin="2778" end="2793" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2795" end="2829" value="&#xD;&#xA;DROP CONSTRAINT CST_FK_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="2831" end="2862">
                <expression xsi:type="expressions:CallSet" begin="2831" end="2862">
                  <calls begin="2831" end="2841" name="superClass" prefix=""/>
                  <calls begin="2842" end="2846" name="name" prefix=""/>
                  <calls begin="2847" end="2862" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2864" end="2888" value="_ID;    &#xD;&#xA;&#xD;&#xA;ALTER TABLE "/>
              <thenStatements xsi:type="statements:Feature" begin="2890" end="2910">
                <expression xsi:type="expressions:CallSet" begin="2890" end="2910">
                  <calls begin="2890" end="2894" name="name" prefix=""/>
                  <calls begin="2895" end="2910" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2912" end="2946" value="&#xD;&#xA; ADD CONSTRAINT CST_FK_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="2948" end="2979">
                <expression xsi:type="expressions:CallSet" begin="2948" end="2979">
                  <calls begin="2948" end="2958" name="superClass" prefix=""/>
                  <calls begin="2959" end="2963" name="name" prefix=""/>
                  <calls begin="2964" end="2979" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="2981" end="3013" value="_ID&#xD;&#xA; FOREIGN KEY (REF_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="3015" end="3046">
                <expression xsi:type="expressions:CallSet" begin="3015" end="3046">
                  <calls begin="3015" end="3025" name="superClass" prefix=""/>
                  <calls begin="3026" end="3030" name="name" prefix=""/>
                  <calls begin="3031" end="3046" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3048" end="3066" value="_ID)&#xD;&#xA; REFERENCES "/>
              <thenStatements xsi:type="statements:Feature" begin="3068" end="3099">
                <expression xsi:type="expressions:CallSet" begin="3068" end="3099">
                  <calls begin="3068" end="3078" name="superClass" prefix=""/>
                  <calls begin="3079" end="3083" name="name" prefix=""/>
                  <calls begin="3084" end="3099" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3101" end="3111" value=" (ID);&#xD;&#xA;&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3126" end="3136" value="        &#xD;&#xA;"/>
          </statements>
        </statements>
      </scripts>
      <scripts begin="3212" end="3797">
        <descriptor begin="3165" end="3208" name="genForeignConstraint" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="3212" end="3299" value="IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[CST_FK_"/>
        <statements xsi:type="statements:Feature" begin="3301" end="3326">
          <expression xsi:type="expressions:CallSet" begin="3301" end="3326">
            <calls begin="3301" end="3305" name="type" prefix=""/>
            <calls begin="3306" end="3310" name="name" prefix=""/>
            <calls begin="3311" end="3326" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3328" end="3329" value="_"/>
        <statements xsi:type="statements:Feature" begin="3331" end="3351">
          <expression xsi:type="expressions:CallSet" begin="3331" end="3351">
            <calls begin="3331" end="3335" name="name" prefix=""/>
            <calls begin="3336" end="3351" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3353" end="3354" value="_"/>
        <statements xsi:type="statements:Feature" begin="3356" end="3357">
          <expression xsi:type="expressions:CallSet" begin="3356" end="3357">
            <calls begin="3356" end="3357" name="i" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3359" end="3378" value=";]'))&#xD;&#xA;ALTER TABLE "/>
        <statements xsi:type="statements:Feature" begin="3380" end="3425">
          <expression xsi:type="expressions:CallSet" begin="3380" end="3425">
            <calls begin="3380" end="3399" name="oppositeAttribute" prefix=""/>
            <calls begin="3400" end="3404" name="type" prefix=""/>
            <calls begin="3405" end="3409" name="name" prefix=""/>
            <calls begin="3410" end="3425" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3427" end="3456" value="&#xD;&#xA;    DROP CONSTRAINT CST_FK_"/>
        <statements xsi:type="statements:Feature" begin="3458" end="3483">
          <expression xsi:type="expressions:CallSet" begin="3458" end="3483">
            <calls begin="3458" end="3462" name="type" prefix=""/>
            <calls begin="3463" end="3467" name="name" prefix=""/>
            <calls begin="3468" end="3483" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3485" end="3486" value="_"/>
        <statements xsi:type="statements:Feature" begin="3488" end="3508">
          <expression xsi:type="expressions:CallSet" begin="3488" end="3508">
            <calls begin="3488" end="3492" name="name" prefix=""/>
            <calls begin="3493" end="3508" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3510" end="3511" value="_"/>
        <statements xsi:type="statements:Feature" begin="3513" end="3514">
          <expression xsi:type="expressions:CallSet" begin="3513" end="3514">
            <calls begin="3513" end="3514" name="i" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3516" end="3534" value="; &#xD;&#xA;&#xD;&#xA;ALTER TABLE "/>
        <statements xsi:type="statements:Feature" begin="3536" end="3581">
          <expression xsi:type="expressions:CallSet" begin="3536" end="3581">
            <calls begin="3536" end="3555" name="oppositeAttribute" prefix=""/>
            <calls begin="3556" end="3560" name="type" prefix=""/>
            <calls begin="3561" end="3565" name="name" prefix=""/>
            <calls begin="3566" end="3581" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3583" end="3608" value="&#xD;&#xA; ADD CONSTRAINT CST_FK_"/>
        <statements xsi:type="statements:Feature" begin="3610" end="3635">
          <expression xsi:type="expressions:CallSet" begin="3610" end="3635">
            <calls begin="3610" end="3614" name="type" prefix=""/>
            <calls begin="3615" end="3619" name="name" prefix=""/>
            <calls begin="3620" end="3635" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3637" end="3638" value="_"/>
        <statements xsi:type="statements:Feature" begin="3640" end="3660">
          <expression xsi:type="expressions:CallSet" begin="3640" end="3660">
            <calls begin="3640" end="3644" name="name" prefix=""/>
            <calls begin="3645" end="3660" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3662" end="3663" value="_"/>
        <statements xsi:type="statements:Feature" begin="3665" end="3666">
          <expression xsi:type="expressions:CallSet" begin="3665" end="3666">
            <calls begin="3665" end="3666" name="i" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3668" end="3688" value="&#xD;&#xA; FOREIGN KEY (REF_"/>
        <statements xsi:type="statements:Feature" begin="3690" end="3715">
          <expression xsi:type="expressions:CallSet" begin="3690" end="3715">
            <calls begin="3690" end="3694" name="type" prefix=""/>
            <calls begin="3695" end="3699" name="name" prefix=""/>
            <calls begin="3700" end="3715" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3717" end="3718" value="_"/>
        <statements xsi:type="statements:Feature" begin="3720" end="3740">
          <expression xsi:type="expressions:CallSet" begin="3720" end="3740">
            <calls begin="3720" end="3724" name="name" prefix=""/>
            <calls begin="3725" end="3740" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3742" end="3760" value="_ID)&#xD;&#xA; REFERENCES "/>
        <statements xsi:type="statements:Feature" begin="3762" end="3787">
          <expression xsi:type="expressions:CallSet" begin="3762" end="3787">
            <calls begin="3762" end="3766" name="type" prefix=""/>
            <calls begin="3767" end="3771" name="name" prefix=""/>
            <calls begin="3772" end="3787" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="3789" end="3797" value=" (ID);&#xD;&#xA;"/>
      </scripts>
      <scripts begin="3851" end="4110">
        <descriptor begin="3810" end="3847" name="isMainEndPoint" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="3856" end="4105">
          <condition xsi:type="expressions:Parenthesis" begin="3856" end="4076">
            <expression xsi:type="expressions:Operator" begin="3857" end="4075" operator="||">
              <operands xsi:type="expressions:Operator" begin="3857" end="3883" operator="==">
                <operands xsi:type="expressions:CallSet" begin="3857" end="3868">
                  <calls begin="3857" end="3868" name="aggregation" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="3872" end="3883" value="composite"/>
              </operands>
              <operands xsi:type="expressions:Parenthesis" begin="3893" end="4075">
                <expression xsi:type="expressions:Operator" begin="3894" end="4067" operator="&amp;&amp;">
                  <operands xsi:type="expressions:Operator" begin="3894" end="3938" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="3894" end="3923">
                      <calls begin="3894" end="3911" name="oppositeAttribute" prefix=""/>
                      <calls begin="3912" end="3923" name="aggregation" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="3927" end="3938" value="composite"/>
                  </operands>
                  <operands xsi:type="expressions:Parenthesis" begin="3953" end="4067">
                    <expression xsi:type="expressions:Operator" begin="3954" end="4055" operator="||">
                      <operands xsi:type="expressions:Operator" begin="3954" end="3988" operator=">">
                        <operands xsi:type="expressions:CallSet" begin="3954" end="3984">
                          <calls begin="3954" end="3984" name="compare" prefix="">
                            <arguments xsi:type="expressions:CallSet" begin="3962" end="3972">
                              <calls begin="3962" end="3967" name="class" prefix=""/>
                              <calls begin="3968" end="3972" name="name" prefix=""/>
                            </arguments>
                            <arguments xsi:type="expressions:CallSet" begin="3974" end="3983">
                              <calls begin="3974" end="3978" name="type" prefix=""/>
                              <calls begin="3979" end="3983" name="name" prefix=""/>
                            </arguments>
                          </calls>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="3987" end="3988"/>
                      </operands>
                      <operands xsi:type="expressions:Parenthesis" begin="4004" end="4055">
                        <expression xsi:type="expressions:Operator" begin="4005" end="4054" operator="&amp;&amp;">
                          <operands xsi:type="expressions:Operator" begin="4005" end="4018" operator="==">
                            <operands xsi:type="expressions:CallSet" begin="4005" end="4010">
                              <calls begin="4005" end="4010" name="class" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:CallSet" begin="4014" end="4018">
                              <calls begin="4014" end="4018" name="type" prefix=""/>
                            </operands>
                          </operands>
                          <operands xsi:type="expressions:Operator" begin="4022" end="4054" operator=">">
                            <operands xsi:type="expressions:CallSet" begin="4022" end="4050">
                              <calls begin="4022" end="4050" name="compare" prefix="">
                                <arguments xsi:type="expressions:CallSet" begin="4030" end="4034">
                                  <calls begin="4030" end="4034" name="name" prefix=""/>
                                </arguments>
                                <arguments xsi:type="expressions:CallSet" begin="4036" end="4049">
                                  <calls begin="4036" end="4044" name="opposite" prefix=""/>
                                  <calls begin="4045" end="4049" name="name" prefix=""/>
                                </arguments>
                              </calls>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="4053" end="4054"/>
                          </operands>
                        </expression>
                      </operands>
                    </expression>
                  </operands>
                </expression>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="4086" end="4090" value="true"/>
          <elseStatements xsi:type="statements:Text" begin="4100" end="4105" value="false"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.sql.sqlserver2005.sql-create" imports="/0/@resources.17 /0/@resources.18 /0/@resources.19 /0/@resources.20 /0/@resources.21" beginTag="&lt;%" endTag="%>">
      <scripts begin="1049" end="4861">
        <descriptor begin="962" end="1045" name="generate" type="Model">
          <file>
            <statements xsi:type="statements:Feature" begin="999" end="1018">
              <expression xsi:type="expressions:CallSet" begin="999" end="1018">
                <calls begin="999" end="1018" name="pathToMainResources" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1020" end="1021" value="/"/>
            <statements xsi:type="statements:Feature" begin="1023" end="1034">
              <expression xsi:type="expressions:CallSet" begin="1023" end="1034">
                <calls begin="1023" end="1034" name="projectName" prefix=""/>
              </expression>
            </statements>
            <statements xsi:type="statements:Text" begin="1036" end="1044" value="-ddl.sql"/>
          </file>
        </descriptor>
        <statements xsi:type="statements:Text" begin="1049" end="1051" value="&#xD;&#xA;"/>
        <statements xsi:type="statements:For" begin="1057" end="4856">
          <iterator xsi:type="expressions:Parenthesis" begin="1057" end="1099">
            <expression xsi:type="expressions:CallSet" begin="1058" end="1098">
              <calls begin="1058" end="1082" name="getAllInstances" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1074" end="1081" value="Class"/>
              </calls>
              <calls begin="1083" end="1098" name="filter" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="1090" end="1097" value="Class"/>
              </calls>
            </expression>
          </iterator>
          <statements xsi:type="statements:If" begin="1107" end="4851">
            <condition xsi:type="expressions:Parenthesis" begin="1107" end="1117">
              <expression xsi:type="expressions:CallSet" begin="1108" end="1116">
                <calls begin="1108" end="1116" name="isEntity" prefix=""/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="1122" end="1143" value="-- Tables for Entity "/>
            <thenStatements xsi:type="statements:Feature" begin="1145" end="1149">
              <expression xsi:type="expressions:CallSet" begin="1145" end="1149">
                <calls begin="1145" end="1149" name="name" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1151" end="1231" value=" &#xD;&#xA;&#xD;&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].["/>
            <thenStatements xsi:type="statements:Feature" begin="1233" end="1253">
              <expression xsi:type="expressions:CallSet" begin="1233" end="1253">
                <calls begin="1233" end="1237" name="name" prefix=""/>
                <calls begin="1238" end="1253" name="toSqlNotation" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1255" end="1291" value="]') AND type in (N'U'))&#xD;&#xA;DROP TABLE "/>
            <thenStatements xsi:type="statements:Feature" begin="1293" end="1313">
              <expression xsi:type="expressions:CallSet" begin="1293" end="1313">
                <calls begin="1293" end="1297" name="name" prefix=""/>
                <calls begin="1298" end="1313" name="toSqlNotation" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1315" end="1332" value="&#xD;&#xA;&#xD;&#xA;CREATE TABLE "/>
            <thenStatements xsi:type="statements:Feature" begin="1334" end="1354">
              <expression xsi:type="expressions:CallSet" begin="1334" end="1354">
                <calls begin="1334" end="1338" name="name" prefix=""/>
                <calls begin="1339" end="1354" name="toSqlNotation" prefix=""/>
              </expression>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1356" end="1361" value="&#xD;&#xA;(&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:Comment" begin="1365" end="1392" value=" Class attribute iteration "/>
            <thenStatements xsi:type="statements:Comment" begin="1402" end="1473" value=" attribute.filterExistProperty(&quot;association&quot;,false) &#xD;&#xA;COMMENT ON COLUMN"/>
            <thenStatements xsi:type="statements:Text" begin="1479" end="1479" value=""/>
            <thenStatements xsi:type="statements:If" begin="1488" end="1553">
              <condition xsi:type="expressions:Parenthesis" begin="1488" end="1508">
                <expression xsi:type="expressions:CallSet" begin="1489" end="1507">
                  <calls begin="1489" end="1499" name="superClass" prefix=""/>
                  <calls begin="1500" end="1507" name="isEmpty" prefix=""/>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="1513" end="1549" value="    ID INT IDENTITY(1,1) NOT NULL,&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1560" end="1560" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="1568" end="1580" value=" Properties "/>
            <thenStatements xsi:type="statements:Text" begin="1586" end="1586" value=""/>
            <thenStatements xsi:type="statements:For" begin="1596" end="1869">
              <iterator xsi:type="expressions:Parenthesis" begin="1596" end="1648">
                <expression xsi:type="expressions:CallSet" begin="1597" end="1647">
                  <calls begin="1597" end="1606" name="attribute" prefix=""/>
                  <calls begin="1607" end="1647" name="filterExistProperty" prefix="">
                    <arguments xsi:type="expressions:StringLiteral" begin="1627" end="1640" value="association"/>
                    <arguments xsi:type="expressions:BooleanLiteral" begin="1641" end="1646"/>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="1653" end="1653" value=""/>
              <statements xsi:type="statements:Comment" begin="1665" end="1710" value=" Array of primitives types are not generated "/>
              <statements xsi:type="statements:Text" begin="1716" end="1716" value=""/>
              <statements xsi:type="statements:If" begin="1729" end="1858">
                <condition xsi:type="expressions:Parenthesis" begin="1729" end="1755">
                  <expression xsi:type="expressions:Operator" begin="1730" end="1754" operator="&amp;&amp;">
                    <operands xsi:type="expressions:Not" begin="1730" end="1740">
                      <expression xsi:type="expressions:CallSet" begin="1731" end="1740">
                        <calls begin="1731" end="1740" name="isDerived" prefix=""/>
                      </expression>
                    </operands>
                    <operands xsi:type="expressions:Operator" begin="1744" end="1754" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="1744" end="1749">
                        <calls begin="1744" end="1749" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1753" end="1754" value="1"/>
                    </operands>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="1760" end="1764" value="    "/>
                <thenStatements xsi:type="statements:Feature" begin="1766" end="1786">
                  <expression xsi:type="expressions:CallSet" begin="1766" end="1786">
                    <calls begin="1766" end="1770" name="name" prefix=""/>
                    <calls begin="1771" end="1786" name="toSqlNotation" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="1788" end="1789" value=" "/>
                <thenStatements xsi:type="statements:Feature" begin="1791" end="1812">
                  <expression xsi:type="expressions:CallSet" begin="1791" end="1812">
                    <calls begin="1791" end="1795" name="type" prefix=""/>
                    <calls begin="1796" end="1812" name="convertToSqlType" prefix=""/>
                  </expression>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="1814" end="1815" value=" "/>
                <thenStatements xsi:type="statements:If" begin="1820" end="1838">
                  <condition xsi:type="expressions:Parenthesis" begin="1820" end="1831">
                    <expression xsi:type="expressions:Operator" begin="1821" end="1830" operator=">">
                      <operands xsi:type="expressions:CallSet" begin="1821" end="1826">
                        <calls begin="1821" end="1826" name="lower" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="1829" end="1830"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="1834" end="1838" value="NOT "/>
                </thenStatements>
                <thenStatements xsi:type="statements:Text" begin="1843" end="1850" value="NULL,&#xD;&#xA;"/>
              </statements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="1876" end="1876" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="1884" end="1905" value=" Direct associations "/>
            <thenStatements xsi:type="statements:Text" begin="1911" end="1911" value=""/>
            <thenStatements xsi:type="statements:For" begin="1921" end="3052">
              <iterator xsi:type="expressions:Parenthesis" begin="1921" end="1984">
                <expression xsi:type="expressions:CallSet" begin="1922" end="1983">
                  <calls begin="1922" end="1939" name="getAssociations" prefix=""/>
                  <calls begin="1940" end="1970" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="1960" end="1969">
                      <calls begin="1960" end="1969" name="current" prefix=""/>
                    </arguments>
                    <filter xsi:type="expressions:CallSet" begin="1971" end="1982">
                      <calls begin="1971" end="1982" name="isNavigable" prefix=""/>
                    </filter>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="1989" end="1989" value=""/>
              <statements xsi:type="statements:Comment" begin="1997" end="2004" value=" n---n "/>
              <statements xsi:type="statements:Text" begin="2010" end="2010" value=""/>
              <statements xsi:type="statements:If" begin="2023" end="3041">
                <condition xsi:type="expressions:Parenthesis" begin="2023" end="2041">
                  <expression xsi:type="expressions:Operator" begin="2024" end="2040" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="2024" end="2032">
                      <calls begin="2024" end="2032" name="opposite" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:NullLiteral" begin="2036" end="2040"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="2046" end="2046" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="2058" end="2067" value=" |n|-->n "/>
                <thenStatements xsi:type="statements:Text" begin="2073" end="2073" value=""/>
                <thenStatements xsi:type="statements:If" begin="2090" end="2636">
                  <condition xsi:type="expressions:Parenthesis" begin="2090" end="2102">
                    <expression xsi:type="expressions:Operator" begin="2091" end="2101" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="2091" end="2096">
                        <calls begin="2091" end="2096" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="2100" end="2101" value="1"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="2107" end="2107" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="2123" end="2132" value=" |n|-->1 "/>
                  <thenStatements xsi:type="statements:Text" begin="2138" end="2138" value=""/>
                  <thenStatements xsi:type="statements:If" begin="2159" end="2363">
                    <condition xsi:type="expressions:Parenthesis" begin="2159" end="2189">
                      <expression xsi:type="expressions:Operator" begin="2160" end="2188" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="2160" end="2183">
                          <calls begin="2160" end="2177" name="oppositeAttribute" prefix=""/>
                          <calls begin="2178" end="2183" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="2187" end="2188" value="1"/>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="2194" end="2194" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="2214" end="2223" value=" |1|-->1 "/>
                    <thenStatements xsi:type="statements:Text" begin="2229" end="2233" value="    "/>
                    <thenStatements xsi:type="statements:Feature" begin="2235" end="2248">
                      <expression xsi:type="expressions:CallSet" begin="2235" end="2248">
                        <calls begin="2235" end="2248" name="genForeignKey" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="2250" end="2260" value=" UNIQUE,&#xD;&#xA;"/>
                    <elseStatements xsi:type="statements:Text" begin="2288" end="2288" value=""/>
                    <elseStatements xsi:type="statements:Comment" begin="2308" end="2317" value=" |*|-->1 "/>
                    <elseStatements xsi:type="statements:Text" begin="2323" end="2327" value="    "/>
                    <elseStatements xsi:type="statements:Feature" begin="2329" end="2342">
                      <expression xsi:type="expressions:CallSet" begin="2329" end="2342">
                        <calls begin="2329" end="2342" name="genForeignKey" prefix=""/>
                      </expression>
                    </elseStatements>
                    <elseStatements xsi:type="statements:Text" begin="2344" end="2347" value=",&#xD;&#xA;"/>
                  </thenStatements>
                  <elseStatements xsi:type="statements:Text" begin="2406" end="2406" value=""/>
                  <elseStatements xsi:type="statements:Comment" begin="2422" end="2429" value=" n-->* "/>
                  <elseStatements xsi:type="statements:Text" begin="2435" end="2435" value=""/>
                  <elseStatements xsi:type="statements:If" begin="2456" end="2605">
                    <condition xsi:type="expressions:Parenthesis" begin="2456" end="2486">
                      <expression xsi:type="expressions:Operator" begin="2457" end="2485" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="2457" end="2480">
                          <calls begin="2457" end="2474" name="oppositeAttribute" prefix=""/>
                          <calls begin="2475" end="2480" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="2484" end="2485" value="1"/>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="2491" end="2491" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="2511" end="2520" value=" |1|-->* "/>
                    <elseStatements xsi:type="statements:Text" begin="2554" end="2554" value=""/>
                    <elseStatements xsi:type="statements:Comment" begin="2574" end="2583" value=" |*|-->* "/>
                  </elseStatements>
                </thenStatements>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="2661" end="2739">
                    <expression xsi:type="expressions:Operator" begin="2662" end="2738" operator="&amp;&amp;">
                      <operands xsi:type="expressions:Parenthesis" begin="2662" end="2724">
                        <expression xsi:type="expressions:Operator" begin="2663" end="2723" operator="||">
                          <operands xsi:type="expressions:Operator" begin="2663" end="2692" operator="==">
                            <operands xsi:type="expressions:CallSet" begin="2663" end="2686">
                              <calls begin="2663" end="2680" name="oppositeAttribute" prefix=""/>
                              <calls begin="2681" end="2686" name="upper" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="2690" end="2692" value="-1"/>
                          </operands>
                          <operands xsi:type="expressions:Operator" begin="2696" end="2723" operator=">">
                            <operands xsi:type="expressions:CallSet" begin="2696" end="2719">
                              <calls begin="2696" end="2713" name="oppositeAttribute" prefix=""/>
                              <calls begin="2714" end="2719" name="upper" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="2722" end="2723" value="1"/>
                          </operands>
                        </expression>
                      </operands>
                      <operands xsi:type="expressions:Operator" begin="2728" end="2738" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="2728" end="2733">
                          <calls begin="2728" end="2733" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="2737" end="2738" value="1"/>
                      </operands>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="2748" end="2748" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="2764" end="2774" value=" |*|&lt;-->1 "/>
                  <thenStatements xsi:type="statements:Text" begin="2780" end="2784" value="    "/>
                  <thenStatements xsi:type="statements:Feature" begin="2786" end="2799">
                    <expression xsi:type="expressions:CallSet" begin="2786" end="2799">
                      <calls begin="2786" end="2799" name="genForeignKey" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="2801" end="2804" value=",&#xD;&#xA;"/>
                </elseIf>
                <elseIf>
                  <condition xsi:type="expressions:Parenthesis" begin="2823" end="2852">
                    <expression xsi:type="expressions:Operator" begin="2825" end="2851" operator="==">
                      <operands xsi:type="expressions:CallSet" begin="2825" end="2841">
                        <calls begin="2825" end="2841" name="isMainEndPoint" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:StringLiteral" begin="2845" end="2851" value="true"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="2857" end="2857" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="2869" end="2879" value=" |n|&lt;-->n "/>
                  <thenStatements xsi:type="statements:Text" begin="2885" end="2885" value=""/>
                  <thenStatements xsi:type="statements:If" begin="2902" end="3026">
                    <condition xsi:type="expressions:Parenthesis" begin="2902" end="2946">
                      <expression xsi:type="expressions:Operator" begin="2903" end="2945" operator="&amp;&amp;">
                        <operands xsi:type="expressions:Operator" begin="2903" end="2913" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="2903" end="2908">
                            <calls begin="2903" end="2908" name="upper" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:IntegerLiteral" begin="2912" end="2913" value="1"/>
                        </operands>
                        <operands xsi:type="expressions:Operator" begin="2917" end="2945" operator="==">
                          <operands xsi:type="expressions:CallSet" begin="2917" end="2940">
                            <calls begin="2917" end="2934" name="oppositeAttribute" prefix=""/>
                            <calls begin="2935" end="2940" name="upper" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:IntegerLiteral" begin="2944" end="2945" value="1"/>
                        </operands>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="2951" end="2951" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="2967" end="2977" value=" |1|&lt;-->1 "/>
                    <thenStatements xsi:type="statements:Text" begin="2983" end="2987" value="    "/>
                    <thenStatements xsi:type="statements:Feature" begin="2989" end="3002">
                      <expression xsi:type="expressions:CallSet" begin="2989" end="3002">
                        <calls begin="2989" end="3002" name="genForeignKey" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="3004" end="3014" value=" UNIQUE,&#xD;&#xA;"/>
                  </thenStatements>
                </elseIf>
              </statements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3059" end="3059" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="3067" end="3090" value=" Opposite associations "/>
            <thenStatements xsi:type="statements:Text" begin="3096" end="3096" value=""/>
            <thenStatements xsi:type="statements:For" begin="3106" end="3555">
              <iterator xsi:type="expressions:Parenthesis" begin="3106" end="3124">
                <expression xsi:type="expressions:CallSet" begin="3107" end="3123">
                  <calls begin="3107" end="3123" name="pointedAttribute" prefix=""/>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="3129" end="3129" value=""/>
              <statements xsi:type="statements:Comment" begin="3137" end="3146" value=" n---|n| "/>
              <statements xsi:type="statements:Text" begin="3152" end="3152" value=""/>
              <statements xsi:type="statements:If" begin="3165" end="3544">
                <condition xsi:type="expressions:Parenthesis" begin="3165" end="3183">
                  <expression xsi:type="expressions:Operator" begin="3166" end="3182" operator="==">
                    <operands xsi:type="expressions:CallSet" begin="3166" end="3174">
                      <calls begin="3166" end="3174" name="opposite" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:NullLiteral" begin="3178" end="3182"/>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="3188" end="3188" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="3200" end="3209" value=" n-->|n| "/>
                <thenStatements xsi:type="statements:Text" begin="3215" end="3215" value=""/>
                <thenStatements xsi:type="statements:If" begin="3232" end="3529">
                  <condition xsi:type="expressions:Parenthesis" begin="3232" end="3244">
                    <expression xsi:type="expressions:Operator" begin="3233" end="3243" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="3233" end="3238">
                        <calls begin="3233" end="3238" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="3242" end="3243" value="1"/>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="3249" end="3249" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="3265" end="3274" value=" n-->|*| "/>
                  <thenStatements xsi:type="statements:Text" begin="3280" end="3280" value=""/>
                  <thenStatements xsi:type="statements:If" begin="3301" end="3510">
                    <condition xsi:type="expressions:Parenthesis" begin="3301" end="3331">
                      <expression xsi:type="expressions:Operator" begin="3302" end="3330" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="3302" end="3325">
                          <calls begin="3302" end="3319" name="oppositeAttribute" prefix=""/>
                          <calls begin="3320" end="3325" name="upper" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="3329" end="3330" value="1"/>
                      </expression>
                    </condition>
                    <thenStatements xsi:type="statements:Text" begin="3336" end="3336" value=""/>
                    <thenStatements xsi:type="statements:Comment" begin="3356" end="3365" value=" 1-->|*| "/>
                    <thenStatements xsi:type="statements:Text" begin="3371" end="3379" value="    REF_"/>
                    <thenStatements xsi:type="statements:Feature" begin="3381" end="3424">
                      <expression xsi:type="expressions:CallSet" begin="3381" end="3424">
                        <calls begin="3381" end="3398" name="oppositeAttribute" prefix=""/>
                        <calls begin="3399" end="3403" name="type" prefix=""/>
                        <calls begin="3404" end="3408" name="name" prefix=""/>
                        <calls begin="3409" end="3424" name="toSqlNotation" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="3426" end="3427" value="_"/>
                    <thenStatements xsi:type="statements:Feature" begin="3429" end="3449">
                      <expression xsi:type="expressions:CallSet" begin="3429" end="3449">
                        <calls begin="3429" end="3433" name="name" prefix=""/>
                        <calls begin="3434" end="3449" name="toSqlNotation" prefix=""/>
                      </expression>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="3451" end="3458" value="_ID INT"/>
                    <thenStatements xsi:type="statements:If" begin="3463" end="3486">
                      <condition xsi:type="expressions:Parenthesis" begin="3463" end="3474">
                        <expression xsi:type="expressions:Operator" begin="3464" end="3473" operator=">">
                          <operands xsi:type="expressions:CallSet" begin="3464" end="3469">
                            <calls begin="3464" end="3469" name="lower" prefix=""/>
                          </operands>
                          <operands xsi:type="expressions:IntegerLiteral" begin="3472" end="3473"/>
                        </expression>
                      </condition>
                      <thenStatements xsi:type="statements:Text" begin="3477" end="3486" value=" NOT NULL"/>
                    </thenStatements>
                    <thenStatements xsi:type="statements:Text" begin="3491" end="3494" value=",&#xD;&#xA;"/>
                  </thenStatements>
                </thenStatements>
              </statements>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3562" end="3562" value=""/>
            <thenStatements xsi:type="statements:Comment" begin="3570" end="3583" value=" Inheritance "/>
            <thenStatements xsi:type="statements:Text" begin="3589" end="3589" value=""/>
            <thenStatements xsi:type="statements:If" begin="3598" end="3812">
              <condition xsi:type="expressions:Parenthesis" begin="3598" end="3619">
                <expression xsi:type="expressions:Not" begin="3599" end="3618">
                  <expression xsi:type="expressions:CallSet" begin="3600" end="3618">
                    <calls begin="3600" end="3610" name="superClass" prefix=""/>
                    <calls begin="3611" end="3618" name="isEmpty" prefix=""/>
                  </expression>
                </expression>
              </condition>
              <thenStatements xsi:type="statements:Text" begin="3624" end="3641" value="    REF_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="3643" end="3674">
                <expression xsi:type="expressions:CallSet" begin="3643" end="3674">
                  <calls begin="3643" end="3653" name="superClass" prefix=""/>
                  <calls begin="3654" end="3658" name="name" prefix=""/>
                  <calls begin="3659" end="3674" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3676" end="3729" value="_ID INT NOT NULL,    &#xD;&#xA;    PRIMARY KEY (REF_INHERITS_"/>
              <thenStatements xsi:type="statements:Feature" begin="3731" end="3762">
                <expression xsi:type="expressions:CallSet" begin="3731" end="3762">
                  <calls begin="3731" end="3741" name="superClass" prefix=""/>
                  <calls begin="3742" end="3746" name="name" prefix=""/>
                  <calls begin="3747" end="3762" name="toSqlNotation" prefix=""/>
                </expression>
              </thenStatements>
              <thenStatements xsi:type="statements:Text" begin="3764" end="3770" value="_ID)&#xD;&#xA;"/>
              <elseStatements xsi:type="statements:Text" begin="3786" end="3808" value="    PRIMARY KEY (ID)&#xD;&#xA;"/>
            </thenStatements>
            <thenStatements xsi:type="statements:Text" begin="3819" end="3825" value=");&#xD;&#xA;&#xD;&#xA;"/>
            <thenStatements xsi:type="statements:Comment" begin="3833" end="3875" value=" Join table for many to many associations "/>
            <thenStatements xsi:type="statements:Text" begin="3881" end="3881" value=""/>
            <thenStatements xsi:type="statements:For" begin="3891" end="4844">
              <iterator xsi:type="expressions:Parenthesis" begin="3891" end="3954">
                <expression xsi:type="expressions:CallSet" begin="3892" end="3953">
                  <calls begin="3892" end="3909" name="getAssociations" prefix=""/>
                  <calls begin="3910" end="3940" name="oppositeAttributeOf" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="3930" end="3939">
                      <calls begin="3930" end="3939" name="current" prefix=""/>
                    </arguments>
                    <filter xsi:type="expressions:CallSet" begin="3941" end="3952">
                      <calls begin="3941" end="3952" name="isNavigable" prefix=""/>
                    </filter>
                  </calls>
                </expression>
              </iterator>
              <statements xsi:type="statements:Text" begin="3959" end="3959" value=""/>
              <statements xsi:type="statements:Comment" begin="3967" end="3974" value=" n---n "/>
              <statements xsi:type="statements:Text" begin="3980" end="3980" value=""/>
              <statements xsi:type="statements:If" begin="3993" end="4833">
                <condition xsi:type="expressions:Parenthesis" begin="3993" end="4037">
                  <expression xsi:type="expressions:Operator" begin="3994" end="4036" operator="&amp;&amp;">
                    <operands xsi:type="expressions:Operator" begin="3994" end="4004" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="3994" end="3999">
                        <calls begin="3994" end="3999" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="4003" end="4004" value="1"/>
                    </operands>
                    <operands xsi:type="expressions:Operator" begin="4008" end="4036" operator="!=">
                      <operands xsi:type="expressions:CallSet" begin="4008" end="4031">
                        <calls begin="4008" end="4025" name="oppositeAttribute" prefix=""/>
                        <calls begin="4026" end="4031" name="upper" prefix=""/>
                      </operands>
                      <operands xsi:type="expressions:IntegerLiteral" begin="4035" end="4036" value="1"/>
                    </operands>
                  </expression>
                </condition>
                <thenStatements xsi:type="statements:Text" begin="4042" end="4042" value=""/>
                <thenStatements xsi:type="statements:Comment" begin="4054" end="4061" value=" *---* "/>
                <thenStatements xsi:type="statements:Text" begin="4067" end="4067" value=""/>
                <thenStatements xsi:type="statements:If" begin="4084" end="4818">
                  <condition xsi:type="expressions:Parenthesis" begin="4084" end="4159">
                    <expression xsi:type="expressions:Operator" begin="4090" end="4158" operator="||">
                      <operands xsi:type="expressions:Operator" begin="4090" end="4106" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="4090" end="4098">
                          <calls begin="4090" end="4098" name="opposite" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:NullLiteral" begin="4102" end="4106"/>
                      </operands>
                      <operands xsi:type="expressions:Operator" begin="4132" end="4158" operator="==">
                        <operands xsi:type="expressions:CallSet" begin="4132" end="4148">
                          <calls begin="4132" end="4148" name="isMainEndPoint" prefix=""/>
                        </operands>
                        <operands xsi:type="expressions:StringLiteral" begin="4152" end="4158" value="true"/>
                      </operands>
                    </expression>
                  </condition>
                  <thenStatements xsi:type="statements:Text" begin="4164" end="4164" value=""/>
                  <thenStatements xsi:type="statements:Comment" begin="4180" end="4189" value=" *-->|*| "/>
                  <thenStatements xsi:type="statements:Text" begin="4195" end="4277" value="&#xD;&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4279" end="4322">
                    <expression xsi:type="expressions:CallSet" begin="4279" end="4322">
                      <calls begin="4279" end="4296" name="oppositeAttribute" prefix=""/>
                      <calls begin="4297" end="4301" name="type" prefix=""/>
                      <calls begin="4302" end="4306" name="name" prefix=""/>
                      <calls begin="4307" end="4322" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4324" end="4325" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4327" end="4352">
                    <expression xsi:type="expressions:CallSet" begin="4327" end="4352">
                      <calls begin="4327" end="4331" name="type" prefix=""/>
                      <calls begin="4332" end="4336" name="name" prefix=""/>
                      <calls begin="4337" end="4352" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4354" end="4395" value="]') AND type in (N'U'))&#xD;&#xA;DROP TABLE JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4397" end="4440">
                    <expression xsi:type="expressions:CallSet" begin="4397" end="4440">
                      <calls begin="4397" end="4414" name="oppositeAttribute" prefix=""/>
                      <calls begin="4415" end="4419" name="type" prefix=""/>
                      <calls begin="4420" end="4424" name="name" prefix=""/>
                      <calls begin="4425" end="4440" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4442" end="4443" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4445" end="4470">
                    <expression xsi:type="expressions:CallSet" begin="4445" end="4470">
                      <calls begin="4445" end="4449" name="type" prefix=""/>
                      <calls begin="4450" end="4454" name="name" prefix=""/>
                      <calls begin="4455" end="4470" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4472" end="4492" value="&#xD;&#xA;CREATE TABLE JOIN_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4494" end="4537">
                    <expression xsi:type="expressions:CallSet" begin="4494" end="4537">
                      <calls begin="4494" end="4511" name="oppositeAttribute" prefix=""/>
                      <calls begin="4512" end="4516" name="type" prefix=""/>
                      <calls begin="4517" end="4521" name="name" prefix=""/>
                      <calls begin="4522" end="4537" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4539" end="4540" value="_"/>
                  <thenStatements xsi:type="statements:Feature" begin="4542" end="4567">
                    <expression xsi:type="expressions:CallSet" begin="4542" end="4567">
                      <calls begin="4542" end="4546" name="type" prefix=""/>
                      <calls begin="4547" end="4551" name="name" prefix=""/>
                      <calls begin="4552" end="4567" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4569" end="4578" value="&#xD;&#xA;(&#xD;&#xA;    "/>
                  <thenStatements xsi:type="statements:Feature" begin="4580" end="4623">
                    <expression xsi:type="expressions:CallSet" begin="4580" end="4623">
                      <calls begin="4580" end="4597" name="oppositeAttribute" prefix=""/>
                      <calls begin="4598" end="4602" name="type" prefix=""/>
                      <calls begin="4603" end="4607" name="name" prefix=""/>
                      <calls begin="4608" end="4623" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4625" end="4648" value="_ID INT NOT NULL,&#xD;&#xA;    "/>
                  <thenStatements xsi:type="statements:Feature" begin="4650" end="4675">
                    <expression xsi:type="expressions:CallSet" begin="4650" end="4675">
                      <calls begin="4650" end="4654" name="type" prefix=""/>
                      <calls begin="4655" end="4659" name="name" prefix=""/>
                      <calls begin="4660" end="4675" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4677" end="4713" value="_ID INT NOT NULL,&#xD;&#xA;    PRIMARY KEY ("/>
                  <thenStatements xsi:type="statements:Feature" begin="4715" end="4758">
                    <expression xsi:type="expressions:CallSet" begin="4715" end="4758">
                      <calls begin="4715" end="4732" name="oppositeAttribute" prefix=""/>
                      <calls begin="4733" end="4737" name="type" prefix=""/>
                      <calls begin="4738" end="4742" name="name" prefix=""/>
                      <calls begin="4743" end="4758" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4760" end="4765" value="_ID, "/>
                  <thenStatements xsi:type="statements:Feature" begin="4767" end="4792">
                    <expression xsi:type="expressions:CallSet" begin="4767" end="4792">
                      <calls begin="4767" end="4771" name="type" prefix=""/>
                      <calls begin="4772" end="4776" name="name" prefix=""/>
                      <calls begin="4777" end="4792" name="toSqlNotation" prefix=""/>
                    </expression>
                  </thenStatements>
                  <thenStatements xsi:type="statements:Text" begin="4794" end="4806" value="_ID)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;"/>
                </thenStatements>
              </statements>
            </thenStatements>
          </statements>
        </statements>
      </scripts>
      <scripts begin="4961" end="5004">
        <descriptor begin="4874" end="4909" name="convertToSqlType" type="Type">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Feature" begin="4963" end="5002">
          <expression xsi:type="expressions:CallSet" begin="4963" end="5002">
            <calls begin="4963" end="5002" name="getProperty" prefix="">
              <arguments xsi:type="expressions:Operator" begin="4975" end="5001" operator="+">
                <operands xsi:type="expressions:StringLiteral" begin="4975" end="4996" value="sql.typeconversion."/>
                <operands xsi:type="expressions:CallSet" begin="4997" end="5001">
                  <calls begin="4997" end="5001" name="name" prefix=""/>
                </operands>
              </arguments>
            </calls>
          </expression>
        </statements>
      </scripts>
      <scripts begin="5057" end="5155">
        <descriptor begin="5017" end="5053" name="genForeignKey" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:Text" begin="5057" end="5061" value="REF_"/>
        <statements xsi:type="statements:Feature" begin="5063" end="5088">
          <expression xsi:type="expressions:CallSet" begin="5063" end="5088">
            <calls begin="5063" end="5067" name="type" prefix=""/>
            <calls begin="5068" end="5072" name="name" prefix=""/>
            <calls begin="5073" end="5088" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5090" end="5091" value="_"/>
        <statements xsi:type="statements:Feature" begin="5093" end="5113">
          <expression xsi:type="expressions:CallSet" begin="5093" end="5113">
            <calls begin="5093" end="5097" name="name" prefix=""/>
            <calls begin="5098" end="5113" name="toSqlNotation" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="5115" end="5122" value="_ID INT"/>
        <statements xsi:type="statements:If" begin="5127" end="5150">
          <condition xsi:type="expressions:Parenthesis" begin="5127" end="5138">
            <expression xsi:type="expressions:Operator" begin="5128" end="5137" operator=">">
              <operands xsi:type="expressions:CallSet" begin="5128" end="5133">
                <calls begin="5128" end="5133" name="lower" prefix=""/>
              </operands>
              <operands xsi:type="expressions:IntegerLiteral" begin="5136" end="5137"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="5141" end="5150" value=" NOT NULL"/>
        </statements>
      </scripts>
      <scripts begin="5209" end="5469">
        <descriptor begin="5168" end="5205" name="isMainEndPoint" type="Property">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="5214" end="5464">
          <condition xsi:type="expressions:Parenthesis" begin="5214" end="5435">
            <expression xsi:type="expressions:Operator" begin="5215" end="5434" operator="||">
              <operands xsi:type="expressions:Operator" begin="5215" end="5241" operator="==">
                <operands xsi:type="expressions:CallSet" begin="5215" end="5226">
                  <calls begin="5215" end="5226" name="aggregation" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="5230" end="5241" value="composite"/>
              </operands>
              <operands xsi:type="expressions:Parenthesis" begin="5251" end="5434">
                <expression xsi:type="expressions:Operator" begin="5253" end="5426" operator="&amp;&amp;">
                  <operands xsi:type="expressions:Operator" begin="5253" end="5297" operator="!=">
                    <operands xsi:type="expressions:CallSet" begin="5253" end="5282">
                      <calls begin="5253" end="5270" name="oppositeAttribute" prefix=""/>
                      <calls begin="5271" end="5282" name="aggregation" prefix=""/>
                    </operands>
                    <operands xsi:type="expressions:StringLiteral" begin="5286" end="5297" value="composite"/>
                  </operands>
                  <operands xsi:type="expressions:Parenthesis" begin="5312" end="5426">
                    <expression xsi:type="expressions:Operator" begin="5313" end="5414" operator="||">
                      <operands xsi:type="expressions:Operator" begin="5313" end="5347" operator=">">
                        <operands xsi:type="expressions:CallSet" begin="5313" end="5343">
                          <calls begin="5313" end="5343" name="compare" prefix="">
                            <arguments xsi:type="expressions:CallSet" begin="5321" end="5331">
                              <calls begin="5321" end="5326" name="class" prefix=""/>
                              <calls begin="5327" end="5331" name="name" prefix=""/>
                            </arguments>
                            <arguments xsi:type="expressions:CallSet" begin="5333" end="5342">
                              <calls begin="5333" end="5337" name="type" prefix=""/>
                              <calls begin="5338" end="5342" name="name" prefix=""/>
                            </arguments>
                          </calls>
                        </operands>
                        <operands xsi:type="expressions:IntegerLiteral" begin="5346" end="5347"/>
                      </operands>
                      <operands xsi:type="expressions:Parenthesis" begin="5363" end="5414">
                        <expression xsi:type="expressions:Operator" begin="5364" end="5413" operator="&amp;&amp;">
                          <operands xsi:type="expressions:Operator" begin="5364" end="5377" operator="==">
                            <operands xsi:type="expressions:CallSet" begin="5364" end="5369">
                              <calls begin="5364" end="5369" name="class" prefix=""/>
                            </operands>
                            <operands xsi:type="expressions:CallSet" begin="5373" end="5377">
                              <calls begin="5373" end="5377" name="type" prefix=""/>
                            </operands>
                          </operands>
                          <operands xsi:type="expressions:Operator" begin="5381" end="5413" operator=">">
                            <operands xsi:type="expressions:CallSet" begin="5381" end="5409">
                              <calls begin="5381" end="5409" name="compare" prefix="">
                                <arguments xsi:type="expressions:CallSet" begin="5389" end="5393">
                                  <calls begin="5389" end="5393" name="name" prefix=""/>
                                </arguments>
                                <arguments xsi:type="expressions:CallSet" begin="5395" end="5408">
                                  <calls begin="5395" end="5403" name="opposite" prefix=""/>
                                  <calls begin="5404" end="5408" name="name" prefix=""/>
                                </arguments>
                              </calls>
                            </operands>
                            <operands xsi:type="expressions:IntegerLiteral" begin="5412" end="5413"/>
                          </operands>
                        </expression>
                      </operands>
                    </expression>
                  </operands>
                </expression>
              </operands>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="5445" end="5449" value="true"/>
          <elseStatements xsi:type="statements:Text" begin="5459" end="5464" value="false"/>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Template" name="org.acceleo.module.pim.uml21.gen.sql.typeConversion" imports="/0/@resources.17" beginTag="&lt;%" endTag="%>">
      <scripts begin="517" end="710">
        <descriptor begin="448" end="483" name="convertToSqlType" type="Type">
          <file/>
        </descriptor>
        <statements xsi:type="statements:If" begin="522" end="610">
          <condition xsi:type="expressions:Parenthesis" begin="522" end="541">
            <expression xsi:type="expressions:Operator" begin="523" end="540" operator="==">
              <operands xsi:type="expressions:CallSet" begin="523" end="527">
                <calls begin="523" end="527" name="name" prefix=""/>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="531" end="540" value="Integer"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="544" end="547" value="INT"/>
          <elseStatements xsi:type="statements:If" begin="564" end="605">
            <condition xsi:type="expressions:Parenthesis" begin="564" end="583">
              <expression xsi:type="expressions:Operator" begin="565" end="582" operator="==">
                <operands xsi:type="expressions:CallSet" begin="565" end="569">
                  <calls begin="565" end="569" name="name" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="573" end="582" value="Boolean"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="586" end="595" value="NUMBER(1)"/>
          </elseStatements>
        </statements>
        <statements xsi:type="statements:If" begin="622" end="705">
          <condition xsi:type="expressions:Parenthesis" begin="622" end="640">
            <expression xsi:type="expressions:Operator" begin="623" end="639" operator="==">
              <operands xsi:type="expressions:CallSet" begin="623" end="627">
                <calls begin="623" end="627" name="name" prefix=""/>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="631" end="639" value="String"/>
            </expression>
          </condition>
          <thenStatements xsi:type="statements:Text" begin="643" end="655" value="VARCHAR(255)"/>
          <elseStatements xsi:type="statements:If" begin="672" end="700">
            <condition xsi:type="expressions:Parenthesis" begin="672" end="688">
              <expression xsi:type="expressions:Operator" begin="673" end="687" operator="==">
                <operands xsi:type="expressions:CallSet" begin="673" end="677">
                  <calls begin="673" end="677" name="name" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="681" end="687" value="Date"/>
              </expression>
            </condition>
            <thenStatements xsi:type="statements:Text" begin="691" end="700" value="TIMESTAMP"/>
          </elseStatements>
        </statements>
      </scripts>
    </resources>
    <resources xsi:type="core:Metamodel" name="http://www.eclipse.org/uml2/2.0.0/UML"/>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.StringServices">
      <methods name="toPath" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="repeat" return="java.lang.String">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="int"/>
      </methods>
      <methods name="uniqueCode" return="int">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="toStandardNotation" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="toPkgName" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="isPrimitiveType" return="boolean">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="compare" return="int">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="java.lang.String"/>
      </methods>
    </resources>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.ListServices">
      <methods name="filterExistProperty" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
        <parameters type="boolean"/>
      </methods>
      <methods name="getAllInstances" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENode"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="isEmpty" return="boolean">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
    </resources>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.services.Uml2Services">
      <methods name="getAssociations" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="getAssociations" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Interface"/>
      </methods>
      <methods name="isNavigable" return="boolean">
        <parameters type="org.eclipse.uml2.uml.Property"/>
      </methods>
      <methods name="returnResult" return="org.eclipse.uml2.uml.Parameter">
        <parameters type="org.eclipse.uml2.uml.Operation"/>
      </methods>
      <methods name="subClass" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="hasStereotype" return="boolean">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="filterWithStereotype" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="attributeIds" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
      <methods name="filterWithOutStereotype" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="attributeNotIds" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENodeList"/>
      </methods>
      <methods name="primitiveAttributes" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="pointedAttribute" return="java.util.List">
        <parameters type="org.eclipse.uml2.uml.Class"/>
      </methods>
      <methods name="oppositeAttribute" return="org.eclipse.uml2.uml.Property">
        <parameters type="org.eclipse.uml2.uml.Property"/>
      </methods>
      <methods name="oppositeAttributeOf" return="org.eclipse.uml2.uml.Property">
        <parameters type="org.eclipse.uml2.uml.Association"/>
        <parameters type="org.eclipse.uml2.uml.Classifier"/>
      </methods>
      <methods name="getRealParameters" return="fr.obeo.acceleo.gen.template.eval.ENodeList">
        <parameters type="fr.obeo.acceleo.gen.template.eval.ENode"/>
      </methods>
      <methods name="getElementByXmiId" return="org.eclipse.emf.ecore.EObject">
        <parameters type="java.lang.String"/>
        <parameters type="org.eclipse.emf.ecore.EObject"/>
      </methods>
      <methods name="getValue" return="java.lang.Object">
        <parameters type="org.eclipse.uml2.uml.Element"/>
        <parameters type="java.lang.String"/>
        <parameters type="java.lang.String"/>
      </methods>
    </resources>
    <resources xsi:type="core:Service" name="org.acceleo.module.pim.uml21.gen.sql.services.SqlTypeServices">
      <methods name="toSqlNotation" return="java.lang.String">
        <parameters type="java.lang.String"/>
      </methods>
      <methods name="isBiAssociationSource" return="boolean">
        <parameters type="org.eclipse.uml2.uml.Property"/>
      </methods>
    </resources>
  </mt:ResourceSet>
  <ecore:EAnnotation source="positions"/>
</xmi:XMI>
